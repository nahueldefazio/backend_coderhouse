v8-version,9,4,146,24,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7a7e90000,0x7ff7abbb2000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ff9995a0000,0x7ff9997a9000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ff997d40000,0x7ff997dfd000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ff996f60000,0x7ff9972d9000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ff9976d0000,0x7ff99773f000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ff998cf0000,0x7ff998e10000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ff997e00000,0x7ff997e08000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ff9946e0000,0x7ff994901000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ff997890000,0x7ff99793e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ff996dc0000,0x7ff996ed1000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ff9994b0000,0x7ff999553000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ff998620000,0x7ff9986be000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ff998a60000,0x7ff998c0c000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ff996b00000,0x7ff996b26000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ff997c10000,0x7ff997c39000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ff996ca0000,0x7ff996db2000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ff9972e0000,0x7ff99737d000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ff996b30000,0x7ff996c92000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ff996100000,0x7ff996129000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ff995770000,0x7ff99579d000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\bcrypt.dll,0x7ff996470000,0x7ff996497000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ff98c3d0000,0x7ff98c403000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ff996250000,0x7ff99625c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ff997a10000,0x7ff997a41000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ff9956b0000,0x7ff9956fd000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ff995620000,0x7ff995633000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ff993dc0000,0x7ff993e6c000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ff9986e0000,0x7ff998a58000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ff996060000,0x7ff9960c7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ff995c40000,0x7ff995c58000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ff996ee0000,0x7ff996f5f000,0
shared-library-end
tick,0x7ff999643f34,170832,0,0x0,6
profiler,begin,1000
new,CodeRange,0x1d3d5470000,0
new,MemoryChunk,0xe87dac0000,262144
new,MemoryChunk,0x97bb440000,262144
new,MemoryChunk,0x18b94180000,262144
new,MemoryChunk,0x3500ef40000,262144
new,MemoryChunk,0x1e93600000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0xc90ecc0000,262144
new,MemoryChunk,0x203de640000,262144
new,MemoryChunk,0xb214c0000,262144
new,MemoryChunk,0x13f332c0000,262144
new,MemoryChunk,0x308c1000000,262144
new,MemoryChunk,0x72ad140000,262144
new,MemoryChunk,0xb16c500000,262144
new,MemoryChunk,0x1d3d5480000,262144
new,MemoryChunk,0x3e54b680000,262144
code-creation,Builtin,2,176304,0x7ff7a8a004a4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,176334,0x7ff7a8a00a04,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,176342,0x7ff7a8a00be4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,176349,0x7ff7a8a00e64,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,176356,0x7ff7a8a00f44,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,176364,0x7ff7a8a010c4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,176594,0x7ff7a8a01164,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,176602,0x7ff7a8a011a4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,176610,0x7ff7a8a01324,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,176617,0x7ff7a8a014e4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,176679,0x7ff7a8a016a4,104,CallBoundFunction
code-creation,Builtin,2,176689,0x7ff7a8a01724,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,176696,0x7ff7a8a017a4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,176704,0x7ff7a8a01824,120,Call_ReceiverIsAny
code-creation,Builtin,2,176710,0x7ff7a8a018a4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,176718,0x7ff7a8a01ca4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,176725,0x7ff7a8a020a4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,176733,0x7ff7a8a024e4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,176740,0x7ff7a8a02924,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,176747,0x7ff7a8a02d64,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,176755,0x7ff7a8a031a4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,176762,0x7ff7a8a03564,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,176785,0x7ff7a8a03924,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,176793,0x7ff7a8a03ce4,736,CallProxy
code-creation,Builtin,2,176799,0x7ff7a8a03fe4,148,CallVarargs
code-creation,Builtin,2,176805,0x7ff7a8a04084,944,CallWithSpread
code-creation,Builtin,2,176812,0x7ff7a8a04444,1956,CallWithSpread_Baseline
code-creation,Builtin,2,176819,0x7ff7a8a04c04,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,176826,0x7ff7a8a053a4,864,CallWithArrayLike
code-creation,Builtin,2,176833,0x7ff7a8a05724,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,176840,0x7ff7a8a05e44,156,CallForwardVarargs
code-creation,Builtin,2,176853,0x7ff7a8a05ee4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,176861,0x7ff7a8a05f84,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,176869,0x7ff7a8a06024,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,176876,0x7ff7a8a06124,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,176884,0x7ff7a8a06264,28,ConstructFunction
code-creation,Builtin,2,176891,0x7ff7a8a06284,104,ConstructBoundFunction
code-creation,Builtin,2,176898,0x7ff7a8a06304,28,ConstructedNonConstructable
code-creation,Builtin,2,176911,0x7ff7a8a06324,100,Construct
code-creation,Builtin,2,176919,0x7ff7a8a063a4,148,ConstructVarargs
code-creation,Builtin,2,176926,0x7ff7a8a06444,968,ConstructWithSpread
code-creation,Builtin,2,176933,0x7ff7a8a06824,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,176943,0x7ff7a8a06f04,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,176953,0x7ff7a8a07604,924,ConstructWithArrayLike
code-creation,Builtin,2,176966,0x7ff7a8a079a4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,176974,0x7ff7a8a08024,196,ConstructForwardVarargs
code-creation,Builtin,2,176981,0x7ff7a8a08104,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,176988,0x7ff7a8a081e4,804,Construct_Baseline
code-creation,Builtin,2,176994,0x7ff7a8a08524,820,Construct_WithFeedback
code-creation,Builtin,2,177008,0x7ff7a8a08864,476,JSConstructStubGeneric
code-creation,Builtin,2,177016,0x7ff7a8a08a44,376,JSBuiltinsConstructStub
code-creation,Builtin,2,177023,0x7ff7a8a08bc4,676,FastNewObject
code-creation,Builtin,2,177029,0x7ff7a8a08e84,292,FastNewClosure
code-creation,Builtin,2,177036,0x7ff7a8a08fc4,720,ConstructProxy
code-creation,Builtin,2,177043,0x7ff7a8a092a4,360,JSEntry
code-creation,Builtin,2,177055,0x7ff7a8a09424,360,JSConstructEntry
code-creation,Builtin,2,177063,0x7ff7a8a095a4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,177070,0x7ff7a8a09724,96,JSEntryTrampoline
code-creation,Builtin,2,177076,0x7ff7a8a097a4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,177083,0x7ff7a8a09824,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,177090,0x7ff7a8a09944,1116,StringCodePointAt
code-creation,Builtin,2,177103,0x7ff7a8a09da4,1552,StringFromCodePointAt
code-creation,Builtin,2,177110,0x7ff7a8a0a3c4,544,StringEqual
code-creation,Builtin,2,177117,0x7ff7a8a0a604,276,StringGreaterThan
code-creation,Builtin,2,177154,0x7ff7a8a0a724,276,StringGreaterThanOrEqual
code-creation,Builtin,2,177166,0x7ff7a8a0a844,276,StringLessThan
code-creation,Builtin,2,177172,0x7ff7a8a0a964,276,StringLessThanOrEqual
code-creation,Builtin,2,177178,0x7ff7a8a0aa84,2492,StringSubstring
code-creation,Builtin,2,177184,0x7ff7a8a0b444,80,OrderedHashTableHealIndex
code-creation,Builtin,2,177190,0x7ff7a8a0b4a4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,177196,0x7ff7a8a0b944,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,177202,0x7ff7a8a0b9a4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,177208,0x7ff7a8a0ba04,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,177215,0x7ff7a8a0ba64,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,177221,0x7ff7a8a0bac4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,177227,0x7ff7a8a0bb24,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,177234,0x7ff7a8a0bb84,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,177240,0x7ff7a8a0bbe4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,177246,0x7ff7a8a0bcc4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,177252,0x7ff7a8a0bd04,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,177258,0x7ff7a8a0bf64,56,BaselineOnStackReplacement
code-creation,Builtin,2,177264,0x7ff7a8a0bfa4,84,BaselineLeaveFrame
code-creation,Builtin,2,177270,0x7ff7a8a0c004,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,177277,0x7ff7a8a0c0e4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,177283,0x7ff7a8a0c1e4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,177290,0x7ff7a8a0c2c4,1004,CompileLazy
code-creation,Builtin,2,177295,0x7ff7a8a0c6c4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,177301,0x7ff7a8a0c724,252,InstantiateAsmJs
code-creation,Builtin,2,177314,0x7ff7a8a0c824,32,NotifyDeoptimized
code-creation,Builtin,2,177320,0x7ff7a8a0c864,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,177326,0x7ff7a8a0cb84,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,177332,0x7ff7a8a0cea4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,177338,0x7ff7a8a0d1c4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,177344,0x7ff7a8a0d4e4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,177374,0x7ff7a8a0d524,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,177380,0x7ff7a8a0d564,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,177387,0x7ff7a8a0d5a4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,177394,0x7ff7a8a0d604,288,CallApiCallback
code-creation,Builtin,2,177400,0x7ff7a8a0d744,268,CallApiGetter
code-creation,Builtin,2,177406,0x7ff7a8a0d864,12,HandleApiCall
code-creation,Builtin,2,177412,0x7ff7a8a0d884,12,HandleApiCallAsFunction
code-creation,Builtin,2,177418,0x7ff7a8a0d8a4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,177425,0x7ff7a8a0d8c4,64,AllocateInYoungGeneration
code-creation,Builtin,2,177432,0x7ff7a8a0d924,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,177438,0x7ff7a8a0d964,64,AllocateInOldGeneration
code-creation,Builtin,2,177445,0x7ff7a8a0d9c4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,177451,0x7ff7a8a0da04,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,177462,0x7ff7a8a0dbc4,496,GrowFastDoubleElements
code-creation,Builtin,2,177468,0x7ff7a8a0ddc4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,177475,0x7ff7a8a0df64,388,DebugBreakTrampoline
code-creation,Builtin,2,177481,0x7ff7a8a0e104,180,ToNumber
code-creation,Builtin,2,177487,0x7ff7a8a0e1c4,292,ToNumber_Baseline
code-creation,Builtin,2,177494,0x7ff7a8a0e304,360,ToNumeric_Baseline
code-creation,Builtin,2,177500,0x7ff7a8a0e484,104,PlainPrimitiveToNumber
code-creation,Builtin,2,177506,0x7ff7a8a0e504,212,ToNumberConvertBigInt
code-creation,Builtin,2,177512,0x7ff7a8a0e5e4,132,Typeof
code-creation,Builtin,2,177518,0x7ff7a8a0e684,104,BigIntToI64
code-creation,Builtin,2,177524,0x7ff7a8a0e704,4,BigIntToI32Pair
code-creation,Builtin,2,177531,0x7ff7a8a0e724,232,I64ToBigInt
code-creation,Builtin,2,177539,0x7ff7a8a0e824,4,I32PairToBigInt
code-creation,Builtin,2,177546,0x7ff7a8a0e844,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,177552,0x7ff7a8a0e8c4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,177560,0x7ff7a8a0f964,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,177566,0x7ff7a8a13764,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,177572,0x7ff7a8a13884,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,177579,0x7ff7a8a138c4,12,LoadIC_StringLength
code-creation,Builtin,2,177585,0x7ff7a8a138e4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,177591,0x7ff7a8a13904,3056,LoadIC_NoFeedback
code-creation,Builtin,2,177597,0x7ff7a8a14504,32,StoreGlobalIC_Slow
code-creation,Builtin,2,177604,0x7ff7a8a14544,7332,StoreIC_NoFeedback
code-creation,Builtin,2,177610,0x7ff7a8a16204,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,177617,0x7ff7a8a162c4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,177623,0x7ff7a8a16324,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,177630,0x7ff7a8a16424,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,177637,0x7ff7a8a16524,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,177645,0x7ff7a8a16624,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,177652,0x7ff7a8a16724,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,177659,0x7ff7a8a19f44,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,177667,0x7ff7a8a1c4e4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,177674,0x7ff7a8a1f924,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,177681,0x7ff7a8a21104,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,177688,0x7ff7a8a23244,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,177695,0x7ff7a8a27e04,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,177703,0x7ff7a8a29f44,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,177710,0x7ff7a8a2ca64,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,177716,0x7ff7a8a2cd84,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,177722,0x7ff7a8a2ce44,72,HasIndexedInterceptorIC
code-creation,Builtin,2,177729,0x7ff7a8a2cea4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,177735,0x7ff7a8a2cf24,224,DynamicCheckMaps
code-creation,Builtin,2,177741,0x7ff7a8a2d024,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,177748,0x7ff7a8a2d0a4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,177760,0x7ff7a8a2d164,152,EnqueueMicrotask
code-creation,Builtin,2,177766,0x7ff7a8a2d204,8,RunMicrotasksTrampoline
code-creation,Builtin,2,177773,0x7ff7a8a2d224,3476,RunMicrotasks
code-creation,Builtin,2,177779,0x7ff7a8a2dfc4,2636,HasProperty
code-creation,Builtin,2,177785,0x7ff7a8a2ea24,1156,DeleteProperty
code-creation,Builtin,2,177791,0x7ff7a8a2eec4,1972,CopyDataProperties
code-creation,Builtin,2,177797,0x7ff7a8a2f684,9184,SetDataProperties
code-creation,Builtin,2,177803,0x7ff7a8a31a84,28,Abort
code-creation,Builtin,2,177809,0x7ff7a8a31aa4,28,AbortCSAAssert
code-creation,Builtin,2,177815,0x7ff7a8a31ac4,12,EmptyFunction
code-creation,Builtin,2,177839,0x7ff7a8a31ae4,12,Illegal
code-creation,Builtin,2,177846,0x7ff7a8a31b04,12,StrictPoisonPillThrower
code-creation,Builtin,2,177853,0x7ff7a8a31b24,12,UnsupportedThrower
code-creation,Builtin,2,177859,0x7ff7a8a31b44,64,ReturnReceiver
code-creation,Builtin,2,177865,0x7ff7a8a31ba4,28,ArrayConstructor
code-creation,Builtin,2,177871,0x7ff7a8a31bc4,404,ArrayConstructorImpl
code-creation,Builtin,2,177877,0x7ff7a8a31d64,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,177884,0x7ff7a8a31e44,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,177891,0x7ff7a8a31f24,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,177899,0x7ff7a8a31fe4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,177929,0x7ff7a8a320a4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,177938,0x7ff7a8a32164,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,178013,0x7ff7a8a32224,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,178025,0x7ff7a8a322e4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,178037,0x7ff7a8a323a4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,178044,0x7ff7a8a325c4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,178052,0x7ff7a8a327c4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,178064,0x7ff7a8a32984,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,178073,0x7ff7a8a32b24,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,178081,0x7ff7a8a32ce4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,178089,0x7ff7a8a32e84,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,178097,0x7ff7a8a33064,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,178105,0x7ff7a8a33204,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,178112,0x7ff7a8a33264,12,ArrayConcat
code-creation,Builtin,2,178119,0x7ff7a8a33284,12,ArrayPrototypeFill
code-creation,Builtin,2,178125,0x7ff7a8a332a4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,178133,0x7ff7a8a33664,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,178140,0x7ff7a8a33704,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,178147,0x7ff7a8a337e4,548,ArrayIncludes
code-creation,Builtin,2,178154,0x7ff7a8a33a24,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,178161,0x7ff7a8a33d84,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,178168,0x7ff7a8a33e04,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,178175,0x7ff7a8a33e84,552,ArrayIndexOf
code-creation,Builtin,2,178181,0x7ff7a8a340c4,12,ArrayPop
code-creation,Builtin,2,178187,0x7ff7a8a340e4,616,ArrayPrototypePop
code-creation,Builtin,2,178194,0x7ff7a8a34364,12,ArrayPush
code-creation,Builtin,2,178201,0x7ff7a8a34384,2424,ArrayPrototypePush
code-creation,Builtin,2,178207,0x7ff7a8a34d04,12,ArrayShift
code-creation,Builtin,2,178214,0x7ff7a8a34d24,12,ArrayUnshift
code-creation,Builtin,2,178220,0x7ff7a8a34d44,956,CloneFastJSArray
code-creation,Builtin,2,178227,0x7ff7a8a35104,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,178234,0x7ff7a8a359a4,976,ExtractFastJSArray
code-creation,Builtin,2,178240,0x7ff7a8a35d84,260,ArrayPrototypeEntries
code-creation,Builtin,2,178247,0x7ff7a8a35ea4,248,ArrayPrototypeKeys
code-creation,Builtin,2,178254,0x7ff7a8a35fa4,260,ArrayPrototypeValues
code-creation,Builtin,2,178261,0x7ff7a8a360c4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,178268,0x7ff7a8a37224,4168,FlattenIntoArray
code-creation,Builtin,2,178274,0x7ff7a8a38284,4172,FlatMapIntoArray
code-creation,Builtin,2,178281,0x7ff7a8a392e4,372,ArrayPrototypeFlat
code-creation,Builtin,2,178287,0x7ff7a8a39464,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,178294,0x7ff7a8a39624,12,ArrayBufferConstructor
code-creation,Builtin,2,178301,0x7ff7a8a39644,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,178309,0x7ff7a8a39664,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,178316,0x7ff7a8a39684,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,178323,0x7ff7a8a396a4,804,AsyncFunctionEnter
code-creation,Builtin,2,178330,0x7ff7a8a399e4,132,AsyncFunctionReject
code-creation,Builtin,2,178336,0x7ff7a8a39a84,128,AsyncFunctionResolve
code-creation,Builtin,2,178343,0x7ff7a8a39b24,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,178350,0x7ff7a8a39b44,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,178357,0x7ff7a8a3a644,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,178368,0x7ff7a8a3b144,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,178377,0x7ff7a8a3b204,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,178384,0x7ff7a8a3b2c4,12,BigIntConstructor
code-creation,Builtin,2,178391,0x7ff7a8a3b2e4,12,BigIntAsUintN
code-creation,Builtin,2,178397,0x7ff7a8a3b304,12,BigIntAsIntN
code-creation,Builtin,2,178403,0x7ff7a8a3b324,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,178410,0x7ff7a8a3b344,12,BigIntPrototypeToString
code-creation,Builtin,2,178417,0x7ff7a8a3b364,12,BigIntPrototypeValueOf
code-creation,Builtin,2,178424,0x7ff7a8a3b384,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,178439,0x7ff7a8a3b3a4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,178447,0x7ff7a8a3b3c4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,178454,0x7ff7a8a3b3e4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,178461,0x7ff7a8a3b404,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,178468,0x7ff7a8a3b424,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,178474,0x7ff7a8a3b444,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,178484,0x7ff7a8a3b464,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,178494,0x7ff7a8a3b484,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,178501,0x7ff7a8a3b4a4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,178508,0x7ff7a8a3b4c4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,178515,0x7ff7a8a3b4e4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,178522,0x7ff7a8a3b504,12,CallSitePrototypeGetThis
code-creation,Builtin,2,178529,0x7ff7a8a3b524,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,178536,0x7ff7a8a3b544,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,178543,0x7ff7a8a3b564,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,178550,0x7ff7a8a3b584,12,CallSitePrototypeIsEval
code-creation,Builtin,2,178556,0x7ff7a8a3b5a4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,178563,0x7ff7a8a3b5c4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,178570,0x7ff7a8a3b5e4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,178588,0x7ff7a8a3b604,12,CallSitePrototypeToString
code-creation,Builtin,2,178596,0x7ff7a8a3b624,12,ConsoleDebug
code-creation,Builtin,2,178603,0x7ff7a8a3b644,12,ConsoleError
code-creation,Builtin,2,178609,0x7ff7a8a3b664,12,ConsoleInfo
code-creation,Builtin,2,178616,0x7ff7a8a3b684,12,ConsoleLog
code-creation,Builtin,2,178622,0x7ff7a8a3b6a4,12,ConsoleWarn
code-creation,Builtin,2,178629,0x7ff7a8a3b6c4,12,ConsoleDir
code-creation,Builtin,2,178635,0x7ff7a8a3b6e4,12,ConsoleDirXml
code-creation,Builtin,2,178642,0x7ff7a8a3b704,12,ConsoleTable
code-creation,Builtin,2,178661,0x7ff7a8a3b724,12,ConsoleTrace
code-creation,Builtin,2,178668,0x7ff7a8a3b744,12,ConsoleGroup
code-creation,Builtin,2,178674,0x7ff7a8a3b764,12,ConsoleGroupCollapsed
code-creation,Builtin,2,178687,0x7ff7a8a3b784,12,ConsoleGroupEnd
code-creation,Builtin,2,178693,0x7ff7a8a3b7a4,12,ConsoleClear
code-creation,Builtin,2,178698,0x7ff7a8a3b7c4,12,ConsoleCount
code-creation,Builtin,2,178704,0x7ff7a8a3b7e4,12,ConsoleCountReset
code-creation,Builtin,2,178710,0x7ff7a8a3b804,12,ConsoleAssert
code-creation,Builtin,2,178716,0x7ff7a8a3b824,12,ConsoleProfile
code-creation,Builtin,2,178722,0x7ff7a8a3b844,12,ConsoleProfileEnd
code-creation,Builtin,2,178728,0x7ff7a8a3b864,12,ConsoleTime
code-creation,Builtin,2,178734,0x7ff7a8a3b884,12,ConsoleTimeLog
code-creation,Builtin,2,178740,0x7ff7a8a3b8a4,12,ConsoleTimeEnd
code-creation,Builtin,2,178746,0x7ff7a8a3b8c4,12,ConsoleTimeStamp
code-creation,Builtin,2,178752,0x7ff7a8a3b8e4,12,ConsoleContext
code-creation,Builtin,2,178758,0x7ff7a8a3b904,12,DataViewConstructor
code-creation,Builtin,2,178770,0x7ff7a8a3b924,12,DateConstructor
code-creation,Builtin,2,178777,0x7ff7a8a3b944,216,DatePrototypeGetDate
code-creation,Builtin,2,178783,0x7ff7a8a3ba24,216,DatePrototypeGetDay
code-creation,Builtin,2,178789,0x7ff7a8a3bb04,216,DatePrototypeGetFullYear
code-creation,Builtin,2,178796,0x7ff7a8a3bbe4,216,DatePrototypeGetHours
code-creation,Builtin,2,178804,0x7ff7a8a3bcc4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,178812,0x7ff7a8a3bda4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,178818,0x7ff7a8a3be84,216,DatePrototypeGetMonth
code-creation,Builtin,2,178824,0x7ff7a8a3bf64,216,DatePrototypeGetSeconds
code-creation,Builtin,2,178831,0x7ff7a8a3c044,124,DatePrototypeGetTime
code-creation,Builtin,2,178838,0x7ff7a8a3c0c4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,178844,0x7ff7a8a3c1a4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,178850,0x7ff7a8a3c284,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,178857,0x7ff7a8a3c364,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,178863,0x7ff7a8a3c444,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,178869,0x7ff7a8a3c524,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,178876,0x7ff7a8a3c604,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,178883,0x7ff7a8a3c6e4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,178889,0x7ff7a8a3c7c4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,178896,0x7ff7a8a3c8a4,124,DatePrototypeValueOf
code-creation,Builtin,2,178902,0x7ff7a8a3c924,352,DatePrototypeToPrimitive
code-creation,Builtin,2,178908,0x7ff7a8a3caa4,12,DatePrototypeGetYear
code-creation,Builtin,2,178914,0x7ff7a8a3cac4,12,DatePrototypeSetYear
code-creation,Builtin,2,178921,0x7ff7a8a3cae4,12,DateNow
code-creation,Builtin,2,178927,0x7ff7a8a3cb04,12,DateParse
code-creation,Builtin,2,178933,0x7ff7a8a3cb24,12,DatePrototypeSetDate
code-creation,Builtin,2,178939,0x7ff7a8a3cb44,12,DatePrototypeSetFullYear
code-creation,Builtin,2,178946,0x7ff7a8a3cb64,12,DatePrototypeSetHours
code-creation,Builtin,2,178952,0x7ff7a8a3cb84,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,178959,0x7ff7a8a3cba4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,178965,0x7ff7a8a3cbc4,12,DatePrototypeSetMonth
code-creation,Builtin,2,178972,0x7ff7a8a3cbe4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,178978,0x7ff7a8a3cc04,12,DatePrototypeSetTime
code-creation,Builtin,2,178985,0x7ff7a8a3cc24,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,178991,0x7ff7a8a3cc44,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,179000,0x7ff7a8a3cc64,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,179008,0x7ff7a8a3cc84,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,179015,0x7ff7a8a3cca4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,179021,0x7ff7a8a3ccc4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,179027,0x7ff7a8a3cce4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,179034,0x7ff7a8a3cd04,12,DatePrototypeToDateString
code-creation,Builtin,2,179041,0x7ff7a8a3cd24,12,DatePrototypeToISOString
code-creation,Builtin,2,179047,0x7ff7a8a3cd44,12,DatePrototypeToUTCString
code-creation,Builtin,2,179053,0x7ff7a8a3cd64,12,DatePrototypeToString
code-creation,Builtin,2,179060,0x7ff7a8a3cd84,12,DatePrototypeToTimeString
code-creation,Builtin,2,179067,0x7ff7a8a3cda4,12,DatePrototypeToJson
code-creation,Builtin,2,179073,0x7ff7a8a3cdc4,12,DateUTC
code-creation,Builtin,2,179079,0x7ff7a8a3cde4,12,ErrorConstructor
code-creation,Builtin,2,179086,0x7ff7a8a3ce04,12,ErrorCaptureStackTrace
code-creation,Builtin,2,179099,0x7ff7a8a3ce24,12,ErrorPrototypeToString
code-creation,Builtin,2,179105,0x7ff7a8a3ce44,12,FunctionConstructor
code-creation,Builtin,2,179111,0x7ff7a8a3ce64,68,FunctionPrototypeApply
code-creation,Builtin,2,179117,0x7ff7a8a3cec4,12,FunctionPrototypeBind
code-creation,Builtin,2,179124,0x7ff7a8a3cee4,32,FunctionPrototypeCall
code-creation,Builtin,2,179130,0x7ff7a8a3cf24,12,FunctionPrototypeToString
code-creation,Builtin,2,179137,0x7ff7a8a3cf44,192,CreateIterResultObject
code-creation,Builtin,2,179143,0x7ff7a8a3d024,788,CreateGeneratorObject
code-creation,Builtin,2,179150,0x7ff7a8a3d344,12,GeneratorFunctionConstructor
code-creation,Builtin,2,179156,0x7ff7a8a3d364,412,GeneratorPrototypeNext
code-creation,Builtin,2,179163,0x7ff7a8a3d504,420,GeneratorPrototypeReturn
code-creation,Builtin,2,179170,0x7ff7a8a3d6c4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,179178,0x7ff7a8a3d884,12,AsyncFunctionConstructor
code-creation,Builtin,2,179185,0x7ff7a8a3d8a4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,179192,0x7ff7a8a3da24,88,ResumeGeneratorBaseline
code-creation,Builtin,2,179198,0x7ff7a8a3da84,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,179205,0x7ff7a8a3dac4,12,GlobalDecodeURI
code-creation,Builtin,2,179211,0x7ff7a8a3dae4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,179218,0x7ff7a8a3db04,12,GlobalEncodeURI
code-creation,Builtin,2,179224,0x7ff7a8a3db24,12,GlobalEncodeURIComponent
code-creation,Builtin,2,179231,0x7ff7a8a3db44,12,GlobalEscape
code-creation,Builtin,2,179237,0x7ff7a8a3db64,12,GlobalUnescape
code-creation,Builtin,2,179242,0x7ff7a8a3db84,12,GlobalEval
code-creation,Builtin,2,179248,0x7ff7a8a3dba4,132,GlobalIsFinite
code-creation,Builtin,2,179255,0x7ff7a8a3dc44,124,GlobalIsNaN
code-creation,Builtin,2,179261,0x7ff7a8a3dcc4,12,JsonParse
code-creation,Builtin,2,179267,0x7ff7a8a3dce4,12,JsonStringify
code-creation,Builtin,2,179273,0x7ff7a8a3dd04,4608,LoadIC
code-creation,Builtin,2,179279,0x7ff7a8a3ef24,4296,LoadIC_Megamorphic
code-creation,Builtin,2,179286,0x7ff7a8a40004,4520,LoadIC_Noninlined
code-creation,Builtin,2,179292,0x7ff7a8a411c4,44,LoadICTrampoline
code-creation,Builtin,2,179299,0x7ff7a8a41204,24,LoadICBaseline
code-creation,Builtin,2,179305,0x7ff7a8a41224,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,179311,0x7ff7a8a41264,7376,LoadSuperIC
code-creation,Builtin,2,179317,0x7ff7a8a42f44,24,LoadSuperICBaseline
code-creation,Builtin,2,179323,0x7ff7a8a42f64,8148,KeyedLoadIC
code-creation,Builtin,2,179335,0x7ff7a8a44f44,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,179341,0x7ff7a8a48284,44,KeyedLoadICTrampoline
code-creation,Builtin,2,179348,0x7ff7a8a482c4,24,KeyedLoadICBaseline
code-creation,Builtin,2,179355,0x7ff7a8a482e4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,179361,0x7ff7a8a48324,5104,StoreGlobalIC
code-creation,Builtin,2,179368,0x7ff7a8a49724,44,StoreGlobalICTrampoline
code-creation,Builtin,2,179374,0x7ff7a8a49764,24,StoreGlobalICBaseline
code-creation,Builtin,2,179380,0x7ff7a8a49784,5340,StoreIC
code-creation,Builtin,2,179387,0x7ff7a8a4ac64,44,StoreICTrampoline
code-creation,Builtin,2,179393,0x7ff7a8a4aca4,24,StoreICBaseline
code-creation,Builtin,2,179399,0x7ff7a8a4acc4,5780,KeyedStoreIC
code-creation,Builtin,2,179405,0x7ff7a8a4c364,44,KeyedStoreICTrampoline
code-creation,Builtin,2,179412,0x7ff7a8a4c3a4,24,KeyedStoreICBaseline
code-creation,Builtin,2,179419,0x7ff7a8a4c3c4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,179426,0x7ff7a8a4c564,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,179432,0x7ff7a8a4c584,140,LookupContextBaseline
code-creation,Builtin,2,179439,0x7ff7a8a4c624,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,179446,0x7ff7a8a4c6c4,3244,LoadGlobalIC
code-creation,Builtin,2,179452,0x7ff7a8a4d384,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,179459,0x7ff7a8a4e024,44,LoadGlobalICTrampoline
code-creation,Builtin,2,179465,0x7ff7a8a4e064,24,LoadGlobalICBaseline
code-creation,Builtin,2,179472,0x7ff7a8a4e084,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,179478,0x7ff7a8a4e0c4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,179485,0x7ff7a8a4e0e4,140,LookupGlobalICBaseline
code-creation,Builtin,2,179492,0x7ff7a8a4e184,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,179499,0x7ff7a8a4e224,2064,CloneObjectIC
code-creation,Builtin,2,179505,0x7ff7a8a4ea44,24,CloneObjectICBaseline
code-creation,Builtin,2,179514,0x7ff7a8a4ea64,1988,CloneObjectIC_Slow
code-creation,Builtin,2,179523,0x7ff7a8a4f244,2756,KeyedHasIC
code-creation,Builtin,2,179529,0x7ff7a8a4fd24,24,KeyedHasICBaseline
code-creation,Builtin,2,179535,0x7ff7a8a4fd44,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,179542,0x7ff7a8a507a4,1436,IterableToList
code-creation,Builtin,2,179548,0x7ff7a8a50d44,1240,IterableToFixedArray
code-creation,Builtin,2,179555,0x7ff7a8a51224,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,179604,0x7ff7a8a51524,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,179614,0x7ff7a8a51564,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,179621,0x7ff7a8a515e4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,179627,0x7ff7a8a519c4,1616,StringListFromIterable
code-creation,Builtin,2,179867,0x7ff7a8a52024,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,179894,0x7ff7a8a52504,4156,MapConstructor
code-creation,Builtin,2,179902,0x7ff7a8a53544,1996,MapPrototypeSet
code-creation,Builtin,2,179910,0x7ff7a8a53d24,1524,MapPrototypeDelete
code-creation,Builtin,2,179918,0x7ff7a8a54324,204,MapPrototypeGet
code-creation,Builtin,2,179925,0x7ff7a8a54404,164,MapPrototypeHas
code-creation,Builtin,2,179932,0x7ff7a8a544c4,12,MapPrototypeClear
code-creation,Builtin,2,179946,0x7ff7a8a544e4,284,MapPrototypeEntries
code-creation,Builtin,2,179952,0x7ff7a8a54604,144,MapPrototypeGetSize
code-creation,Builtin,2,179959,0x7ff7a8a546a4,492,MapPrototypeForEach
code-creation,Builtin,2,179966,0x7ff7a8a548a4,284,MapPrototypeKeys
code-creation,Builtin,2,179973,0x7ff7a8a549c4,284,MapPrototypeValues
code-creation,Builtin,2,179979,0x7ff7a8a54ae4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,179986,0x7ff7a8a54f04,1168,MapIteratorToList
code-creation,Builtin,2,179992,0x7ff7a8a553a4,12,NumberPrototypeToExponential
code-creation,Builtin,2,180000,0x7ff7a8a553c4,12,NumberPrototypeToFixed
code-creation,Builtin,2,180006,0x7ff7a8a553e4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,180013,0x7ff7a8a55404,12,NumberPrototypeToPrecision
code-creation,Builtin,2,180020,0x7ff7a8a55424,328,SameValue
code-creation,Builtin,2,180030,0x7ff7a8a55584,204,SameValueNumbersOnly
code-creation,Builtin,2,180038,0x7ff7a8a55664,792,Add_Baseline
code-creation,Builtin,2,180045,0x7ff7a8a55984,828,Subtract_Baseline
code-creation,Builtin,2,180052,0x7ff7a8a55cc4,808,Multiply_Baseline
code-creation,Builtin,2,180058,0x7ff7a8a56004,832,Divide_Baseline
code-creation,Builtin,2,180065,0x7ff7a8a56364,764,Modulus_Baseline
code-creation,Builtin,2,180072,0x7ff7a8a56664,808,Exponentiate_Baseline
code-creation,Builtin,2,180078,0x7ff7a8a569a4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,180085,0x7ff7a8a56c84,700,BitwiseOr_Baseline
code-creation,Builtin,2,180093,0x7ff7a8a56f44,708,BitwiseXor_Baseline
code-creation,Builtin,2,180099,0x7ff7a8a57224,720,ShiftLeft_Baseline
code-creation,Builtin,2,180106,0x7ff7a8a57504,720,ShiftRight_Baseline
code-creation,Builtin,2,180113,0x7ff7a8a577e4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,180120,0x7ff7a8a57b44,720,Add_WithFeedback
code-creation,Builtin,2,180127,0x7ff7a8a57e24,780,Subtract_WithFeedback
code-creation,Builtin,2,180133,0x7ff7a8a58144,776,Multiply_WithFeedback
code-creation,Builtin,2,180140,0x7ff7a8a58464,804,Divide_WithFeedback
code-creation,Builtin,2,180146,0x7ff7a8a587a4,724,Modulus_WithFeedback
code-creation,Builtin,2,180153,0x7ff7a8a58a84,764,Exponentiate_WithFeedback
code-creation,Builtin,2,180160,0x7ff7a8a58d84,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,180167,0x7ff7a8a59044,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,180173,0x7ff7a8a59304,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,180180,0x7ff7a8a595c4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,180187,0x7ff7a8a59884,692,ShiftRight_WithFeedback
code-creation,Builtin,2,180193,0x7ff7a8a59b44,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,180201,0x7ff7a8a59e84,1696,Equal_Baseline
code-creation,Builtin,2,180207,0x7ff7a8a5a544,908,StrictEqual_Baseline
code-creation,Builtin,2,180214,0x7ff7a8a5a8e4,1264,LessThan_Baseline
code-creation,Builtin,2,180220,0x7ff7a8a5ade4,1264,GreaterThan_Baseline
code-creation,Builtin,2,180227,0x7ff7a8a5b2e4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,180235,0x7ff7a8a5b7e4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,180242,0x7ff7a8a5bce4,1620,Equal_WithFeedback
code-creation,Builtin,2,180249,0x7ff7a8a5c344,940,StrictEqual_WithFeedback
code-creation,Builtin,2,180256,0x7ff7a8a5c704,1240,LessThan_WithFeedback
code-creation,Builtin,2,180295,0x7ff7a8a5cbe4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,180304,0x7ff7a8a5d0c4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,180312,0x7ff7a8a5d5a4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,180319,0x7ff7a8a5da84,332,BitwiseNot_Baseline
code-creation,Builtin,2,180326,0x7ff7a8a5dbe4,460,Decrement_Baseline
code-creation,Builtin,2,180333,0x7ff7a8a5ddc4,464,Increment_Baseline
code-creation,Builtin,2,180339,0x7ff7a8a5dfa4,488,Negate_Baseline
code-creation,Builtin,2,180346,0x7ff7a8a5e1a4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,180352,0x7ff7a8a5e2e4,440,Decrement_WithFeedback
code-creation,Builtin,2,180359,0x7ff7a8a5e4a4,444,Increment_WithFeedback
code-creation,Builtin,2,180366,0x7ff7a8a5e664,472,Negate_WithFeedback
code-creation,Builtin,2,180372,0x7ff7a8a5e844,252,ObjectAssign
code-creation,Builtin,2,180379,0x7ff7a8a5e944,864,ObjectCreate
code-creation,Builtin,2,180386,0x7ff7a8a5ecc4,12,ObjectDefineGetter
code-creation,Builtin,2,180392,0x7ff7a8a5ece4,12,ObjectDefineProperties
code-creation,Builtin,2,180399,0x7ff7a8a5ed04,12,ObjectDefineProperty
code-creation,Builtin,2,180406,0x7ff7a8a5ed24,12,ObjectDefineSetter
code-creation,Builtin,2,180413,0x7ff7a8a5ed44,1516,ObjectEntries
code-creation,Builtin,2,180419,0x7ff7a8a5f344,12,ObjectFreeze
code-creation,Builtin,2,180426,0x7ff7a8a5f364,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,180433,0x7ff7a8a60964,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,180440,0x7ff7a8a60984,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,180447,0x7ff7a8a60be4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,180454,0x7ff7a8a60c04,164,ObjectHasOwn
code-creation,Builtin,2,180460,0x7ff7a8a60cc4,388,ObjectIs
code-creation,Builtin,2,180467,0x7ff7a8a60e64,12,ObjectIsFrozen
code-creation,Builtin,2,180473,0x7ff7a8a60e84,12,ObjectIsSealed
code-creation,Builtin,2,180480,0x7ff7a8a60ea4,536,ObjectKeys
code-creation,Builtin,2,180486,0x7ff7a8a610c4,12,ObjectLookupGetter
code-creation,Builtin,2,180493,0x7ff7a8a610e4,12,ObjectLookupSetter
code-creation,Builtin,2,180500,0x7ff7a8a61104,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,180507,0x7ff7a8a61a04,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,180514,0x7ff7a8a61ae4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,180521,0x7ff7a8a61b04,12,ObjectPrototypeGetProto
code-creation,Builtin,2,180528,0x7ff7a8a61b24,12,ObjectPrototypeSetProto
code-creation,Builtin,2,180545,0x7ff7a8a61b44,12,ObjectSeal
code-creation,Builtin,2,180553,0x7ff7a8a61b64,1108,ObjectToString
code-creation,Builtin,2,180560,0x7ff7a8a61fc4,1284,ObjectValues
code-creation,Builtin,2,180566,0x7ff7a8a624e4,280,OrdinaryHasInstance
code-creation,Builtin,2,180573,0x7ff7a8a62604,344,InstanceOf
code-creation,Builtin,2,180586,0x7ff7a8a62764,632,InstanceOf_WithFeedback
code-creation,Builtin,2,180592,0x7ff7a8a629e4,648,InstanceOf_Baseline
code-creation,Builtin,2,180605,0x7ff7a8a62c84,268,ForInEnumerate
code-creation,Builtin,2,180611,0x7ff7a8a62da4,148,ForInPrepare
code-creation,Builtin,2,180617,0x7ff7a8a62e44,2584,ForInFilter
code-creation,Builtin,2,180623,0x7ff7a8a63864,52,ReflectApply
code-creation,Builtin,2,180629,0x7ff7a8a638a4,60,ReflectConstruct
code-creation,Builtin,2,180635,0x7ff7a8a638e4,12,ReflectDefineProperty
code-creation,Builtin,2,180641,0x7ff7a8a63904,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,180648,0x7ff7a8a63924,12,ReflectOwnKeys
code-creation,Builtin,2,180654,0x7ff7a8a63944,12,ReflectSet
code-creation,Builtin,2,180660,0x7ff7a8a63964,12,RegExpCapture1Getter
code-creation,Builtin,2,180666,0x7ff7a8a63984,12,RegExpCapture2Getter
code-creation,Builtin,2,180672,0x7ff7a8a639a4,12,RegExpCapture3Getter
code-creation,Builtin,2,180678,0x7ff7a8a639c4,12,RegExpCapture4Getter
code-creation,Builtin,2,180684,0x7ff7a8a639e4,12,RegExpCapture5Getter
code-creation,Builtin,2,180690,0x7ff7a8a63a04,12,RegExpCapture6Getter
code-creation,Builtin,2,180696,0x7ff7a8a63a24,12,RegExpCapture7Getter
code-creation,Builtin,2,180702,0x7ff7a8a63a44,12,RegExpCapture8Getter
code-creation,Builtin,2,180725,0x7ff7a8a63a64,12,RegExpCapture9Getter
code-creation,Builtin,2,180733,0x7ff7a8a63a84,2212,RegExpConstructor
code-creation,Builtin,2,180738,0x7ff7a8a64344,12,RegExpInputGetter
code-creation,Builtin,2,180744,0x7ff7a8a64364,12,RegExpInputSetter
code-creation,Builtin,2,180750,0x7ff7a8a64384,12,RegExpLastMatchGetter
code-creation,Builtin,2,180757,0x7ff7a8a643a4,12,RegExpLastParenGetter
code-creation,Builtin,2,180763,0x7ff7a8a643c4,12,RegExpLeftContextGetter
code-creation,Builtin,2,180769,0x7ff7a8a643e4,908,RegExpPrototypeCompile
code-creation,Builtin,2,180775,0x7ff7a8a64784,12,RegExpPrototypeToString
code-creation,Builtin,2,180781,0x7ff7a8a647a4,12,RegExpRightContextGetter
code-creation,Builtin,2,180787,0x7ff7a8a647c4,252,RegExpExecAtom
code-creation,Builtin,2,180793,0x7ff7a8a648c4,1040,RegExpExecInternal
code-creation,Builtin,2,180799,0x7ff7a8a64ce4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,180805,0x7ff7a8a64d04,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,180811,0x7ff7a8a64d24,2684,SetConstructor
code-creation,Builtin,2,180817,0x7ff7a8a657a4,1284,SetPrototypeHas
code-creation,Builtin,2,180823,0x7ff7a8a65cc4,1736,SetPrototypeAdd
code-creation,Builtin,2,180829,0x7ff7a8a663a4,1476,SetPrototypeDelete
code-creation,Builtin,2,180835,0x7ff7a8a66984,12,SetPrototypeClear
code-creation,Builtin,2,180841,0x7ff7a8a669a4,284,SetPrototypeEntries
code-creation,Builtin,2,180847,0x7ff7a8a66ac4,144,SetPrototypeGetSize
code-creation,Builtin,2,180853,0x7ff7a8a66b64,444,SetPrototypeForEach
code-creation,Builtin,2,180859,0x7ff7a8a66d24,284,SetPrototypeValues
code-creation,Builtin,2,180865,0x7ff7a8a66e44,988,SetIteratorPrototypeNext
code-creation,Builtin,2,180872,0x7ff7a8a67224,1112,SetOrSetIteratorToList
code-creation,Builtin,2,180878,0x7ff7a8a67684,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,180884,0x7ff7a8a676a4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,180891,0x7ff7a8a676c4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,180897,0x7ff7a8a676e4,1280,AtomicsLoad
code-creation,Builtin,2,180903,0x7ff7a8a67c04,1008,AtomicsStore
code-creation,Builtin,2,180909,0x7ff7a8a68004,1704,AtomicsExchange
code-creation,Builtin,2,180915,0x7ff7a8a686c4,2092,AtomicsCompareExchange
code-creation,Builtin,2,180921,0x7ff7a8a68f04,1804,AtomicsAdd
code-creation,Builtin,2,180927,0x7ff7a8a69624,1804,AtomicsSub
code-creation,Builtin,2,180933,0x7ff7a8a69d44,1804,AtomicsAnd
code-creation,Builtin,2,180939,0x7ff7a8a6a464,1804,AtomicsOr
code-creation,Builtin,2,180945,0x7ff7a8a6ab84,1804,AtomicsXor
code-creation,Builtin,2,180950,0x7ff7a8a6b2a4,12,AtomicsNotify
code-creation,Builtin,2,180957,0x7ff7a8a6b2c4,12,AtomicsIsLockFree
code-creation,Builtin,2,180963,0x7ff7a8a6b2e4,12,AtomicsWait
code-creation,Builtin,2,180968,0x7ff7a8a6b304,12,AtomicsWaitAsync
code-creation,Builtin,2,180974,0x7ff7a8a6b324,12,StringFromCodePoint
code-creation,Builtin,2,180980,0x7ff7a8a6b344,1428,StringFromCharCode
code-creation,Builtin,2,180986,0x7ff7a8a6b8e4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,180993,0x7ff7a8a6b904,4360,StringPrototypeMatchAll
code-creation,Builtin,2,180999,0x7ff7a8a6ca24,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,181005,0x7ff7a8a6ca44,1228,StringPrototypeReplace
code-creation,Builtin,2,181012,0x7ff7a8a6cf24,2900,StringPrototypeSplit
code-creation,Builtin,2,181018,0x7ff7a8a6da84,12,StringRaw
code-creation,Builtin,2,181023,0x7ff7a8a6daa4,12,SymbolConstructor
code-creation,Builtin,2,181029,0x7ff7a8a6dac4,12,SymbolFor
code-creation,Builtin,2,181049,0x7ff7a8a6dae4,12,SymbolKeyFor
code-creation,Builtin,2,181054,0x7ff7a8a6db04,88,TypedArrayBaseConstructor
code-creation,Builtin,2,181063,0x7ff7a8a6db64,256,TypedArrayConstructor
code-creation,Builtin,2,181072,0x7ff7a8a6dc84,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,181080,0x7ff7a8a6dca4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,181087,0x7ff7a8a6e024,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,181093,0x7ff7a8a6e1a4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,181099,0x7ff7a8a6e404,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,181121,0x7ff7a8a6e424,12,TypedArrayPrototypeFill
code-creation,Builtin,2,181129,0x7ff7a8a6e444,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,181135,0x7ff7a8a6e464,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,181142,0x7ff7a8a6e484,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,181148,0x7ff7a8a6e4a4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,181155,0x7ff7a8a6e4c4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,181162,0x7ff7a8a6e604,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,181168,0x7ff7a8a70fc4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,181174,0x7ff7a8a712e4,148,WasmCompileLazy
code-creation,Builtin,2,181180,0x7ff7a8a71384,168,WasmDebugBreak
code-creation,Builtin,2,181186,0x7ff7a8a71444,16,WasmOnStackReplace
code-creation,Builtin,2,181192,0x7ff7a8a71464,140,WasmFloat32ToNumber
code-creation,Builtin,2,181199,0x7ff7a8a71504,152,WasmFloat64ToNumber
code-creation,Builtin,2,181205,0x7ff7a8a715a4,4,WasmI32AtomicWait32
code-creation,Builtin,2,181211,0x7ff7a8a715c4,4,WasmI64AtomicWait32
code-creation,Builtin,2,181223,0x7ff7a8a715e4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,181229,0x7ff7a8a71604,4320,WeakMapConstructor
code-creation,Builtin,2,181235,0x7ff7a8a72704,196,WeakMapLookupHashIndex
code-creation,Builtin,2,181241,0x7ff7a8a727e4,220,WeakMapGet
code-creation,Builtin,2,181247,0x7ff7a8a728c4,176,WeakMapPrototypeHas
code-creation,Builtin,2,181253,0x7ff7a8a72984,204,WeakMapPrototypeSet
code-creation,Builtin,2,181259,0x7ff7a8a72a64,144,WeakMapPrototypeDelete
code-creation,Builtin,2,181266,0x7ff7a8a72b04,2876,WeakSetConstructor
code-creation,Builtin,2,181272,0x7ff7a8a73644,176,WeakSetPrototypeHas
code-creation,Builtin,2,181278,0x7ff7a8a73704,204,WeakSetPrototypeAdd
code-creation,Builtin,2,181284,0x7ff7a8a737e4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,181290,0x7ff7a8a73884,372,WeakCollectionDelete
code-creation,Builtin,2,181296,0x7ff7a8a73a04,764,WeakCollectionSet
code-creation,Builtin,2,181302,0x7ff7a8a73d04,296,AsyncGeneratorResolve
code-creation,Builtin,2,181308,0x7ff7a8a73e44,100,AsyncGeneratorReject
code-creation,Builtin,2,181314,0x7ff7a8a73ec4,2760,AsyncGeneratorYield
code-creation,Builtin,2,181320,0x7ff7a8a749a4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,181326,0x7ff7a8a754e4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,181332,0x7ff7a8a75624,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,181339,0x7ff7a8a75644,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,181345,0x7ff7a8a75a44,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,181352,0x7ff7a8a75e64,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,181358,0x7ff7a8a76284,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,181364,0x7ff7a8a76d44,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,181370,0x7ff7a8a77804,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,181377,0x7ff7a8a77884,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,181383,0x7ff7a8a77924,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,181390,0x7ff7a8a779a4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,181397,0x7ff7a8a77a24,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,181403,0x7ff7a8a77aa4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,181410,0x7ff7a8a77b44,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,181416,0x7ff7a8a78184,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,181422,0x7ff7a8a78844,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,181429,0x7ff7a8a78f04,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,181435,0x7ff7a8a78f84,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,181442,0x7ff7a8a79084,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,181449,0x7ff7a8a79184,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,181456,0x7ff7a8a79264,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,181479,0x7ff7a8a79404,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,181487,0x7ff7a8a795a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,181494,0x7ff7a8a796a4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,181502,0x7ff7a8a797a4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,181509,0x7ff7a8a798a4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,181516,0x7ff7a8a79a44,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,181523,0x7ff7a8a79be4,4,DirectCEntry
code-creation,Builtin,2,181529,0x7ff7a8a79c04,1096,StringAdd_CheckNone
code-creation,Builtin,2,181535,0x7ff7a8a7a064,2484,SubString
code-creation,Builtin,2,181540,0x7ff7a8a7aa24,16,StackCheck
code-creation,Builtin,2,181546,0x7ff7a8a7aa44,84,DoubleToI
code-creation,Builtin,2,181552,0x7ff7a8a7aaa4,2236,GetProperty
code-creation,Builtin,2,181561,0x7ff7a8a7b364,2308,GetPropertyWithReceiver
code-creation,Builtin,2,181567,0x7ff7a8a7bc84,16004,SetProperty
code-creation,Builtin,2,181576,0x7ff7a8a7fb24,13480,SetPropertyInLiteral
code-creation,Builtin,2,181584,0x7ff7a8a82fe4,8,MemCopyUint8Uint8
code-creation,Builtin,2,181590,0x7ff7a8a83004,8,MemMove
code-creation,Builtin,2,181595,0x7ff7a8a83024,12,IsTraceCategoryEnabled
code-creation,Builtin,2,181602,0x7ff7a8a83044,12,Trace
code-creation,Builtin,2,181608,0x7ff7a8a83064,12,FinalizationRegistryUnregister
code-creation,Builtin,2,181614,0x7ff7a8a83084,416,AsyncModuleEvaluate
code-creation,Builtin,2,181620,0x7ff7a8a83244,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,181626,0x7ff7a8a83264,12,CallAsyncModuleRejected
code-creation,Builtin,2,181633,0x7ff7a8a83284,260,AggregateErrorConstructor
code-creation,Builtin,2,181639,0x7ff7a8a833a4,856,ArrayPrototypeAt
code-creation,Builtin,2,181644,0x7ff7a8a83704,656,ArrayPrototypeConcat
code-creation,Builtin,2,181651,0x7ff7a8a839a4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,181657,0x7ff7a8a85084,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,181663,0x7ff7a8a85164,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,181670,0x7ff7a8a853e4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,181676,0x7ff7a8a860e4,1464,ArrayEvery
code-creation,Builtin,2,181682,0x7ff7a8a866a4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,181688,0x7ff7a8a867c4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,181695,0x7ff7a8a86ba4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,181701,0x7ff7a8a879a4,4260,ArrayFilter
code-creation,Builtin,2,181707,0x7ff7a8a88a64,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,181714,0x7ff7a8a88b44,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,181720,0x7ff7a8a88b84,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,181727,0x7ff7a8a88cc4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,181733,0x7ff7a8a88ee4,1460,ArrayPrototypeFind
code-creation,Builtin,2,181739,0x7ff7a8a894a4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,181746,0x7ff7a8a89584,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,181752,0x7ff7a8a895c4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,181759,0x7ff7a8a89704,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,181766,0x7ff7a8a89924,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,181772,0x7ff7a8a89ee4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,181779,0x7ff7a8a8a0c4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,181785,0x7ff7a8a8a784,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,181791,0x7ff7a8a8a964,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,181798,0x7ff7a8a8b024,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,181804,0x7ff7a8a8b104,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,181836,0x7ff7a8a8b1e4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,181844,0x7ff7a8a8be44,1328,ArrayForEach
code-creation,Builtin,2,181851,0x7ff7a8a8c384,3572,ArrayFrom
code-creation,Builtin,2,181857,0x7ff7a8a8d184,148,ArrayIsArray
code-creation,Builtin,2,181863,0x7ff7a8a8d224,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,181870,0x7ff7a8a8d3c4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,181877,0x7ff7a8a8d404,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,181883,0x7ff7a8a8d4a4,312,ConvertToLocaleString
code-creation,Builtin,2,181890,0x7ff7a8a8d5e4,752,JoinStackPush
code-creation,Builtin,2,181896,0x7ff7a8a8d8e4,272,JoinStackPop
code-creation,Builtin,2,181902,0x7ff7a8a8da04,6628,ArrayPrototypeJoin
code-creation,Builtin,2,181908,0x7ff7a8a8f404,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,181914,0x7ff7a8a90904,236,ArrayPrototypeToString
code-creation,Builtin,2,181920,0x7ff7a8a90a04,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,181927,0x7ff7a8a92144,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,181933,0x7ff7a8a93364,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,181940,0x7ff7a8a94264,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,181946,0x7ff7a8a94384,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,181953,0x7ff7a8a94484,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,181959,0x7ff7a8a946a4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,181965,0x7ff7a8a95324,3912,ArrayMap
code-creation,Builtin,2,181971,0x7ff7a8a96284,1000,ArrayOf
code-creation,Builtin,2,181977,0x7ff7a8a96684,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,181984,0x7ff7a8a96844,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,181991,0x7ff7a8a96924,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,181998,0x7ff7a8a96a04,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,182004,0x7ff7a8a976a4,2000,ArrayReduceRight
code-creation,Builtin,2,182010,0x7ff7a8a97e84,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,182017,0x7ff7a8a97f44,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,182023,0x7ff7a8a98024,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,182030,0x7ff7a8a98104,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,182036,0x7ff7a8a98dc4,1604,ArrayReduce
code-creation,Builtin,2,182043,0x7ff7a8a99424,3216,ArrayPrototypeReverse
code-creation,Builtin,2,182049,0x7ff7a8a9a0c4,3592,ArrayPrototypeShift
code-creation,Builtin,2,182055,0x7ff7a8a9aee4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,182061,0x7ff7a8a9c364,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,182067,0x7ff7a8a9c444,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,182074,0x7ff7a8a9c6a4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,182080,0x7ff7a8a9d3a4,1448,ArraySome
code-creation,Builtin,2,182089,0x7ff7a8a9d964,14216,ArrayPrototypeSplice
code-creation,Builtin,2,182097,0x7ff7a8aa1104,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,182103,0x7ff7a8aa1de4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,182110,0x7ff7a8aa1f44,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,182116,0x7ff7a8aa20a4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,182123,0x7ff7a8aa2184,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,182129,0x7ff7a8aa22e4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,182136,0x7ff7a8aa23c4,96,ArrayBufferIsView
code-creation,Builtin,2,182142,0x7ff7a8aa2444,396,ToInteger
code-creation,Builtin,2,182148,0x7ff7a8aa25e4,3084,FastCreateDataProperty
code-creation,Builtin,2,182154,0x7ff7a8aa3204,676,CheckNumberInRange
code-creation,Builtin,2,182161,0x7ff7a8aa34c4,584,CheckSameObject
code-creation,Builtin,2,182167,0x7ff7a8aa3724,904,BooleanConstructor
code-creation,Builtin,2,182173,0x7ff7a8aa3ac4,164,BooleanPrototypeToString
code-creation,Builtin,2,182180,0x7ff7a8aa3b84,156,BooleanPrototypeValueOf
code-creation,Builtin,2,182206,0x7ff7a8aa3c24,1184,BigIntAddNoThrow
code-creation,Builtin,2,182213,0x7ff7a8aa40e4,1280,BigIntAdd
code-creation,Builtin,2,182219,0x7ff7a8aa4604,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,182225,0x7ff7a8aa4ac4,1280,BigIntSubtract
code-creation,Builtin,2,182231,0x7ff7a8aa4fe4,284,BigIntUnaryMinus
code-creation,Builtin,2,182237,0x7ff7a8aa5104,1360,ToString
code-creation,Builtin,2,182243,0x7ff7a8aa5664,156,StringPrototypeToString
code-creation,Builtin,2,182249,0x7ff7a8aa5704,156,StringPrototypeValueOf
code-creation,Builtin,2,182255,0x7ff7a8aa57a4,2480,StringToList
code-creation,Builtin,2,182261,0x7ff7a8aa6164,1012,StringPrototypeCharAt
code-creation,Builtin,2,182267,0x7ff7a8aa6564,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,182274,0x7ff7a8aa6824,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,182280,0x7ff7a8aa6d44,400,StringPrototypeConcat
code-creation,Builtin,2,182286,0x7ff7a8aa6ee4,992,StringConstructor
code-creation,Builtin,2,182292,0x7ff7a8aa72e4,1436,StringAddConvertLeft
code-creation,Builtin,2,182298,0x7ff7a8aa7884,1464,StringAddConvertRight
code-creation,Builtin,2,182304,0x7ff7a8aa7e44,816,StringCharAt
code-creation,Builtin,2,182310,0x7ff7a8aa8184,16,FastNewClosureBaseline
code-creation,Builtin,2,182316,0x7ff7a8aa81a4,196,FastNewFunctionContextEval
code-creation,Builtin,2,182322,0x7ff7a8aa8284,196,FastNewFunctionContextFunction
code-creation,Builtin,2,182329,0x7ff7a8aa8364,248,CreateRegExpLiteral
code-creation,Builtin,2,182335,0x7ff7a8aa8464,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,182342,0x7ff7a8aa88a4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,182348,0x7ff7a8aa8aa4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,182354,0x7ff7a8aa9184,384,ObjectConstructor
code-creation,Builtin,2,182360,0x7ff7a8aa9324,176,CreateEmptyLiteralObject
code-creation,Builtin,2,182367,0x7ff7a8aa93e4,536,NumberConstructor
code-creation,Builtin,2,182373,0x7ff7a8aa9604,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,182379,0x7ff7a8aa9664,64,StringToNumber
code-creation,Builtin,2,182385,0x7ff7a8aa96c4,184,NonNumberToNumber
code-creation,Builtin,2,182391,0x7ff7a8aa9784,240,NonNumberToNumeric
code-creation,Builtin,2,182397,0x7ff7a8aa9884,36,ToNumeric
code-creation,Builtin,2,182402,0x7ff7a8aa98c4,1184,NumberToString
code-creation,Builtin,2,182408,0x7ff7a8aa9d84,92,ToBoolean
code-creation,Builtin,2,182414,0x7ff7a8aa9de4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,182420,0x7ff7a8aa9e64,728,ToLength
code-creation,Builtin,2,182426,0x7ff7a8aaa144,1312,ToName
code-creation,Builtin,2,182432,0x7ff7a8aaa684,756,ToObject
code-creation,Builtin,2,182437,0x7ff7a8aaa984,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,182443,0x7ff7a8aaaa64,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,182457,0x7ff7a8aaab44,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,182463,0x7ff7a8aaac24,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,182470,0x7ff7a8aaad64,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,182476,0x7ff7a8aaaea4,216,FastConsoleAssert
code-creation,Builtin,2,182482,0x7ff7a8aaaf84,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,182488,0x7ff7a8aab044,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,182494,0x7ff7a8aab1a4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,182501,0x7ff7a8aab304,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,182507,0x7ff7a8aab544,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,182513,0x7ff7a8aab784,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,182519,0x7ff7a8aaba24,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,182525,0x7ff7a8aabcc4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,182531,0x7ff7a8aac004,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,182537,0x7ff7a8aac2c4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,182544,0x7ff7a8aac624,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,182550,0x7ff7a8aac9c4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,182585,0x7ff7a8aacda4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,182593,0x7ff7a8aad1a4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,182602,0x7ff7a8aad564,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,182610,0x7ff7a8aad924,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,182617,0x7ff7a8aadd44,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,182623,0x7ff7a8aae164,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,182629,0x7ff7a8aae5a4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,182635,0x7ff7a8aae9e4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,182641,0x7ff7a8aaee04,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,182647,0x7ff7a8aaf264,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,182654,0x7ff7a8aaf624,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,182660,0x7ff7a8aaf9e4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,182666,0x7ff7a8aafd24,1152,FinalizationRegistryRegister
code-creation,Builtin,2,182672,0x7ff7a8ab01c4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,182679,0x7ff7a8ab0464,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,182685,0x7ff7a8ab05c4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,182691,0x7ff7a8ab0964,88,IncBlockCounter
code-creation,Builtin,2,182697,0x7ff7a8ab09c4,228,GetTemplateObject
code-creation,Builtin,2,182703,0x7ff7a8ab0ac4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,182710,0x7ff7a8ab0ae4,92,ForInNext
code-creation,Builtin,2,182715,0x7ff7a8ab0b44,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,182721,0x7ff7a8ab0be4,116,GetIteratorWithFeedback
code-creation,Builtin,2,182728,0x7ff7a8ab0c64,100,GetIteratorBaseline
code-creation,Builtin,2,182734,0x7ff7a8ab0ce4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,182740,0x7ff7a8ab0e04,1084,CallIteratorWithFeedback
code-creation,Builtin,2,182746,0x7ff7a8ab1244,288,MathAbs
code-creation,Builtin,2,182752,0x7ff7a8ab1384,428,MathCeil
code-creation,Builtin,2,182758,0x7ff7a8ab1544,432,MathFloor
code-creation,Builtin,2,182764,0x7ff7a8ab1704,488,MathRound
code-creation,Builtin,2,182770,0x7ff7a8ab1904,428,MathTrunc
code-creation,Builtin,2,182776,0x7ff7a8ab1ac4,368,MathPow
code-creation,Builtin,2,182782,0x7ff7a8ab1c44,396,MathMax
code-creation,Builtin,2,182787,0x7ff7a8ab1de4,404,MathMin
code-creation,Builtin,2,182793,0x7ff7a8ab1f84,320,MathAcos
code-creation,Builtin,2,182799,0x7ff7a8ab20e4,320,MathAcosh
code-creation,Builtin,2,182805,0x7ff7a8ab2244,320,MathAsin
code-creation,Builtin,2,182810,0x7ff7a8ab23a4,320,MathAsinh
code-creation,Builtin,2,182816,0x7ff7a8ab2504,320,MathAtan
code-creation,Builtin,2,182822,0x7ff7a8ab2664,416,MathAtan2
code-creation,Builtin,2,182828,0x7ff7a8ab2824,320,MathAtanh
code-creation,Builtin,2,182834,0x7ff7a8ab2984,320,MathCbrt
code-creation,Builtin,2,182840,0x7ff7a8ab2ae4,168,MathClz32
code-creation,Builtin,2,182846,0x7ff7a8ab2ba4,320,MathCos
code-creation,Builtin,2,182851,0x7ff7a8ab2d04,320,MathCosh
code-creation,Builtin,2,182857,0x7ff7a8ab2e64,320,MathExp
code-creation,Builtin,2,182863,0x7ff7a8ab2fc4,320,MathExpm1
code-creation,Builtin,2,182868,0x7ff7a8ab3124,272,MathFround
code-creation,Builtin,2,182874,0x7ff7a8ab3244,304,MathImul
code-creation,Builtin,2,182881,0x7ff7a8ab3384,320,MathLog
code-creation,Builtin,2,182887,0x7ff7a8ab34e4,320,MathLog1p
code-creation,Builtin,2,182894,0x7ff7a8ab3644,320,MathLog10
code-creation,Builtin,2,182903,0x7ff7a8ab37a4,320,MathLog2
code-creation,Builtin,2,182909,0x7ff7a8ab3904,320,MathSin
code-creation,Builtin,2,182915,0x7ff7a8ab3a64,180,MathSign
code-creation,Builtin,2,182922,0x7ff7a8ab3b24,320,MathSinh
code-creation,Builtin,2,182928,0x7ff7a8ab3c84,268,MathSqrt
code-creation,Builtin,2,182934,0x7ff7a8ab3da4,320,MathTan
code-creation,Builtin,2,182939,0x7ff7a8ab3f04,320,MathTanh
code-creation,Builtin,2,182945,0x7ff7a8ab4064,1060,MathHypot
code-creation,Builtin,2,182951,0x7ff7a8ab44a4,332,MathRandom
code-creation,Builtin,2,182957,0x7ff7a8ab4604,2956,NumberPrototypeToString
code-creation,Builtin,2,182963,0x7ff7a8ab51a4,136,NumberIsFinite
code-creation,Builtin,2,182972,0x7ff7a8ab5244,340,NumberIsInteger
code-creation,Builtin,2,182979,0x7ff7a8ab53a4,116,NumberIsNaN
code-creation,Builtin,2,182984,0x7ff7a8ab5424,372,NumberIsSafeInteger
code-creation,Builtin,2,182990,0x7ff7a8ab55a4,156,NumberPrototypeValueOf
code-creation,Builtin,2,182996,0x7ff7a8ab5644,196,NumberParseFloat
code-creation,Builtin,2,183002,0x7ff7a8ab5724,248,ParseInt
code-creation,Builtin,2,183008,0x7ff7a8ab5824,84,NumberParseInt
code-creation,Builtin,2,183014,0x7ff7a8ab5884,860,Add
code-creation,Builtin,2,183019,0x7ff7a8ab5be4,424,Subtract
code-creation,Builtin,2,183025,0x7ff7a8ab5da4,608,Multiply
code-creation,Builtin,2,183031,0x7ff7a8ab6024,532,Divide
code-creation,Builtin,2,183037,0x7ff7a8ab6244,592,Modulus
code-creation,Builtin,2,183042,0x7ff7a8ab64a4,524,Exponentiate
code-creation,Builtin,2,183053,0x7ff7a8ab66c4,344,Negate
code-creation,Builtin,2,183059,0x7ff7a8ab6824,112,BitwiseNot
code-creation,Builtin,2,183064,0x7ff7a8ab68a4,112,Decrement
code-creation,Builtin,2,183070,0x7ff7a8ab6924,112,Increment
code-creation,Builtin,2,183075,0x7ff7a8ab69a4,392,ShiftLeft
code-creation,Builtin,2,183081,0x7ff7a8ab6b44,392,ShiftRight
code-creation,Builtin,2,183087,0x7ff7a8ab6ce4,508,ShiftRightLogical
code-creation,Builtin,2,183099,0x7ff7a8ab6ee4,388,BitwiseAnd
code-creation,Builtin,2,183106,0x7ff7a8ab7084,388,BitwiseOr
code-creation,Builtin,2,183113,0x7ff7a8ab7224,388,BitwiseXor
code-creation,Builtin,2,183121,0x7ff7a8ab73c4,796,LessThan
code-creation,Builtin,2,183127,0x7ff7a8ab76e4,796,LessThanOrEqual
code-creation,Builtin,2,183132,0x7ff7a8ab7a04,796,GreaterThan
code-creation,Builtin,2,183138,0x7ff7a8ab7d24,796,GreaterThanOrEqual
code-creation,Builtin,2,183144,0x7ff7a8ab8044,860,Equal
code-creation,Builtin,2,183149,0x7ff7a8ab83a4,348,StrictEqual
code-creation,Builtin,2,183155,0x7ff7a8ab8504,3132,ObjectFromEntries
code-creation,Builtin,2,183161,0x7ff7a8ab9144,756,CreateObjectWithoutProperties
code-creation,Builtin,2,183167,0x7ff7a8ab9444,144,ObjectIsExtensible
code-creation,Builtin,2,183173,0x7ff7a8ab94e4,148,ObjectPreventExtensions
code-creation,Builtin,2,183180,0x7ff7a8ab9584,144,ObjectGetPrototypeOf
code-creation,Builtin,2,183186,0x7ff7a8ab9624,300,ObjectSetPrototypeOf
code-creation,Builtin,2,183191,0x7ff7a8ab9764,80,ObjectPrototypeToString
code-creation,Builtin,2,183197,0x7ff7a8ab97c4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,183204,0x7ff7a8ab9844,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,183210,0x7ff7a8ab9904,868,FulfillPromise
code-creation,Builtin,2,183216,0x7ff7a8ab9c84,988,RejectPromise
code-creation,Builtin,2,183222,0x7ff7a8aba064,2416,NewPromiseCapability
code-creation,Builtin,2,183228,0x7ff7a8aba9e4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,183234,0x7ff7a8abaaa4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,183240,0x7ff7a8abab44,1416,PerformPromiseThen
code-creation,Builtin,2,183246,0x7ff7a8abb0e4,648,PromiseReject
code-creation,Builtin,2,183252,0x7ff7a8abb384,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,183258,0x7ff7a8abb4a4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,183265,0x7ff7a8abb524,4560,PromiseAll
code-creation,Builtin,2,183270,0x7ff7a8abc704,4880,PromiseAllSettled
code-creation,Builtin,2,183277,0x7ff7a8abda24,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,183283,0x7ff7a8abde84,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,183289,0x7ff7a8abe404,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,183295,0x7ff7a8abe984,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,183301,0x7ff7a8abee24,2368,PromiseAny
code-creation,Builtin,2,183307,0x7ff7a8abf784,2908,PromiseConstructor
code-creation,Builtin,2,183313,0x7ff7a8ac02e4,296,PromisePrototypeCatch
code-creation,Builtin,2,183319,0x7ff7a8ac0424,88,PromiseValueThunkFinally
code-creation,Builtin,2,183325,0x7ff7a8ac0484,84,PromiseThrowerFinally
code-creation,Builtin,2,183331,0x7ff7a8ac04e4,904,PromiseCatchFinally
code-creation,Builtin,2,183337,0x7ff7a8ac0884,904,PromiseThenFinally
code-creation,Builtin,2,183345,0x7ff7a8ac0c24,1700,PromisePrototypeFinally
code-creation,Builtin,2,183351,0x7ff7a8ac12e4,1336,PromiseRace
code-creation,Builtin,2,183357,0x7ff7a8ac1824,268,PromiseFulfillReactionJob
code-creation,Builtin,2,183363,0x7ff7a8ac1944,364,PromiseRejectReactionJob
code-creation,Builtin,2,183369,0x7ff7a8ac1ac4,156,PromiseResolveTrampoline
code-creation,Builtin,2,183375,0x7ff7a8ac1b64,656,PromiseResolve
code-creation,Builtin,2,183381,0x7ff7a8ac1e04,712,ResolvePromise
code-creation,Builtin,2,183387,0x7ff7a8ac20e4,2224,PromisePrototypeThen
code-creation,Builtin,2,183393,0x7ff7a8ac29a4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,183399,0x7ff7a8ac2e24,448,ProxyConstructor
code-creation,Builtin,2,183404,0x7ff7a8ac3004,1760,ProxyDeleteProperty
code-creation,Builtin,2,183411,0x7ff7a8ac3704,2112,ProxyGetProperty
code-creation,Builtin,2,183416,0x7ff7a8ac3f64,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,183422,0x7ff7a8ac43a4,1668,ProxyHasProperty
code-creation,Builtin,2,183428,0x7ff7a8ac4a44,760,ProxyIsExtensible
code-creation,Builtin,2,183434,0x7ff7a8ac4d44,800,ProxyPreventExtensions
code-creation,Builtin,2,183440,0x7ff7a8ac5084,1148,ProxyRevocable
code-creation,Builtin,2,183445,0x7ff7a8ac5504,120,ProxyRevoke
code-creation,Builtin,2,183451,0x7ff7a8ac5584,2216,ProxySetProperty
code-creation,Builtin,2,183457,0x7ff7a8ac5e44,1292,ProxySetPrototypeOf
code-creation,Builtin,2,183463,0x7ff7a8ac6364,208,ReflectIsExtensible
code-creation,Builtin,2,183469,0x7ff7a8ac6444,212,ReflectPreventExtensions
code-creation,Builtin,2,183475,0x7ff7a8ac6524,188,ReflectGetPrototypeOf
code-creation,Builtin,2,183480,0x7ff7a8ac65e4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,183486,0x7ff7a8ac6724,284,ReflectGet
code-creation,Builtin,2,183492,0x7ff7a8ac6844,160,ReflectDeleteProperty
code-creation,Builtin,2,183498,0x7ff7a8ac6904,148,ReflectHas
code-creation,Builtin,2,183504,0x7ff7a8ac69a4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,183510,0x7ff7a8ac7dc4,5104,RegExpPrototypeExec
code-creation,Builtin,2,183515,0x7ff7a8ac91c4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,183522,0x7ff7a8ac9b04,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,183528,0x7ff7a8acbfe4,8840,RegExpMatchFast
code-creation,Builtin,2,183534,0x7ff7a8ace284,3600,RegExpPrototypeMatch
code-creation,Builtin,2,183540,0x7ff7a8acf0a4,6328,RegExpReplace
code-creation,Builtin,2,183545,0x7ff7a8ad0964,524,RegExpPrototypeReplace
code-creation,Builtin,2,183551,0x7ff7a8ad0b84,1424,RegExpSearchFast
code-creation,Builtin,2,183557,0x7ff7a8ad1124,1640,RegExpPrototypeSearch
code-creation,Builtin,2,183563,0x7ff7a8ad17a4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,183570,0x7ff7a8ad1884,5872,RegExpSplit
code-creation,Builtin,2,183575,0x7ff7a8ad2f84,476,RegExpPrototypeSplit
code-creation,Builtin,2,183581,0x7ff7a8ad3164,2252,RegExpPrototypeTest
code-creation,Builtin,2,183587,0x7ff7a8ad3a44,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,183593,0x7ff7a8ad3fa4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,183599,0x7ff7a8ad40a4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,183606,0x7ff7a8ad41a4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,183612,0x7ff7a8ad42a4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,183618,0x7ff7a8ad43a4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,183624,0x7ff7a8ad44a4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,183632,0x7ff7a8ad45a4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,183638,0x7ff7a8ad46c4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,183645,0x7ff7a8ad47e4,2256,RegExpPrototypeFlagsGetter
tick,0x7ff9995db8af,183882,0,0x0,6
code-creation,Builtin,2,183931,0x7ff7a8ad50c4,1500,StringPrototypeAt
code-creation,Builtin,2,183943,0x7ff7a8ad56a4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,184055,0x7ff7a8ad6284,480,CreateHTML
code-creation,Builtin,2,184165,0x7ff7a8ad6484,164,StringPrototypeAnchor
code-creation,Builtin,2,184172,0x7ff7a8ad6544,128,StringPrototypeBig
code-creation,Builtin,2,184178,0x7ff7a8ad65e4,128,StringPrototypeBlink
code-creation,Builtin,2,184188,0x7ff7a8ad6684,128,StringPrototypeBold
code-creation,Builtin,2,184195,0x7ff7a8ad6724,168,StringPrototypeFontcolor
code-creation,Builtin,2,184205,0x7ff7a8ad67e4,168,StringPrototypeFontsize
code-creation,Builtin,2,184214,0x7ff7a8ad68a4,128,StringPrototypeFixed
code-creation,Builtin,2,184222,0x7ff7a8ad6944,128,StringPrototypeItalics
code-creation,Builtin,2,184228,0x7ff7a8ad69e4,168,StringPrototypeLink
code-creation,Builtin,2,184234,0x7ff7a8ad6aa4,128,StringPrototypeSmall
code-creation,Builtin,2,184241,0x7ff7a8ad6b44,128,StringPrototypeStrike
code-creation,Builtin,2,184248,0x7ff7a8ad6be4,128,StringPrototypeSub
code-creation,Builtin,2,184255,0x7ff7a8ad6c84,128,StringPrototypeSup
code-creation,Builtin,2,184261,0x7ff7a8ad6d24,1028,StringPrototypeIncludes
code-creation,Builtin,2,184268,0x7ff7a8ad7144,628,StringPrototypeIndexOf
code-creation,Builtin,2,184274,0x7ff7a8ad73c4,344,StringPrototypeIterator
code-creation,Builtin,2,184281,0x7ff7a8ad7524,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,184287,0x7ff7a8ad7d24,1304,StringPrototypeMatch
code-creation,Builtin,2,184294,0x7ff7a8ad8244,1304,StringPrototypeSearch
code-creation,Builtin,2,184300,0x7ff7a8ad8764,824,StringPrototypePadStart
code-creation,Builtin,2,184307,0x7ff7a8ad8aa4,824,StringPrototypePadEnd
code-creation,Builtin,2,184313,0x7ff7a8ad8de4,120,StringRepeat
code-creation,Builtin,2,184319,0x7ff7a8ad8e64,400,StringPrototypeRepeat
code-creation,Builtin,2,184326,0x7ff7a8ad9004,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,184332,0x7ff7a8adbbc4,3388,StringPrototypeSlice
code-creation,Builtin,2,184339,0x7ff7a8adc904,3028,StringPrototypeStartsWith
code-creation,Builtin,2,184346,0x7ff7a8add4e4,3328,StringPrototypeSubstr
code-creation,Builtin,2,184352,0x7ff7a8ade204,3260,StringPrototypeSubstring
code-creation,Builtin,2,184359,0x7ff7a8adeec4,6916,StringPrototypeTrim
code-creation,Builtin,2,184365,0x7ff7a8ae09e4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,184375,0x7ff7a8ae22a4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,184382,0x7ff7a8ae3984,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,184389,0x7ff7a8ae3a44,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,184395,0x7ff7a8ae3ae4,172,SymbolPrototypeToString
code-creation,Builtin,2,184408,0x7ff7a8ae3ba4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,184415,0x7ff7a8ae3c44,832,TypedArrayPrototypeAt
code-creation,Builtin,2,184421,0x7ff7a8ae3fa4,10064,CreateTypedArray
code-creation,Builtin,2,184428,0x7ff7a8ae6704,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,184435,0x7ff7a8ae6b04,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,184442,0x7ff7a8ae6c84,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,184449,0x7ff7a8ae7a44,996,TypedArrayPrototypeFind
code-creation,Builtin,2,184455,0x7ff7a8ae7e44,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,184463,0x7ff7a8ae8244,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,184470,0x7ff7a8ae8404,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,184477,0x7ff7a8ae88c4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,184485,0x7ff7a8ae8a84,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,184500,0x7ff7a8ae8f64,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,184507,0x7ff7a8ae92e4,2352,TypedArrayFrom
code-creation,Builtin,2,184513,0x7ff7a8ae9c24,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,184520,0x7ff7a8ae9da4,1028,TypedArrayOf
code-creation,Builtin,2,184527,0x7ff7a8aea1c4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,184534,0x7ff7a8aea584,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,184541,0x7ff7a8aea944,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,184555,0x7ff7a8aeb324,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,184561,0x7ff7a8aebf24,992,TypedArrayPrototypeSome
code-creation,Builtin,2,184575,0x7ff7a8aec324,1060,TypedArrayMergeSort
code-creation,Builtin,2,184581,0x7ff7a8aec764,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,184587,0x7ff7a8aecdc4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,184595,0x7ff7a8aed884,372,TypedArrayPrototypeValues
code-creation,Builtin,2,184601,0x7ff7a8aeda04,952,WeakRefConstructor
code-creation,Builtin,2,184607,0x7ff7a8aeddc4,184,WeakRefDeref
code-creation,Builtin,2,184613,0x7ff7a8aede84,680,NewSloppyArgumentsElements
code-creation,Builtin,2,184619,0x7ff7a8aee144,296,NewStrictArgumentsElements
code-creation,Builtin,2,184625,0x7ff7a8aee284,320,NewRestArgumentsElements
code-creation,Builtin,2,184633,0x7ff7a8aee3e4,1388,FastNewSloppyArguments
code-creation,Builtin,2,184639,0x7ff7a8aee964,524,FastNewStrictArguments
code-creation,Builtin,2,184645,0x7ff7a8aeeb84,556,FastNewRestArguments
code-creation,Builtin,2,184651,0x7ff7a8aeedc4,676,StringSlowFlatten
code-creation,Builtin,2,184657,0x7ff7a8aef084,2068,StringIndexOf
code-creation,Builtin,2,184663,0x7ff7a8aef8a4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,184669,0x7ff7a8aef8c4,20,TestHelperPlus1
code-creation,Builtin,2,184675,0x7ff7a8aef8e4,20,TestHelperPlus2
code-creation,Builtin,2,184681,0x7ff7a8aef904,96,NewSmiBox
code-creation,Builtin,2,184686,0x7ff7a8aef984,24,ReturnTwoValues
code-creation,Builtin,2,184692,0x7ff7a8aef9a4,32,Load_FastSmiElements_0
code-creation,Builtin,2,184698,0x7ff7a8aef9e4,32,Load_FastObjectElements_0
code-creation,Builtin,2,184705,0x7ff7a8aefa24,144,Load_FastDoubleElements_0
code-creation,Builtin,2,184710,0x7ff7a8aefac4,32,Store_FastSmiElements_0
code-creation,Builtin,2,184719,0x7ff7a8aefb04,96,Store_FastObjectElements_0
code-creation,Builtin,2,184727,0x7ff7a8aefb84,48,Store_FastDoubleElements_0
code-creation,Builtin,2,184733,0x7ff7a8aefbc4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,184739,0x7ff7a8aefc04,36,Delete_FastObjectElements_0
code-creation,Builtin,2,184745,0x7ff7a8aefc44,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,184751,0x7ff7a8aefc84,308,SortCompareDefault
code-creation,Builtin,2,184757,0x7ff7a8aefdc4,92,SortCompareUserFn
code-creation,Builtin,2,184763,0x7ff7a8aefe24,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,184769,0x7ff7a8aefe44,312,Copy
code-creation,Builtin,2,184775,0x7ff7a8aeff84,5776,MergeAt
code-creation,Builtin,2,184780,0x7ff7a8af1624,792,GallopLeft
code-creation,Builtin,2,184786,0x7ff7a8af1944,832,GallopRight
code-creation,Builtin,2,184792,0x7ff7a8af1ca4,3832,ArrayTimSort
code-creation,Builtin,2,184798,0x7ff7a8af2ba4,2112,ArrayPrototypeSort
code-creation,Builtin,2,184804,0x7ff7a8af3404,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,184810,0x7ff7a8af3484,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,184816,0x7ff7a8af3504,76,WasmTaggedToFloat64
code-creation,Builtin,2,184822,0x7ff7a8af3564,72,WasmMemoryGrow
code-creation,Builtin,2,184828,0x7ff7a8af35c4,100,WasmTableInit
code-creation,Builtin,2,184834,0x7ff7a8af3644,100,WasmTableCopy
code-creation,Builtin,2,184840,0x7ff7a8af36c4,84,WasmTableFill
code-creation,Builtin,2,184845,0x7ff7a8af3724,72,WasmTableGrow
code-creation,Builtin,2,184851,0x7ff7a8af3784,144,WasmTableGet
code-creation,Builtin,2,184857,0x7ff7a8af3824,236,WasmTableSet
code-creation,Builtin,2,184862,0x7ff7a8af3924,88,WasmRefFunc
code-creation,Builtin,2,184868,0x7ff7a8af3984,144,WasmAllocateFixedArray
code-creation,Builtin,2,184874,0x7ff7a8af3a24,44,WasmThrow
code-creation,Builtin,2,184880,0x7ff7a8af3a64,52,WasmRethrow
code-creation,Builtin,2,184885,0x7ff7a8af3aa4,44,WasmTriggerTierUp
code-creation,Builtin,2,184892,0x7ff7a8af3ae4,32,WasmStackGuard
code-creation,Builtin,2,184897,0x7ff7a8af3b24,32,WasmStackOverflow
code-creation,Builtin,2,184903,0x7ff7a8af3b64,40,WasmTraceMemory
code-creation,Builtin,2,184909,0x7ff7a8af3ba4,32,WasmTraceEnter
code-creation,Builtin,2,184914,0x7ff7a8af3be4,40,WasmTraceExit
code-creation,Builtin,2,184926,0x7ff7a8af3c24,332,WasmAllocateJSArray
code-creation,Builtin,2,184932,0x7ff7a8af3d84,104,WasmAllocatePair
code-creation,Builtin,2,184939,0x7ff7a8af3e04,64,WasmAllocateRtt
code-creation,Builtin,2,184945,0x7ff7a8af3e64,72,WasmAllocateFreshRtt
code-creation,Builtin,2,184951,0x7ff7a8af3ec4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,184959,0x7ff7a8af3f44,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,184967,0x7ff7a8af3fe4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,184973,0x7ff7a8af40a4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,184980,0x7ff7a8af4164,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,184986,0x7ff7a8af41e4,60,WasmArrayCopy
code-creation,Builtin,2,184992,0x7ff7a8af4224,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,184998,0x7ff7a8af4324,52,WasmSubtypeCheck
code-creation,Builtin,2,185005,0x7ff7a8af4364,8,WasmInt32ToNumber
code-creation,Builtin,2,185011,0x7ff7a8af4384,116,WasmUint32ToNumber
code-creation,Builtin,2,185017,0x7ff7a8af4404,144,UintPtr53ToNumber
code-creation,Builtin,2,185023,0x7ff7a8af44a4,96,WasmAtomicNotify
code-creation,Builtin,2,185030,0x7ff7a8af4524,116,WasmI32AtomicWait64
code-creation,Builtin,2,185036,0x7ff7a8af45a4,116,WasmI64AtomicWait64
code-creation,Builtin,2,185042,0x7ff7a8af4624,580,WasmGetOwnProperty
code-creation,Builtin,2,185049,0x7ff7a8af4884,40,WasmTrap
code-creation,Builtin,2,185055,0x7ff7a8af48c4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,185061,0x7ff7a8af48e4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,185068,0x7ff7a8af4904,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,185074,0x7ff7a8af4924,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,185080,0x7ff7a8af4944,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,185087,0x7ff7a8af4964,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,185093,0x7ff7a8af4984,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,185100,0x7ff7a8af49a4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,185107,0x7ff7a8af49c4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,185120,0x7ff7a8af49e4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,185127,0x7ff7a8af4a04,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,185133,0x7ff7a8af4a24,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,185140,0x7ff7a8af4a44,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,185147,0x7ff7a8af4a64,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,185153,0x7ff7a8af4a84,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,185164,0x7ff7a8af4aa4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,185170,0x7ff7a8af4ac4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,185178,0x7ff7a8af4b84,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,185184,0x7ff7a8af4ba4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,185191,0x7ff7a8af4c24,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,185198,0x7ff7a8af4ca4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,185205,0x7ff7a8af4cc4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,185212,0x7ff7a8af4da4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,185219,0x7ff7a8af4ea4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,185226,0x7ff7a8af4ec4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,185232,0x7ff7a8af4ee4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,185241,0x7ff7a8af4f04,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,185248,0x7ff7a8af4f24,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,185257,0x7ff7a8af4fc4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,185264,0x7ff7a8af4fe4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,185270,0x7ff7a8af5024,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,185277,0x7ff7a8af5064,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,185284,0x7ff7a8af50a4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,185290,0x7ff7a8af5b24,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,185297,0x7ff7a8af5b44,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,185303,0x7ff7a8af5b84,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,185310,0x7ff7a8af5ba4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,185318,0x7ff7a8af5c64,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,185326,0x7ff7a8af5d24,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,185332,0x7ff7a8af5da4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,185339,0x7ff7a8af5de4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,185370,0x7ff7a8af5e84,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,185376,0x7ff7a8af5f04,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,185383,0x7ff7a8af5f24,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,185390,0x7ff7a8af5fc4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,185397,0x7ff7a8af5fe4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,185403,0x7ff7a8af6004,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,185410,0x7ff7a8af6284,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,185417,0x7ff7a8af6364,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,185423,0x7ff7a8af63a4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,185430,0x7ff7a8af6484,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,185437,0x7ff7a8af6584,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,185444,0x7ff7a8af65c4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,185450,0x7ff7a8af66a4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,185457,0x7ff7a8af66c4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,185463,0x7ff7a8af66e4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,185470,0x7ff7a8af67a4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,185476,0x7ff7a8af67c4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,185483,0x7ff7a8af67e4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,185489,0x7ff7a8af68a4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,185496,0x7ff7a8af68c4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,185503,0x7ff7a8af68e4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,185509,0x7ff7a8af69a4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,185515,0x7ff7a8af69c4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,185522,0x7ff7a8af69e4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,185528,0x7ff7a8af6aa4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,185585,0x7ff7a8af6b44,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,185639,0x7ff7a8af6c04,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,185691,0x7ff7a8af6cc4,12,CollatorConstructor
code-creation,Builtin,2,185735,0x7ff7a8af6ce4,12,CollatorInternalCompare
code-creation,Builtin,2,185741,0x7ff7a8af6d04,12,CollatorPrototypeCompare
code-creation,Builtin,2,185748,0x7ff7a8af6d24,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,185754,0x7ff7a8af6d44,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,185761,0x7ff7a8af6d64,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,185767,0x7ff7a8af6d84,12,DatePrototypeToLocaleString
code-creation,Builtin,2,185774,0x7ff7a8af6da4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,185780,0x7ff7a8af6dc4,12,DateTimeFormatConstructor
code-creation,Builtin,2,185789,0x7ff7a8af6de4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,185833,0x7ff7a8af6e04,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,185840,0x7ff7a8af6e24,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,185846,0x7ff7a8af6e44,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,185853,0x7ff7a8af6e64,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,185859,0x7ff7a8af6e84,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,185866,0x7ff7a8af6ea4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,185872,0x7ff7a8af6ec4,12,DisplayNamesConstructor
code-creation,Builtin,2,185879,0x7ff7a8af6ee4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,185886,0x7ff7a8af6f04,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,185893,0x7ff7a8af6f24,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,185899,0x7ff7a8af6f44,12,IntlGetCanonicalLocales
code-creation,Builtin,2,185905,0x7ff7a8af6f64,12,ListFormatConstructor
code-creation,Builtin,2,185911,0x7ff7a8af6f84,224,ListFormatPrototypeFormat
code-creation,Builtin,2,185917,0x7ff7a8af7084,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,185924,0x7ff7a8af7184,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,185930,0x7ff7a8af71a4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,185937,0x7ff7a8af71c4,12,LocaleConstructor
code-creation,Builtin,2,185948,0x7ff7a8af71e4,12,LocalePrototypeBaseName
code-creation,Builtin,2,185955,0x7ff7a8af7204,12,LocalePrototypeCalendar
code-creation,Builtin,2,185961,0x7ff7a8af7224,12,LocalePrototypeCalendars
code-creation,Builtin,2,185967,0x7ff7a8af7244,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,185973,0x7ff7a8af7264,12,LocalePrototypeCollation
code-creation,Builtin,2,185979,0x7ff7a8af7284,12,LocalePrototypeCollations
code-creation,Builtin,2,185986,0x7ff7a8af72a4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,185992,0x7ff7a8af72c4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,185998,0x7ff7a8af72e4,12,LocalePrototypeLanguage
code-creation,Builtin,2,186004,0x7ff7a8af7304,12,LocalePrototypeMaximize
code-creation,Builtin,2,186010,0x7ff7a8af7324,12,LocalePrototypeMinimize
code-creation,Builtin,2,186039,0x7ff7a8af7344,12,LocalePrototypeNumeric
code-creation,Builtin,2,186045,0x7ff7a8af7364,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,186051,0x7ff7a8af7384,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,186057,0x7ff7a8af73a4,12,LocalePrototypeRegion
code-creation,Builtin,2,186063,0x7ff7a8af73c4,12,LocalePrototypeScript
code-creation,Builtin,2,186069,0x7ff7a8af73e4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,186075,0x7ff7a8af7404,12,LocalePrototypeTimeZones
code-creation,Builtin,2,186081,0x7ff7a8af7424,12,LocalePrototypeToString
code-creation,Builtin,2,186087,0x7ff7a8af7444,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,186093,0x7ff7a8af7464,12,NumberFormatConstructor
code-creation,Builtin,2,186099,0x7ff7a8af7484,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,186105,0x7ff7a8af74a4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,186111,0x7ff7a8af74c4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,186118,0x7ff7a8af74e4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,186124,0x7ff7a8af7504,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,186130,0x7ff7a8af7524,12,PluralRulesConstructor
code-creation,Builtin,2,186136,0x7ff7a8af7544,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,186143,0x7ff7a8af7564,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,186149,0x7ff7a8af7584,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,186155,0x7ff7a8af75a4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,186161,0x7ff7a8af75c4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,186167,0x7ff7a8af75e4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,186174,0x7ff7a8af7604,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,186180,0x7ff7a8af7624,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,186187,0x7ff7a8af7644,12,SegmenterConstructor
code-creation,Builtin,2,186193,0x7ff7a8af7664,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,186199,0x7ff7a8af7684,12,SegmenterPrototypeSegment
code-creation,Builtin,2,186205,0x7ff7a8af76a4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,186211,0x7ff7a8af76c4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,186217,0x7ff7a8af76e4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,186223,0x7ff7a8af7704,12,SegmentsPrototypeIterator
code-creation,Builtin,2,186229,0x7ff7a8af7724,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,186237,0x7ff7a8af7744,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,186243,0x7ff7a8af7764,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,186272,0x7ff7a8af7784,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,186278,0x7ff7a8af7864,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,186284,0x7ff7a8af7884,636,StringToLowerCaseIntl
code-creation,Builtin,2,186290,0x7ff7a8af7b04,12,V8BreakIteratorConstructor
code-creation,Builtin,2,186296,0x7ff7a8af7b24,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,186302,0x7ff7a8af7b44,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,186308,0x7ff7a8af7b64,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,186314,0x7ff7a8af7b84,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,186320,0x7ff7a8af7ba4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,186328,0x7ff7a8af7bc4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,186336,0x7ff7a8af7be4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,186342,0x7ff7a8af7c04,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,186348,0x7ff7a8af7c24,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,186354,0x7ff7a8af7c44,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,186360,0x7ff7a8af7c64,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,186366,0x7ff7a8af7c84,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,186373,0x7ff7a8af7ca4,24,Wide
code-creation,BytecodeHandler,0,186378,0x7ff7a8af7cc4,24,ExtraWide
code-creation,BytecodeHandler,0,186384,0x7ff7a8af7ce4,104,DebugBreakWide
code-creation,BytecodeHandler,0,186390,0x7ff7a8af7d64,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,186396,0x7ff7a8af7de4,164,DebugBreak0
code-creation,BytecodeHandler,0,186402,0x7ff7a8af7ea4,104,DebugBreak1
code-creation,BytecodeHandler,0,186407,0x7ff7a8af7f24,104,DebugBreak2
code-creation,BytecodeHandler,0,186413,0x7ff7a8af7fa4,104,DebugBreak3
code-creation,BytecodeHandler,0,186419,0x7ff7a8af8024,104,DebugBreak4
code-creation,BytecodeHandler,0,186425,0x7ff7a8af80a4,104,DebugBreak5
code-creation,BytecodeHandler,0,186430,0x7ff7a8af8124,104,DebugBreak6
code-creation,BytecodeHandler,0,186436,0x7ff7a8af81a4,32,Ldar
code-creation,BytecodeHandler,0,186442,0x7ff7a8af81e4,68,LdaZero
code-creation,BytecodeHandler,0,186448,0x7ff7a8af8244,76,LdaSmi
code-creation,BytecodeHandler,0,186453,0x7ff7a8af82a4,68,LdaUndefined
code-creation,BytecodeHandler,0,186459,0x7ff7a8af8304,68,LdaNull
code-creation,BytecodeHandler,0,186465,0x7ff7a8af8364,68,LdaTheHole
code-creation,BytecodeHandler,0,186470,0x7ff7a8af83c4,20,LdaTrue
code-creation,BytecodeHandler,0,186476,0x7ff7a8af83e4,20,LdaFalse
code-creation,BytecodeHandler,0,186482,0x7ff7a8af8404,76,LdaConstant
code-creation,BytecodeHandler,0,186488,0x7ff7a8af8464,132,LdaContextSlot
code-creation,BytecodeHandler,0,186494,0x7ff7a8af8504,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,186500,0x7ff7a8af85a4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,186506,0x7ff7a8af8604,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,186512,0x7ff7a8af8664,32,Star
code-creation,BytecodeHandler,0,186518,0x7ff7a8af86a4,40,Mov
code-creation,BytecodeHandler,0,186523,0x7ff7a8af86e4,40,PushContext
code-creation,BytecodeHandler,0,186529,0x7ff7a8af8724,36,PopContext
code-creation,BytecodeHandler,0,186534,0x7ff7a8af8764,48,TestReferenceEqual
code-creation,BytecodeHandler,0,186541,0x7ff7a8af87a4,52,TestUndetectable
code-creation,BytecodeHandler,0,186546,0x7ff7a8af87e4,36,TestNull
code-creation,BytecodeHandler,0,186558,0x7ff7a8af8824,36,TestUndefined
code-creation,BytecodeHandler,0,186563,0x7ff7a8af8864,336,TestTypeOf
code-creation,BytecodeHandler,0,186569,0x7ff7a8af89c4,6036,LdaGlobal
code-creation,BytecodeHandler,0,186575,0x7ff7a8afa164,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,186581,0x7ff7a8afb324,168,StaGlobal
code-creation,BytecodeHandler,0,186613,0x7ff7a8afb3e4,160,StaContextSlot
code-creation,BytecodeHandler,0,186619,0x7ff7a8afb4a4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,186627,0x7ff7a8afb524,124,LdaLookupSlot
code-creation,BytecodeHandler,0,186633,0x7ff7a8afb5a4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,186639,0x7ff7a8afb6a4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,186645,0x7ff7a8afc964,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,186651,0x7ff7a8afc9e4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,186657,0x7ff7a8afcae4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,186663,0x7ff7a8afdd84,220,StaLookupSlot
code-creation,BytecodeHandler,0,186669,0x7ff7a8afde64,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,186675,0x7ff7a8aff2e4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,186681,0x7ff7a8aff3a4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,186687,0x7ff7a8aff484,160,LdaModuleVariable
code-creation,BytecodeHandler,0,186693,0x7ff7a8aff544,292,StaModuleVariable
code-creation,BytecodeHandler,0,186699,0x7ff7a8aff684,172,StaNamedProperty
code-creation,BytecodeHandler,0,186704,0x7ff7a8aff744,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,186710,0x7ff7a8aff804,164,StaKeyedProperty
code-creation,BytecodeHandler,0,186716,0x7ff7a8aff8c4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,186722,0x7ff7a8aff984,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,186728,0x7ff7a8affa64,160,CollectTypeProfile
code-creation,BytecodeHandler,0,186734,0x7ff7a8affb24,1028,Add
code-creation,BytecodeHandler,0,186739,0x7ff7a8afff44,1064,Sub
code-creation,BytecodeHandler,0,186744,0x7ff7a8b00384,1024,Mul
code-creation,BytecodeHandler,0,186750,0x7ff7a8b007a4,988,Div
code-creation,BytecodeHandler,0,186756,0x7ff7a8b00b84,912,Mod
code-creation,BytecodeHandler,0,186761,0x7ff7a8b00f24,964,Exp
code-creation,BytecodeHandler,0,186766,0x7ff7a8b01304,876,BitwiseOr
code-creation,BytecodeHandler,0,186772,0x7ff7a8b01684,888,BitwiseXor
code-creation,BytecodeHandler,0,186777,0x7ff7a8b01a04,888,BitwiseAnd
code-creation,BytecodeHandler,0,186783,0x7ff7a8b01d84,900,ShiftLeft
code-creation,BytecodeHandler,0,186788,0x7ff7a8b02124,900,ShiftRight
code-creation,BytecodeHandler,0,186794,0x7ff7a8b024c4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,186799,0x7ff7a8b028c4,960,AddSmi
code-creation,BytecodeHandler,0,186805,0x7ff7a8b02ca4,1000,SubSmi
code-creation,BytecodeHandler,0,186810,0x7ff7a8b030a4,916,MulSmi
code-creation,BytecodeHandler,0,186816,0x7ff7a8b03444,920,DivSmi
code-creation,BytecodeHandler,0,186822,0x7ff7a8b037e4,816,ModSmi
code-creation,BytecodeHandler,0,186827,0x7ff7a8b03b24,872,ExpSmi
code-creation,BytecodeHandler,0,186832,0x7ff7a8b03ea4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,186838,0x7ff7a8b040a4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,186843,0x7ff7a8b042a4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,186849,0x7ff7a8b044a4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,186855,0x7ff7a8b046a4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,186860,0x7ff7a8b048a4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,186866,0x7ff7a8b04b44,656,Inc
code-creation,BytecodeHandler,0,186871,0x7ff7a8b04de4,656,Dec
code-creation,BytecodeHandler,0,186877,0x7ff7a8b05084,640,Negate
code-creation,BytecodeHandler,0,186885,0x7ff7a8b05324,480,BitwiseNot
code-creation,BytecodeHandler,0,186893,0x7ff7a8b05524,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,186899,0x7ff7a8b055a4,36,LogicalNot
code-creation,BytecodeHandler,0,186904,0x7ff7a8b055e4,208,TypeOf
code-creation,BytecodeHandler,0,186910,0x7ff7a8b056c4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,186916,0x7ff7a8b05744,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,186922,0x7ff7a8b057c4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,186927,0x7ff7a8b05804,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,186933,0x7ff7a8b05c84,1132,CallProperty
code-creation,BytecodeHandler,0,186939,0x7ff7a8b06104,1012,CallProperty0
code-creation,BytecodeHandler,0,186945,0x7ff7a8b06504,1028,CallProperty1
code-creation,BytecodeHandler,0,186952,0x7ff7a8b06924,1040,CallProperty2
code-creation,BytecodeHandler,0,186958,0x7ff7a8b06d44,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,186964,0x7ff7a8b07144,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,186970,0x7ff7a8b07564,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,186976,0x7ff7a8b07964,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,186982,0x7ff7a8b07d84,1132,CallWithSpread
code-creation,BytecodeHandler,0,186988,0x7ff7a8b08204,124,CallRuntime
code-creation,BytecodeHandler,0,186993,0x7ff7a8b08284,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,186999,0x7ff7a8b08324,80,CallJSRuntime
code-creation,BytecodeHandler,0,187005,0x7ff7a8b08384,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,187011,0x7ff7a8b08864,1020,Construct
code-creation,BytecodeHandler,0,187016,0x7ff7a8b08c64,536,ConstructWithSpread
code-creation,BytecodeHandler,0,187022,0x7ff7a8b08e84,1936,TestEqual
code-creation,BytecodeHandler,0,187028,0x7ff7a8b09624,1064,TestEqualStrict
code-creation,BytecodeHandler,0,187034,0x7ff7a8b09a64,1624,TestLessThan
code-creation,BytecodeHandler,0,187039,0x7ff7a8b0a0c4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,187045,0x7ff7a8b0a724,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,187051,0x7ff7a8b0ad84,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,187057,0x7ff7a8b0b3e4,860,TestInstanceOf
code-creation,BytecodeHandler,0,187063,0x7ff7a8b0b744,156,TestIn
code-creation,BytecodeHandler,0,187068,0x7ff7a8b0b7e4,112,ToName
code-creation,BytecodeHandler,0,187074,0x7ff7a8b0b864,212,ToNumber
code-creation,BytecodeHandler,0,187080,0x7ff7a8b0b944,232,ToNumeric
code-creation,BytecodeHandler,0,187085,0x7ff7a8b0ba44,112,ToObject
code-creation,BytecodeHandler,0,187091,0x7ff7a8b0bac4,116,ToString
code-creation,BytecodeHandler,0,187096,0x7ff7a8b0bb44,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,187102,0x7ff7a8b0bce4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,187109,0x7ff7a8b0c2a4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,187114,0x7ff7a8b0c304,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,187126,0x7ff7a8b0c624,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,187132,0x7ff7a8b0ce84,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,187138,0x7ff7a8b0cf84,168,CloneObject
code-creation,BytecodeHandler,0,187144,0x7ff7a8b0d044,212,GetTemplateObject
code-creation,BytecodeHandler,0,187150,0x7ff7a8b0d124,328,CreateClosure
code-creation,BytecodeHandler,0,187155,0x7ff7a8b0d284,120,CreateBlockContext
code-creation,BytecodeHandler,0,187161,0x7ff7a8b0d304,132,CreateCatchContext
code-creation,BytecodeHandler,0,187167,0x7ff7a8b0d3a4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,187173,0x7ff7a8b0d4c4,256,CreateEvalContext
code-creation,BytecodeHandler,0,187179,0x7ff7a8b0d5e4,132,CreateWithContext
code-creation,BytecodeHandler,0,187185,0x7ff7a8b0d684,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,187191,0x7ff7a8b0dcc4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,187197,0x7ff7a8b0df24,632,CreateRestParameter
code-creation,BytecodeHandler,0,187202,0x7ff7a8b0e1a4,424,JumpLoop
code-creation,BytecodeHandler,0,187208,0x7ff7a8b0e364,44,Jump
code-creation,BytecodeHandler,0,187214,0x7ff7a8b0e3a4,56,JumpConstant
code-creation,BytecodeHandler,0,187219,0x7ff7a8b0e3e4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,187225,0x7ff7a8b0e444,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,187231,0x7ff7a8b0e4a4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,187237,0x7ff7a8b0e504,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,187243,0x7ff7a8b0e564,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,187249,0x7ff7a8b0e5c4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,187255,0x7ff7a8b0e624,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,187261,0x7ff7a8b0e684,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,187267,0x7ff7a8b0e6e4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,187274,0x7ff7a8b0e784,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,187281,0x7ff7a8b0e824,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,187287,0x7ff7a8b0e8c4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,187293,0x7ff7a8b0e964,64,JumpIfTrue
code-creation,BytecodeHandler,0,187299,0x7ff7a8b0e9c4,64,JumpIfFalse
code-creation,BytecodeHandler,0,187304,0x7ff7a8b0ea24,64,JumpIfNull
code-creation,BytecodeHandler,0,187310,0x7ff7a8b0ea84,64,JumpIfNotNull
code-creation,BytecodeHandler,0,187315,0x7ff7a8b0eae4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,187321,0x7ff7a8b0eb44,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,187327,0x7ff7a8b0eba4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,187334,0x7ff7a8b0ec04,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,187339,0x7ff7a8b0ec64,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,187345,0x7ff7a8b0ece4,464,ForInEnumerate
code-creation,BytecodeHandler,0,187351,0x7ff7a8b0eec4,252,ForInPrepare
code-creation,BytecodeHandler,0,187357,0x7ff7a8b0efc4,60,ForInContinue
code-creation,BytecodeHandler,0,187363,0x7ff7a8b0f004,256,ForInNext
code-creation,BytecodeHandler,0,187369,0x7ff7a8b0f124,48,ForInStep
code-creation,BytecodeHandler,0,187374,0x7ff7a8b0f164,36,SetPendingMessage
code-creation,BytecodeHandler,0,187380,0x7ff7a8b0f1a4,116,Throw
code-creation,BytecodeHandler,0,187385,0x7ff7a8b0f224,116,ReThrow
code-creation,BytecodeHandler,0,187391,0x7ff7a8b0f2a4,112,Return
code-creation,BytecodeHandler,0,187396,0x7ff7a8b0f324,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,187403,0x7ff7a8b0f404,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,187410,0x7ff7a8b0f4a4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,187419,0x7ff7a8b0f544,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,187427,0x7ff7a8b0f5e4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,187436,0x7ff7a8b0f664,512,SuspendGenerator
code-creation,BytecodeHandler,0,187442,0x7ff7a8b0f884,128,ResumeGenerator
code-creation,BytecodeHandler,0,187448,0x7ff7a8b0f924,152,GetIterator
code-creation,BytecodeHandler,0,187455,0x7ff7a8b0f9c4,116,Debugger
code-creation,BytecodeHandler,0,187460,0x7ff7a8b0fa44,124,IncBlockCounter
code-creation,BytecodeHandler,0,187466,0x7ff7a8b0fac4,56,Abort
code-creation,BytecodeHandler,0,187472,0x7ff7a8b0fb04,32,Star0
code-creation,BytecodeHandler,0,187478,0x7ff7a8b0fb44,60,Illegal
code-creation,BytecodeHandler,0,187485,0x7ff7a8b0fb84,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,187491,0x7ff7a8b0fc04,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,187497,0x7ff7a8b0fc84,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,187503,0x7ff7a8b0fd04,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,187509,0x7ff7a8b0fd84,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,187515,0x7ff7a8b0fe04,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,187521,0x7ff7a8b0fe84,32,Ldar.Wide
code-creation,BytecodeHandler,0,187526,0x7ff7a8b0fec4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,187532,0x7ff7a8b0ff04,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,187539,0x7ff7a8b0ff44,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,187545,0x7ff7a8b0ffa4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,187551,0x7ff7a8b10004,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,187558,0x7ff7a8b10044,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,187564,0x7ff7a8b10084,32,Star.Wide
code-creation,BytecodeHandler,0,187578,0x7ff7a8b100c4,40,Mov.Wide
code-creation,BytecodeHandler,0,187586,0x7ff7a8b10104,40,PushContext.Wide
code-creation,BytecodeHandler,0,187594,0x7ff7a8b10144,36,PopContext.Wide
code-creation,BytecodeHandler,0,187607,0x7ff7a8b10184,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,187614,0x7ff7a8b101c4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,187620,0x7ff7a8b11404,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,187627,0x7ff7a8b12604,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,187634,0x7ff7a8b126c4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,187642,0x7ff7a8b12784,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,187650,0x7ff7a8b12804,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,187657,0x7ff7a8b128a4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,187663,0x7ff7a8b129a4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,187670,0x7ff7a8b13ca4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,187683,0x7ff7a8b13d44,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,187691,0x7ff7a8b13e44,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,187699,0x7ff7a8b15124,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,187705,0x7ff7a8b15204,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,187712,0x7ff7a8b16684,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,187722,0x7ff7a8b16744,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,187729,0x7ff7a8b16804,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,187736,0x7ff7a8b168c4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,187742,0x7ff7a8b16a04,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,187749,0x7ff7a8b16ac4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,187756,0x7ff7a8b16b84,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,187763,0x7ff7a8b16c44,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,187770,0x7ff7a8b16d04,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,187777,0x7ff7a8b16de4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,187783,0x7ff7a8b16ea4,984,Add.Wide
code-creation,BytecodeHandler,0,187790,0x7ff7a8b17284,1020,Sub.Wide
code-creation,BytecodeHandler,0,187796,0x7ff7a8b17684,972,Mul.Wide
code-creation,BytecodeHandler,0,187807,0x7ff7a8b17a64,988,Div.Wide
code-creation,BytecodeHandler,0,187813,0x7ff7a8b17e44,916,Mod.Wide
code-creation,BytecodeHandler,0,187818,0x7ff7a8b181e4,988,Exp.Wide
code-creation,BytecodeHandler,0,187824,0x7ff7a8b185c4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,187829,0x7ff7a8b18964,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,187835,0x7ff7a8b18d04,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,187841,0x7ff7a8b190a4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,187846,0x7ff7a8b19464,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,187852,0x7ff7a8b19824,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,187858,0x7ff7a8b19c44,916,AddSmi.Wide
code-creation,BytecodeHandler,0,187864,0x7ff7a8b19fe4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,187869,0x7ff7a8b1a3c4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,187875,0x7ff7a8b1a764,920,DivSmi.Wide
code-creation,BytecodeHandler,0,187881,0x7ff7a8b1ab04,816,ModSmi.Wide
code-creation,BytecodeHandler,0,187886,0x7ff7a8b1ae44,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,187892,0x7ff7a8b1b1c4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,187898,0x7ff7a8b1b3c4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,187904,0x7ff7a8b1b5c4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,187910,0x7ff7a8b1b7c4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,187916,0x7ff7a8b1b9c4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,187922,0x7ff7a8b1bbc4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,187928,0x7ff7a8b1be64,616,Inc.Wide
code-creation,BytecodeHandler,0,187933,0x7ff7a8b1c0e4,616,Dec.Wide
code-creation,BytecodeHandler,0,187939,0x7ff7a8b1c364,648,Negate.Wide
code-creation,BytecodeHandler,0,187944,0x7ff7a8b1c604,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,187950,0x7ff7a8b1c804,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,187960,0x7ff7a8b1c884,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,187968,0x7ff7a8b1c904,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,187974,0x7ff7a8b1c944,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,187980,0x7ff7a8b1cdc4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,187987,0x7ff7a8b1d244,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,187994,0x7ff7a8b1d644,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,188000,0x7ff7a8b1da64,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,188006,0x7ff7a8b1de84,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,188012,0x7ff7a8b1e284,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,188019,0x7ff7a8b1e6a4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,188025,0x7ff7a8b1eac4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,188031,0x7ff7a8b1eee4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,188037,0x7ff7a8b1f364,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,188043,0x7ff7a8b1f404,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,188049,0x7ff7a8b1f4c4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,188055,0x7ff7a8b1f524,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,188061,0x7ff7a8b1fa04,968,Construct.Wide
code-creation,BytecodeHandler,0,188067,0x7ff7a8b1fde4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,188073,0x7ff7a8b1ffc4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,188079,0x7ff7a8b20784,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,188085,0x7ff7a8b20bc4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,188091,0x7ff7a8b211c4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,188097,0x7ff7a8b217c4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,188103,0x7ff7a8b21dc4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,188109,0x7ff7a8b223c4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,188115,0x7ff7a8b22744,160,TestIn.Wide
code-creation,BytecodeHandler,0,188121,0x7ff7a8b22804,116,ToName.Wide
code-creation,BytecodeHandler,0,188126,0x7ff7a8b22884,216,ToNumber.Wide
code-creation,BytecodeHandler,0,188132,0x7ff7a8b22964,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,188138,0x7ff7a8b22a64,116,ToObject.Wide
code-creation,BytecodeHandler,0,188144,0x7ff7a8b22ae4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,188150,0x7ff7a8b22c84,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,188156,0x7ff7a8b23204,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,188162,0x7ff7a8b23524,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,188168,0x7ff7a8b23d24,172,CloneObject.Wide
code-creation,BytecodeHandler,0,188174,0x7ff7a8b23de4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,188180,0x7ff7a8b23ea4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,188186,0x7ff7a8b24004,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,188192,0x7ff7a8b24084,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,188198,0x7ff7a8b24124,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,188204,0x7ff7a8b24244,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,188210,0x7ff7a8b24364,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,188216,0x7ff7a8b24404,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,188227,0x7ff7a8b245c4,44,Jump.Wide
code-creation,BytecodeHandler,0,188233,0x7ff7a8b24604,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,188239,0x7ff7a8b24644,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,188245,0x7ff7a8b246a4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,188252,0x7ff7a8b24704,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,188258,0x7ff7a8b24764,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,188264,0x7ff7a8b247c4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,188271,0x7ff7a8b24824,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,188277,0x7ff7a8b24884,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,188283,0x7ff7a8b248e4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,188290,0x7ff7a8b24944,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,188296,0x7ff7a8b249e4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,188303,0x7ff7a8b24a84,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,188310,0x7ff7a8b24b24,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,188316,0x7ff7a8b24bc4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,188322,0x7ff7a8b24c24,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,188327,0x7ff7a8b24c84,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,188333,0x7ff7a8b24ce4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,188339,0x7ff7a8b24d44,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,188345,0x7ff7a8b24da4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,188351,0x7ff7a8b24e04,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,188357,0x7ff7a8b24e64,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,188363,0x7ff7a8b24ec4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,188369,0x7ff7a8b24f44,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,188375,0x7ff7a8b25124,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,188381,0x7ff7a8b25224,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,188387,0x7ff7a8b25264,260,ForInNext.Wide
code-creation,BytecodeHandler,0,188393,0x7ff7a8b25384,48,ForInStep.Wide
code-creation,BytecodeHandler,0,188399,0x7ff7a8b253c4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,188405,0x7ff7a8b25464,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,188411,0x7ff7a8b25524,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,188417,0x7ff7a8b255a4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,188423,0x7ff7a8b257c4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,188429,0x7ff7a8b25864,156,GetIterator.Wide
code-creation,BytecodeHandler,0,188435,0x7ff7a8b25904,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,188441,0x7ff7a8b259a4,56,Abort.Wide
code-creation,BytecodeHandler,0,188446,0x7ff7a8b259e4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,188453,0x7ff7a8b25a64,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,188459,0x7ff7a8b25ae4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,188465,0x7ff7a8b25b64,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,188471,0x7ff7a8b25be4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,188477,0x7ff7a8b25c64,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,188483,0x7ff7a8b25ce4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,188488,0x7ff7a8b25d24,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,188496,0x7ff7a8b25d44,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,188503,0x7ff7a8b25d84,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188511,0x7ff7a8b25de4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188517,0x7ff7a8b25e44,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188523,0x7ff7a8b25e84,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188530,0x7ff7a8b25ec4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,188535,0x7ff7a8b25ee4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,188541,0x7ff7a8b25f24,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,188547,0x7ff7a8b25f64,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,188553,0x7ff7a8b25fa4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,188559,0x7ff7a8b25fe4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,188565,0x7ff7a8b27224,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,188572,0x7ff7a8b28424,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,188578,0x7ff7a8b284e4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188584,0x7ff7a8b28584,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188591,0x7ff7a8b28604,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,188597,0x7ff7a8b286a4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,188603,0x7ff7a8b287a4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,188609,0x7ff7a8b29aa4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,188617,0x7ff7a8b29b44,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,188625,0x7ff7a8b29c44,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,188631,0x7ff7a8b2af24,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,188637,0x7ff7a8b2b004,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,188644,0x7ff7a8b2c464,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,188652,0x7ff7a8b2c524,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,188659,0x7ff7a8b2c5c4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,188667,0x7ff7a8b2c684,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,188674,0x7ff7a8b2c7c4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,188681,0x7ff7a8b2c884,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,188688,0x7ff7a8b2c944,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,188694,0x7ff7a8b2ca04,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,188701,0x7ff7a8b2cac4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,188707,0x7ff7a8b2cba4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,188713,0x7ff7a8b2cc64,980,Add.ExtraWide
code-creation,BytecodeHandler,0,188719,0x7ff7a8b2d044,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,188724,0x7ff7a8b2d444,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,188730,0x7ff7a8b2d824,988,Div.ExtraWide
code-creation,BytecodeHandler,0,188736,0x7ff7a8b2dc04,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,188741,0x7ff7a8b2dfa4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,188753,0x7ff7a8b2e384,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,188759,0x7ff7a8b2e724,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,188764,0x7ff7a8b2eac4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,188770,0x7ff7a8b2ee64,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,188776,0x7ff7a8b2f224,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,188782,0x7ff7a8b2f5e4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,188788,0x7ff7a8b2fa04,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,188794,0x7ff7a8b2fda4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,188800,0x7ff7a8b30184,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,188806,0x7ff7a8b30524,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,188811,0x7ff7a8b308c4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,188817,0x7ff7a8b30c04,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,188823,0x7ff7a8b30f84,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,188829,0x7ff7a8b31184,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,188835,0x7ff7a8b31384,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,188841,0x7ff7a8b31584,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,188847,0x7ff7a8b31784,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,188853,0x7ff7a8b31984,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,188859,0x7ff7a8b31c24,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,188865,0x7ff7a8b31ea4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,188871,0x7ff7a8b32124,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,188877,0x7ff7a8b323c4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,188883,0x7ff7a8b325c4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,188889,0x7ff7a8b32644,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,188896,0x7ff7a8b326c4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,188902,0x7ff7a8b32704,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,188908,0x7ff7a8b32b84,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,188914,0x7ff7a8b33004,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,188920,0x7ff7a8b33404,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,188926,0x7ff7a8b33824,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,188934,0x7ff7a8b33c44,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,188941,0x7ff7a8b34044,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,188947,0x7ff7a8b34464,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,188953,0x7ff7a8b34864,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,188960,0x7ff7a8b34c84,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,188966,0x7ff7a8b35104,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,188972,0x7ff7a8b351a4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,188978,0x7ff7a8b35264,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,188984,0x7ff7a8b352c4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,188990,0x7ff7a8b357a4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,188996,0x7ff7a8b35b84,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,189002,0x7ff7a8b35d64,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,189008,0x7ff7a8b36524,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,189014,0x7ff7a8b36964,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,189020,0x7ff7a8b36f64,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,189027,0x7ff7a8b37564,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,189035,0x7ff7a8b37b64,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,189042,0x7ff7a8b38164,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,189050,0x7ff7a8b384e4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,189056,0x7ff7a8b38584,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,189062,0x7ff7a8b38604,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,189067,0x7ff7a8b386e4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,189073,0x7ff7a8b387e4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,189079,0x7ff7a8b38864,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,189086,0x7ff7a8b38a04,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,189092,0x7ff7a8b38f84,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,189099,0x7ff7a8b392a4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,189105,0x7ff7a8b39aa4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,189111,0x7ff7a8b39b64,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,189117,0x7ff7a8b39c24,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,189123,0x7ff7a8b39d84,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,189129,0x7ff7a8b39e04,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,189135,0x7ff7a8b39ea4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,189141,0x7ff7a8b39fc4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,189147,0x7ff7a8b3a0e4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,189153,0x7ff7a8b3a184,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,189159,0x7ff7a8b3a344,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,189165,0x7ff7a8b3a384,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,189171,0x7ff7a8b3a3c4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,189177,0x7ff7a8b3a424,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,189184,0x7ff7a8b3a484,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,189190,0x7ff7a8b3a4e4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,189196,0x7ff7a8b3a544,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,189203,0x7ff7a8b3a5a4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,189209,0x7ff7a8b3a604,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,189215,0x7ff7a8b3a664,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,189221,0x7ff7a8b3a6c4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,189228,0x7ff7a8b3a764,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,189268,0x7ff7a8b3a804,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,189276,0x7ff7a8b3a8a4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,189282,0x7ff7a8b3a944,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,189288,0x7ff7a8b3a9a4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,189294,0x7ff7a8b3aa04,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,189306,0x7ff7a8b3aa64,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,189312,0x7ff7a8b3aac4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,189318,0x7ff7a8b3ab24,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,189324,0x7ff7a8b3ab84,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,189331,0x7ff7a8b3abe4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,189337,0x7ff7a8b3ac44,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,189343,0x7ff7a8b3acc4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,189349,0x7ff7a8b3aea4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,189355,0x7ff7a8b3afa4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,189361,0x7ff7a8b3afe4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,189367,0x7ff7a8b3b104,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,189373,0x7ff7a8b3b144,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,189380,0x7ff7a8b3b1e4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,189386,0x7ff7a8b3b2a4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,189393,0x7ff7a8b3b324,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,189399,0x7ff7a8b3b544,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,189405,0x7ff7a8b3b5c4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,189411,0x7ff7a8b3b664,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,189417,0x7ff7a8b3b6e4,56,Abort.ExtraWide
new,MemoryChunk,0xa37e40000,262144
new,MemoryChunk,0x22b73800000,262144
new,MemoryChunk,0x2a8c4f00000,262144
new,MemoryChunk,0xd78c00000,262144
new,MemoryChunk,0x21b19140000,262144
code-creation,Eval,10,195083,0x21b19141fae,5, node:internal/main/run_main_module:1:1,0x21b19141e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x21b19141fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,195144,0x21b19142056,58, node:internal/main/run_main_module:1:1,0x21b19141f28,~
code-source-info,0x21b19142056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,195507,0x21b19142296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0xc90eccfdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x21b19142296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,196131,0x21b19142fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0xc90eccfcf0,~
code-source-info,0x21b19142fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,196551,0x21b19143f7e,5, node:internal/bootstrap/pre_execution:1:1,0x21b19143b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x21b19143f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,197365,0x21b19144bae,497, node:internal/bootstrap/pre_execution:1:1,0x21b19143ef8,~
code-source-info,0x21b19144bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,197636,0x21b19146476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x21b19143fb0,~
code-source-info,0x21b
code-creation,LazyCompile,10,197772,0x21b19147886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x13f332cbdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
tick,0x7ff7a7f2228a,199959,0,0x0,3,0x7ff7a85d40c0,0x21b19146485,0x21b19142065
code-source-info,0x21b19147886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,200198,0x21b1914a0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x21b19144000,~
code-source-info,0x21b1914a0be
code-creation,LazyCompile,10,200325,0x21b1914a3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0xc90eccf840,~
code-source-info,0x21b1914a3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,200484,0x21b1914a6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x13f332d8598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x21b1914a6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,201727,0x21b1914b766,832,resolve node:path:158:10,0x308c100d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x21b1914b
code-creation,LazyCompile,10,204135,0x21b1914ed7e,30,validateString node:internal/validators:118:24,0xc90ecfce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x21b1914ed7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,204548,0x21b1914f71e,17,isPathSeparator node:path:52:25,0x308c100cf90,~
code-source-info,0x21b1914f71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,204581,0x21b1914f81e,35,isWindowsDeviceRoot node:path:60:29,0x308c100d408,~
code-source-info,0x21b1914f81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,204629,0x21b1914f93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0xc90ecfeee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x21b1914f93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,204920,0x21b1914ffa6,442,normalizeString node:path:66:25,0x308c100d458,~
code-source-info,0x21b1914ffa
code-creation,LazyCompile,10,205086,0x21b191506c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x21b19144050,~
code-source-info,0x21b191506c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,205140,0x21b19150866,82,getOptionValue node:internal/options:39:24,0xb16c53db40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x21b19150866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,205269,0x21b19150c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0xb16c53d848,~
code-source-info,0x21b19150c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,205584,0x21b19150d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x21b191443c0,~
code-source-info,0x21b19150d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,205638,0x21b19150f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x13f332d8cb8,~
code-source-info,0x21b19150f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,205679,0x21b191510de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x21b19144410,~
code-source-info,0x21b191510de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,205725,0x21b1915125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x72ad16b218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x21b1915125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,205994,0x21b19151986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x308c1022118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x21b19151986,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,206080,0x21b19151bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x21b19144460,~
code-source-info,0x21b19151bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,206206,0x21b19151fa6,5, node:internal/inspector_async_hook:1:1,0x21b19151df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x21b19151fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,206318,0x21b191521c6,79, node:internal/inspector_async_hook:1:1,0x21b19151f20,~
code-source-info,0x21b191521c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,206419,0x21b1915282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x21b191440a0,~
code-source-info,0x21b1915282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,206532,0x21b1915298e,20,addListener node:events:618:58,0xb214eba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x21b1915298e,23,18854,18928,C0O18876C14O18883C19O18925,,
code-creation,LazyCompile,10,208168,0x21b19155056,378,_addListener node:events:555:22,0xb214eb998,~
code-source-info,0x21b
code-creation,LazyCompile,10,208250,0x21b19155366,15,checkListener node:events:258:23,0xb214eb2f8,~
code-source-info,0x21b19155366,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,208281,0x21b19155456,30, node:internal/validators:236:42,0xc90ecfd308,~
code-source-info,0x21b19155456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,208392,0x21b191556d6,380,emit node:events:475:44,0xb214eb8d8,~
code-source-info,0x21b191556d
code-creation,LazyCompile,10,208527,0x21b19155a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0xc90ecfdca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x21b19155a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,208642,0x21b19155e3e,19,isSignal node:internal/process/signal:17:18,0xc90ecfdaf0,~
code-source-info,0x21b19155e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,208697,0x21b19156076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x21b191440f0,~
code-source-info,0x21b19156076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x1d3d54c0000,262144
code-creation,Function,11,208822,0x1d3d54c3060,572,getOptionValue node:internal/options:39:24,0xb16c53db40,^
code-source-info,0x1d3d54c3060,91,940,1190,,,
code-creation,Function,11,208853,0x1d3d54c3300,216,isPathSeparator node:path:52:25,0x308c100cf90,^
code-source-info,0x1d3d54c3300,41,1794,1876,,,
code-creation,Function,11,208901,0x1d3d54c3440,3076,normalizeString node:path:66:25,0x308c100d458,^
code-source-info,0x1d3d54c3440,41,2226,4212,,,
code-creation,LazyCompile,10,208996,0x21b19156886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x21b19144140,~
code-source-info,0x21b19156886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,209087,0x21b19156b06,5,get node:internal/bootstrap/node:135:6,0xc90ecd4a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x21b19156b06,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,209879,0x21b19157c76,52,get node:internal/bootstrap/node:112:6,0xc90ecd4988,~
code-source-info,0x21b19157c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,209943,0x21b19157e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x21b191442d0,~
code-source-info,0x21b19157e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,210031,0x21b191582d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0xb214e19f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x21b191582d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,210260,0x21b191588de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x21b19144208,~
code-source-info,0x21b191588de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,210311,0x21b19158af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x21b19144258,~
code-source-info,0x21b19158af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,210472,0x21b191590a6,5, node:internal/process/report:1:1,0x21b19158eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x21b191590a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,210624,0x21b19159bb6,306, node:internal/process/report:1:1,0x21b19159020,~
code-source-info,0x21b19159bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,210813,0x21b1915ba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x21b19144320,~
code-source-info,0x21b1915ba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,210870,0x21b1915bb76,57,addSignalHandler node:internal/process/report:98:26,0x21b191590d8,~
code-source-info,0x21b1915bb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,210921,0x21b1915c13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x21b19144370,~
code-source-info,0x21b1915c13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,210984,0x21b1915c3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x21b19144540,~
code-source-info,0x21b1915c3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,211050,0x21b1915c55e,21,assert node:internal/assert:11:16,0xb214e09c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x21b1915c55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,211641,0x21b1915d3d6,5, node:child_process:1:1,0x21b1915cf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x21b1915d3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,212836,0x21b1915de36,748, node:child_process:1:1,0x21b1915d350,~
code-source-info,0x21b1915de
code-creation,LazyCompile,10,213122,0x21b19160406,82,debuglog node:internal/util/debuglog:71:18,0xb214e1d40,~
code-source-info,0x21b19160406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,214008,0x21b191633ee,5, node:internal/child_process:1:1,0x21b19162cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x21b191633ee,100,0,32650,C0O0C4O32650,,
tick,0x7ff9995db8af,216584,1,0x7ff7a805e150,3,0x7ff7a89a59a0,0x21b19142fec,0x21b191422dd,0x21b1915e07a,0x21b1914300d,0x21b191422dd,0x21b1915c43a,0x21b19146502,0x21b19142065
code-creation,Function,10,216818,0x21b19164a0e,1265, node:internal/child_process:1:1,0x21b19163368,~
code-source-info,0x21b19164a0e
code-creation,Function,10,217103,0x21b19165186,35,<instance_members_initializer> node:internal/child_process:525:3,0x21b191640d0,~
code-source-info,0x21b19165186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,218768,0x21b19169476,5, node:net:1:1,0x21b19168c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x21b19169476,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,221213,0x21b1916c356,2547, node:net:1:1,0x21b191693f0,~
code-source-info,0x21b1916c356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
code-creation,Eval,10,222073,0x21b19171cf6,5, node:internal/net:1:1,0x21b19171b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x21b19171cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,222284,0x21b191720e6,617, node:internal/net:1:1,0x21b19171c70,~
code-source-info,0x21b191720e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,222652,0x21b19173aee,5, node:internal/dtrace:1:1,0x21b191739a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x21b19173aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,222718,0x21b19173fc6,140, node:internal/dtrace:1:1,0x21b19173a68,~
code-source-info,0x21b19173fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,223032,0x21b19174f8e,34,protoGetter node:net:740:21,0x21b191698b8,~
code-source-info,0x21b19174f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,223935,0x21b1917a31e,5, node:dgram:1:1,0x21b19179db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x21b1917a31e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,225471,0x21b1917c22e,1501, node:dgram:1:1,0x21b1917a298,~
code-source-info,0x21b1917c22e
code-creation,Eval,10,225995,0x21b1917f636,5, node:internal/dgram:1:1,0x21b1917f430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x21b1917f636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,226179,0x21b1917f8fe,196, node:internal/dgram:1:1,0x21b1917f5b0,~
code-source-info,0x21b1917f8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x2e1cacc0000,262144
code-creation,LazyCompile,10,226548,0x2e1cacc3406,152,deprecate node:internal/util:96:19,0xb214c5aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacc3406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,227529,0x1d3d54c40c0,1344,deprecate node:internal/util:96:19,0xb214c5aa8,^
code-source-info,0x1d3d54c40c0,16,2503,3720,,,
code-creation,Function,11,227587,0x1d3d54c4660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0xc90eccfdc0,^
code-source-info,0x1d3d54c4660,9,10647,11000,,,
code-creation,Function,11,227613,0x1d3d54c4960,548,internalBinding node:internal/bootstrap/loaders:164:45,0xc90eccf840,^
code-source-info,0x1d3d54c4960,9,5278,5523,,,
code-creation,Function,11,227648,0x1d3d54c4c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0xc90eccfcf0,^
code-source-info,0x1d3d54c4c00,9,9827,10410,,,
code-creation,Eval,10,227933,0x2e1cacc5ad6,5, node:internal/socket_list:1:1,0x2e1cacc5980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x2e1cacc5ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,228146,0x2e1cacc6116,126, node:internal/socket_list:1:1,0x2e1cacc5a50,~
code-source-info,0x2e1cacc6116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,228403,0x2e1cacc6cb6,14,customPromiseExecFunction node:child_process:230:35,0x21b1915d9b8,~
code-source-info,0x2e1cacc6cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,228500,0x2e1cacc8cd6,129,_forkChild node:child_process:169:20,0x21b1915d458,~
code-source-info,0x2e1cacc8cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
tick,0x7ff999644574,230462,1,0x7ff7a7fd9b60,6,0x7ff7a89a59a0,0x2e1cacc8cfe,0x21b1915c444,0x21b19146502,0x21b19142065
code-creation,LazyCompile,10,239963,0x2e1cacc96d6,396,setupChannel node:internal/child_process:571:22,0x21b191636a0,~
code-source-info,0x2e1cacc96d
code-creation,LazyCompile,10,240134,0x2e1caccbeae,72,Control node:internal/child_process:529:14,0x21b19163ed8,~
code-source-info,0x2e1caccbeae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,240177,0x2e1caccbfe6,21,EventEmitter node:events:208:22,0xb214eb1b0,~
code-source-info,0x2e1caccbfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,240247,0x2e1caccc12e,149,EventEmitter.init node:events:327:29,0xb214eb5a8,~
code-source-info,0x2e1caccc12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,240597,0x2e1cacccc76,5, node:internal/child_process/serialization:1:1,0x2e1caccc990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x2e1cacccc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,240826,0x2e1caccd4de,369, node:internal/child_process/serialization:1:1,0x2e1cacccbf0,~
code-source-info,0x2e1caccd4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,241078,0x2e1cacce17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x2e1caccced8,~
code-source-info,0x2e1cacce17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,241162,0x2e1cacce7d6,19,_getMaxListeners node:events:404:26,0xb214eb778,~
code-source-info,0x2e1cacce7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,241195,0x2e1cacce8ce,5,get node:events:264:16,0xb214eb398,~
code-source-info,0x2e1cacce8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,241283,0x2e1caccec2e,322,arrayClone node:events:879:20,0xb214ec040,~
code-source-info,0x2e1caccec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,241378,0x2e1cacceefe,22, node:internal/child_process:706:36,0x2e1cacc91f0,~
code-source-info,0x2e1cacceefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,241505,0x2e1caccf19e,368,nextTick node:internal/process/task_queues:104:18,0x13f332daa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x2e1caccf19e
code-creation,LazyCompile,10,241849,0x2e1caccfa0e,21, node:internal/validators:222:42,0xc90ecfd268,~
code-source-info,0x2e1caccfa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,241919,0x2e1caccfb0e,15,isEmpty node:internal/fixed_queue:95:10,0x13f332dfc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2e1caccfb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,242194,0x2e1caccffc6,13,isEmpty node:internal/fixed_queue:67:10,0x13f332dfa10,~
code-source-info,0x2e1caccffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,242234,0x2e1cacd00b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x13f332da960,~
code-source-info,0x2e1cacd00b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,242329,0x2e1cacd01ae,23,newAsyncId node:internal/async_hooks:417:20,0xc90ecf8838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2e1cacd01ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,243560,0x2e1cacd168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0xc90ecf88d8,~
code-source-info,0x2e1cacd168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,243647,0x2e1cacd179e,13,initHooksExist node:internal/async_hooks:479:24,0xc90ecf8ac8,~
code-source-info,0x2e1cacd179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,243688,0x2e1cacd1886,16,hasHooks node:internal/async_hooks:471:18,0xc90ecf8a28,~
code-source-info,0x2e1cacd1886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,243738,0x2e1cacd1996,59,push node:internal/fixed_queue:99:7,0x13f332dfcd0,~
code-source-info,0x2e1cacd1996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,243803,0x2e1cacd1ade,24,isFull node:internal/fixed_queue:71:9,0x13f332dfa60,~
code-source-info,0x2e1cacd1ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,243843,0x2e1cacd1bee,37,push node:internal/fixed_queue:75:7,0x13f332dfac8,~
code-source-info,0x2e1cacd1bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,243945,0x2e1cacd1d0e,30,onNewListener node:child_process:175:51,0x2e1cacc8b90,~
code-source-info,0x2e1cacd1d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,244138,0x2e1cacd205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x21b191445e0,~
code-source-info,0x2e1cacd205e
code-creation,LazyCompile,10,244272,0x2e1cacd242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x21b19144590,~
code-source-info,0x2e1cacd242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,244382,0x2e1cacd259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x21b19144720,~
code-source-info,0x2e1cacd259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,244693,0x2e1cacd2ed6,5, node:internal/source_map/source_map_cache:1:1,0x2e1cacd2b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacd2ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,245213,0x2e1cacd354e,435, node:internal/source_map/source_map_cache:1:1,0x2e1cacd2e50,~
code-source-info,0x2e1cacd354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
tick,0x7ff9995da8a3,246069,1,0x7ff7a805e150,3,0x7ff7a89a59a0,0x1d3d54c4e3b,0x1d3d54c48e5,0x2e1cacd25a4,0x21b19146514,0x21b19142065
code-creation,Eval,10,246422,0x2e1cacd458e,5, node:internal/util/iterable_weak_map:1:1,0x2e1cacd4340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacd458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,246570,0x2e1cacd4cee,196, node:internal/util/iterable_weak_map:1:1,0x2e1cacd4508,~
code-source-info,0x2e1cacd4cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,246607,0x2e1cacd4e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x2e1cacd4818,~
code-source-info,0x2e1cacd4e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,247177,0x2e1cacd5aa6,5, node:internal/modules/cjs/helpers:1:1,0x2e1cacd57f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacd5aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,247592,0x2e1cacd6026,536, node:internal/modules/cjs/helpers:1:1,0x2e1cacd5a20,~
code-source-info,0x2e1cacd6026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,247809,0x2e1cacd6c8e,27,SafeSet node:internal/per_context/primordials:373:16,0xc90ecca230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x2e1cacd6c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
code-creation,LazyCompile,10,248429,0x2e1cacd7b16,27,SafeMap node:internal/per_context/primordials:360:16,0xc90ecca0a8,~
code-source-info,0x2e1cacd7b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,248483,0x2e1cacd7c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x2e1cacd4610,~
code-source-info,0x2e1cacd7c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,248513,0x2e1cacd7f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0xc90ecca168,~
code-source-info,0x2e1cacd7f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,248547,0x2e1cacd809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0xc90ecca3b8,~
code-source-info,0x2e1cacd809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,248685,0x2e1cacd891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x21b191444b0,~
code-source-info,0x2e1cacd891e,96,9921,12505,C0O9921C11O9951C19O9951C24O9937C29O10007C39O10007C44O10202C52O10202C57O10244C65O10244C70O10298C99O10290C127O10290C130O10634C141O10654C145O10697C156O10772C167O10864C178O10818C187O10682C196O10925C199O10652C203O10279C269O11209C277O11209C282O11188C287O11239C289O11268C304O11289C311O11411C315O11268C320O11447C324O11478C334O11514C344O11592C351O11496C356O11494C360O11681C370O11723C381O11705C386O11703C390O12070C394O12070C396O12082C407O12103C418O12133C426O12178C434O12082C439O12298C445O12298C447O12309C458O12330C469O12359C477O12403C485O12309C491O12504,,
code-creation,LazyCompile,10,248812,0x2e1cacd8ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x21b19144630,~
code-source-info,0x2e1cacd8ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,248869,0x2e1cacd90c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x21b19144680,~
code-source-info,0x2e1cacd90c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,249860,0x2e1cacdb016,5, node:internal/modules/cjs/loader:1:1,0x2e1cacda730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x2e1cacdb016,111,0,41761,C0O0C4O41761,,
code-creation,Function,10,251696,0x2e1cacdcdb6,2547, node:internal/modules/cjs/loader:1:1,0x2e1cacdaf90,~
code-source-info,0x2e1cacdcdb
code-creation,Eval,10,252207,0x2e1cace0d76,5, node:internal/modules/package_json_reader:1:1,0x2e1cace0bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x2e1cace0d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,252280,0x2e1cace0ec6,113, node:internal/modules/package_json_reader:1:1,0x2e1cace0cf0,~
code-source-info,0x2e1cace0ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,252453,0x2e1cace170e,5, node:internal/process/esm_loader:1:1,0x2e1cace1518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2e1cace170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,252614,0x2e1cace19ae,182, node:internal/process/esm_loader:1:1,0x2e1cace1688,~
code-source-info,0x2e1cace19ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,253046,0x2e1cace2cbe,5, node:internal/modules/esm/loader:1:1,0x2e1cace2830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x2e1cace2cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,254026,0x2e1cace358e,659, node:internal/modules/esm/loader:1:1,0x2e1cace2c38,~
code-source-info,0x2e1cace358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,254149,0x2e1cace3a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x2e1cace30b0,~
code-source-info,0x2e1cace3a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,254470,0x2e1cace540e,5, node:internal/modules/esm/module_map:1:1,0x2e1cace5220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x2e1cace540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,254667,0x2e1cace5846,175, node:internal/modules/esm/module_map:1:1,0x2e1cace5388,~
code-source-info,0x2e1cace5846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,255184,0x2e1cace62ee,5, node:internal/modules/esm/module_job:1:1,0x2e1cace5ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x2e1cace62ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,256341,0x2e1cace67e6,343, node:internal/modules/esm/module_job:1:1,0x2e1cace6268,~
code-source-info,0x2e1cace67e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,257577,0x2e1cace843e,5, node:internal/modules/esm/assert:1:1,0x2e1cace8248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cace843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,257845,0x2e1cace8716,201, node:internal/modules/esm/assert:1:1,0x2e1cace83b8,~
code-source-info,0x2e1cace8716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,258009,0x2e1cace8d26,9, node:internal/modules/esm/assert:43:3,0x2e1cace8510,~
code-source-info,0x2e1cace8d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,259668,0x2e1cacea966,5, node:internal/modules/esm/resolve:1:1,0x2e1cacea1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x2e1cacea966,118,0,42310,C0O0C4O42310,,
tick,0x7ff7a7fa0a90,262779,1,0x7ff7a805e150,3,0x7ff7a89a59a0,0x1d3d54c4e3b,0x1d3d54c48e5,0x2e1cace3702,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cace19fc,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacdd261,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacd90cc,0x21b19146526,0x21b19142065
code-creation,Function,10,262861,0x2e1caceba96,1191, node:internal/modules/esm/resolve:1:1,0x2e1cacea8e0,~
code-source-info,0x2e1caceba96,118,0,42310,C0O0C415O28C421O45C427O70C433O93C439O117C445O131C451O149C456O166C462O196C468O230C474O241C480O265C486O298C492O322C497O334C503O346C509O357C515O385C521O413C527O440C533O471C539O496C545O521C551O586C554O586C558O586C560O642C563O642C568O625C574O735C577O735C582O693C588O710C594O723C600O778C603O778C608O759C614O875C620O875C629O920C636O875C638O1002C641O1002C646O975C652O980C658O990C664O1045C670O1045C674O1045C676O1114C682O1114C686O1114C688O1197C694O1197C698O1197C700O1265C706O1265C710O1265C712O1325C718O1325C722O1325C724O1413C727O1413C732O1375C738O1380C744O1395C750O1834C753O1834C758O1860C763O1450C769O1481C775O1507C781O1540C787O1571C793O1602C799O1638C805O1663C811O1698C817O1732C823O1763C829O1797C835O1899C838O1899C843O1885C849O1968C852O1968C856O1968C858O2041C864O2041C869O2091C875O2091C880O2147C891O2210C898O2255C899O2255C953O2278C1004O2210C1008O2210C1010O2333C1018O2333C1023O2333C1025O2688C1028O2688C1033O2688C1035O5911C1037O5911C1042O5911C1044O5952C1046O5952C1051O5952C1053O6098C1057O6098C1059O11574C1063O11574C1065O12583C1069O12583C1071O12640C1072O12640C1074O16335C1078O16335C1080O16539C1084O16539C1086O16573C1090O16573C1092O41492C1099O41514C1105O41537C1111O41556C1117O41576C1123O41602C1129O41621C1135O41647C1141O41507C1145O41734C1148O41734C1153O41698C1159O41781C1170O41822C1172O41822C1174O41848C1183O41871C1190O42309,,
code-creation,Eval,10,263639,0x2e1cacef556,5, node:internal/modules/esm/get_format:1:1,0x2e1cacef2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacef556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,263915,0x2e1cacef9d6,368, node:internal/modules/esm/get_format:1:1,0x2e1cacef4d0,~
code-source-info,0x2e1cacef9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,264406,0x2e1cacf0846,5, node:internal/modules/esm/fetch_module:1:1,0x2e1cacf0580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x2e1cacf0846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,265034,0x2e1cacf0cde,318, node:internal/modules/esm/fetch_module:1:1,0x2e1cacf07c0,~
code-source-info,0x2e1cacf0cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,265210,0x2e1cacf19be,37,get BlockList node:net:1826:16,0x21b1916b7e8,~
code-source-info,0x2e1cacf19be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,265471,0x2e1cacf1e9e,5, node:internal/blocklist:1:1,0x2e1cacf1cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacf1e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,265749,0x2e1cacf28a6,359, node:internal/blocklist:1:1,0x2e1cacf1e18,~
code-source-info,0x2e1cacf28a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,266211,0x2e1cacf4176,5, node:internal/socketaddress:1:1,0x2e1cacf3f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacf4176,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,266530,0x2e1cacf4c9e,366, node:internal/socketaddress:1:1,0x2e1cacf40f0,~
code-source-info,0x2e1cacf4c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,266809,0x2e1cacf574e,72,BlockList node:internal/blocklist:40:14,0x2e1cacf1ed0,~
code-source-info,0x2e1cacf574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,266931,0x2e1cacf5ef6,115,addAddress node:internal/blocklist:60:13,0x2e1cacf1f70,~
code-source-info,0x2e1cacf5ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,267001,0x2e1cacf6076,20,isSocketAddress node:internal/socketaddress:43:25,0x2e1cacf41f8,~
code-source-info,0x2e1cacf6076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,267211,0x2e1cacf680e,323,SocketAddress node:internal/socketaddress:47:14,0x2e1cacf41a8,~
code-source-info,0x2e1cacf680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,267395,0x2e1cacf6b5e,99, node:internal/validators:154:3,0xc90ecfd020,~
code-source-info,0x2e1cacf6b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,267493,0x2e1cacf6d0e,129,validatePort node:internal/validators:211:22,0xc90ecfd1f8,~
code-source-info,0x2e1cacf6d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,267582,0x2e1cacf6f5e,149, node:internal/validators:101:40,0xc90ecfce20,~
code-source-info,0x2e1cacf6f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,267644,0x2e1cacf70ee,9,isUint32 node:internal/validators:40:18,0xc90ecfccc0,~
code-source-info,0x2e1cacf70ee,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,267799,0x2e1cacf7326,229,addRange node:internal/blocklist:72:11,0x2e1cacf1fc0,~
code-source-info,0x2e1cacf7326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,268089,0x2e1cacf77a6,5, node:internal/modules/esm/formats:1:1,0x2e1cacf7630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacf77a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,268202,0x2e1cacf7a5e,120, node:internal/modules/esm/formats:1:1,0x2e1cacf7720,~
code-source-info,0x2e1cacf7a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,268570,0x2e1cacf80e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x2e1cacf7f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x2e1cacf80e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,268675,0x2e1cacf82ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x2e1cacf8060,~
code-source-info,0x2e1cacf82ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,268879,0x2e1cacf87c6,5, node:internal/modules/esm/load:1:1,0x2e1cacf8650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacf87c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,268977,0x2e1cacf890e,80, node:internal/modules/esm/load:1:1,0x2e1cacf8740,~
code-source-info,0x2e1cacf890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,269155,0x2e1cacf8f06,5, node:internal/modules/esm/get_source:1:1,0x2e1cacf8d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x2e1cacf8f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,269308,0x2e1cacf909e,212, node:internal/modules/esm/get_source:1:1,0x2e1cacf8e80,~
code-source-info,0x2e1cacf909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,270172,0x2e1cacfa466,5, node:internal/fs/promises:1:1,0x2e1cacf9cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2e1cacfa466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,271507,0x2e1cacfcba6,1672, node:internal/fs/promises:1:1,0x2e1cacfa3e0,~
code-source-info,0x2e1cacfcba6,127,0,23678,C0O0C493O28C499O51C505O61C511O73C517O85C523O102C529O126C535O138C541O163C547O182C553O204C559O236C564O247C570O351C574O351C580O379C586O291C592O300C598O314C604O327C610O338C616O401C620O401C624O401C626O444C634O444C640O433C646O601C654O601C660O601C666O491C672O519C678O547C684O584C690O660C698O660C704O638C710O720C718O720C724O701C730O1382C738O1382C744O1382C750O781C756O800C762O817C768O845C774O880C780O913C786O928C792O958C797O973C803O988C809O1012C815O1033C821O1050C827O1064C833O1097C839O1115C845O1139C851O1159C857O1183C863O1205C869O1234C875O1264C880O1286C886O1311C892O1350C898O1433C906O1433C912O1421C917O1616C925O1616C931O1473C937O1491C943O1515C949O1535C955O1554C961O1575C967O1595C973O1668C981O1668C985O1668C987O1726C995O1726C1001O1694C1007O1712C1012O1783C1020O1783C1026O1761C1031O1836C1039O1836C1045O1826C1050O1893C1058O1893C1064O1878C1070O1944C1078O1944C1082O1944C1084O1991C1088O1991C1092O1991C1094O2023C1098O2023C1102O2023C1104O2053C1108O2053C1112O2053C1114O2093C1118O2093C1122O2093C1124O2141C1128O2141C1132O2141C1134O2188C1138O2188C1142O2188C1144O2226C1148O2226C1152O2226C1154O2258C1158O2258C1162O2258C1164O2304C1168O2287C1174O2385C1182O2385C1188O2325C1193O2341C1198O2355C1203O2366C1208O2467C1212O2467C1214O2524C1218O2524C1220O2561C1221O2561C1223O2722C1224O2722C1226O2848C1348O6130C1358O6550C1368O6611C1380O6707C1390O6748C1422O2823C1424O23198C1430O23229C1438O23236C1444O23249C1450O23264C1456O23273C1460O23293C1470O23318C1476O23331C1482O23346C1488O23355C1494O23367C1500O23379C1506O23393C1512O23408C1518O23422C1524O23434C1530O23445C1536O23456C1542O23469C1548O23481C1554O23494C1560O23507C1566O23519C1572O23532C1578O23546C1584O23561C1590O23575C1596O23591C1602O23608C1612O23623C1632O23641C1642O23656C1652O23665C1662O23213C1671O23677,,
code-creation,Function,10,271686,0x2e1cacfd55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x2e1cacfba40,~
code-source-info,0x2e1cacfd55e,127,4407,5236,C0O4407C12O4415C26O5236,,
new,MemoryChunk,0x18f72640000,262144
code-creation,Eval,10,272418,0x18f7264114e,5, node:internal/fs/rimraf:1:1,0x2e1cacffca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x18f7264114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,272874,0x18f7264174e,409, node:internal/fs/rimraf:1:1,0x2e1cacfff88,~
code-source-info,0x18f7264174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,273249,0x18f726425e6,188,from node:buffer:296:28,0xb214f6f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x18f726425e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
code-creation,LazyCompile,10,275482,0x18f72645016,110,fromString node:buffer:432:20,0xb214f7378,~
code-source-info,0x18f72645016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,276136,0x18f726451ce,177,fromStringFast node:buffer:413:24,0xb214f72d8,~
code-source-info,0x18f726451ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,276263,0x18f726453be,36,FastBuffer node:internal/buffer:958:14,0x13f332cbb00,~
code-source-info,0x18f726453be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,276309,0x18f726454be,23,write node:buffer:593:12,0xb214f76e8,~
code-source-info,0x18f726454be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,276363,0x18f726455ae,42,alignPool node:buffer:159:19,0xb214f6d10,~
code-source-info,0x18f726455ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,276739,0x18f7264596e,251,promisify node:internal/util:324:19,0xb214c61f8,~
code-source-info,0x18f7264596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,276985,0x18f72645f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x308c101e378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x18f72645f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
tick,0x7ff7a87c5b80,278582,0,0x0,3,0x7ff7a85d40c0,0x18f7264507e,0x18f726425f2,0x18f726418c1,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacfce74,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacf912d,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacf8932,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cace372a,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cace19fc,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacdd261,0x1d3d54c4f03,0x1d3d54c48e5,0x2e1cacd90cc,0x21b19146526,0x21b19142065
code-creation,Eval,10,279343,0x18f726489de,5, node:internal/modules/esm/translators:1:1,0x18f72648578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x18f726489de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,280040,0x18f7264917e,715, node:internal/modules/esm/translators:1:1,0x18f72648958,~
code-source-info,0x18f7264917e
code-creation,Eval,10,280450,0x18f7264a686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x18f7264a4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x18f7264a686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,280591,0x18f7264a8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x18f7264a600,~
code-source-info,0x18f7264a8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,281247,0x18f7264bb56,5, node:internal/vm/module:1:1,0x18f7264b610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x18f7264bb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,282007,0x18f7264cdb6,872, node:internal/vm/module:1:1,0x18f7264bad0,~
code-source-info,0x18f7264cdb6,131,0,12768,C0O0C156O32C162O32C166O32C168O72C174O89C180O115C186O141C192O164C198O181C204O206C210O231C216O256C222O271C228O288C233O304C238O315C244O337C250O391C253O391C258O377C264O486C270O486C275O434C281O462C287O605C293O605C298O530C304O551C309O575C315O897C321O897C326O923C331O643C337O668C343O694C349O727C355O763C361O807C367O841C373O870C379O1061C385O1061C390O943C396O963C402O984C408O1002C414O1021C420O1040C426O1112C429O1112C433O1112C435O1274C438O1156C444O1171C449O1191C454O1210C460O1228C465O1244C471O1259C477O1305C484O1311C488O1329C495O1345C499O1362C506O1377C510O1393C517O1407C521O1421C528O1439C532O1452C539O1469C543O1480C550O1305C552O1519C553O1519C555O1549C557O1549C559O1587C561O1587C566O1587C568O1623C571O1623C575O1623C577O1658C580O1658C584O1658C586O1707C589O1707C593O1707C595O1753C598O1753C602O1753C660O6149C688O6934C691O6934C695O6934C697O6985C700O6985C704O6985C736O7039C799O10653C827O12601C834O12623C840O12634C846O12655C852O12675C856O12726C866O12616C871O12767,,
code-creation,Function,10,282111,0x18f7264d2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x18f7264c140,~
code-source-info,0x18f7264d2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,282428,0x18f7264e6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x2e1cace2d40,~
code-source-info,0x18f7264e6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,282497,0x18f7264fba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x2e1cace5490,~
code-source-info,0x18f7264fba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,282562,0x18f7264fe4e,13,desc.value node:internal/per_context/primordials:334:32,0xc90ecca000,~
code-source-info,0x18f7264fe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,282603,0x18f7264ff56,13,SafeIterator node:internal/per_context/primordials:279:16,0xc90ecc9a50,~
code-source-info,0x18f7264ff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,282647,0x18f7265008e,13,next node:internal/per_context/primordials:282:9,0xc90ecc9b18,~
code-source-info,0x18f7265008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,282890,0x18f72650706,28,getEmbedderOptions node:internal/options:32:28,0xb16c53dac8,~
code-source-info,0x18f72650706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,283083,0x18f726509ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x2e1cacdc298,~
code-source-info,0x18f726509ae
code-creation,Eval,10,283426,0x18f72653906,5, node:internal/modules/run_main:1:1,0x18f726536e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x18f72653906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,283593,0x18f72653bee,178, node:internal/modules/run_main:1:1,0x18f72653880,~
code-source-info,0x18f72653bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,283769,0x18f7265441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x21b191446d0,~
code-source-info,0x18f7265441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,284039,0x18f72654636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x2e1cacdb788,~
code-source-info,0x18f72654636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,284137,0x18f7265471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x21b191447c0,~
code-source-info,0x18f7265471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,284241,0x18f72654916,166,Module._preloadModules node:internal/modules/cjs/loader:1263:34,0x2e1cacdc328,~
code-source-info,0x18f72654916,111,40910,41505,C0O40926C5O40931C11O40960C12O40967C13O40973C17O40986C23O41186C33O41186C42O41238C45O41260C53O41285C58O41285C63O41260C68O41251C85O41315C88O41321C95O41326C100O41349C106O41362C114O41378C116O41378C119O41415C121O41431C125O41420C130O41456C137O41472C141O41456C146O41440C151O41402C154O41481C158O41494C165O41504,,
code-creation,LazyCompile,10,284338,0x18f72654b36,94,Module node:internal/modules/cjs/loader:172:16,0x2e1cacdb0e8,~
code-source-info,0x18f72654b36,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,284562,0x18f72654d2e,449,dirname node:path:653:10,0x308c100d768,~
code-source-info,0x18f72654d2e
code-creation,LazyCompile,10,284745,0x18f72655136,45,updateChildren node:internal/modules/cjs/loader:165:24,0x2e1cacdb098,~
code-source-info,0x18f72655136,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,284865,0x18f72655326,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x2e1cacdbb38,~
code-source-info,0x18f
code-creation,Function,11,285083,0x1d3d54c5160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x2e1cacdbb38,^
code-source-info,0x1d3d54c5160,111,17765,19316,,,
code-creation,Function,11,285121,0x1d3d54c59e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0xb16c53d848,^
code-source-info,0x1d3d54c59e0,91,514,620,,,
code-creation,Function,11,285144,0x1d3d54c5c00,104,next node:internal/per_context/primordials:282:9,0xc90ecc9b18,^
code-source-info,0x1d3d54c5c00,6,8270,8317,,,
code-creation,Function,11,285171,0x1d3d54c5ce0,252,SafeMap node:internal/per_context/primordials:360:16,0xc90ecca0a8,^
code-source-info,0x1d3d54c5ce0,6,10694,10711,,,
code-creation,Function,11,285195,0x1d3d54c5e40,272,validateString node:internal/validators:118:24,0xc90ecfce70,^
code-source-info,0x1d3d54c5e40,15,3534,3646,,,
code-creation,Function,11,285225,0x1d3d54c5fc0,412,isWindowsDeviceRoot node:path:60:29,0x308c100d408,^
code-source-info,0x1d3d54c5fc0,41,1991,2136,,,
code-creation,LazyCompile,10,285323,0x18f72655aa6,127,Module.require node:internal/modules/cjs/loader:997:36,0x2e1cacdbf28,~
code-source-info,0x18f72655aa6,111,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,285933,0x18f72655d8e,619,Module._load node:internal/modules/cjs/loader:757:24,0x2e1cacdbd88,~
code-source-info,0x18f72655d8e
code-creation,LazyCompile,10,286610,0x18f72656226,89,logger node:internal/util/debuglog:95:18,0xb214e1f90,~
code-source-info,0x18f72656226,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,286911,0x18f72656366,3, node:internal/per_context/primordials:285:21,0xc90ecc9bc0,~
code-source-info,0x18f72656366,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,287030,0x18f7265643e,140,debug node:internal/util/debuglog:76:15,0xb214e1ef0,~
code-source-info,0x18f7265643e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,287126,0x18f726565ee,41,init node:internal/util/debuglog:72:16,0xb214e1ea0,~
code-source-info,0x18f726565ee,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,287170,0x18f726566de,2,testEnabled node:internal/util/debuglog:32:19,0x21b191581b0,~
code-source-info,0x18f726566de,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,287259,0x18f72656876,116,debuglogImpl node:internal/util/debuglog:49:22,0xb214e1cf0,~
code-source-info,0x18f72656876,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,287342,0x18f72656a2e,10, node:internal/modules/cjs/loader:272:66,0x2e1cacdba58,~
code-source-info,0x18f72656a2e,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,287379,0x18f72656ade,2,noop node:internal/util/debuglog:47:14,0xb214e1ca0,~
code-source-info,0x18f72656ade,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,287689,0x18f72656ede,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x2e1cacdbe10,~
code-source-info,0x18f72656ede
code-creation,LazyCompile,10,287917,0x18f7265749e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0xc90eccfb20,~
code-source-info,0x18f7265749e,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,288054,0x18f72657756,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x2e1cacdbc58,~
code-source-info,0x18f72657756,111,20630,21844,C0O20653C5O20670C10O20670C17O20708C25O20708C30O20753C31O20765C32O20812C39O20816C47O20850C52O20877C59O20884C66O20898C72O20898C80O20932C87O20950C93O20950C101O20984C108O21004C114O21017C120O21017C128O21051C133O21084C138O21102C145O21112C152O21119C161O21138C166O21174C171O21146C177O21203C191O21203C196O21268C202O21275C212O21294C213O21345C217O21368C223O21382C229O21556C234O21570C248O21570C253O21626C255O21643C256O21654C264O21721C272O21654C277O21749C286O21750C289O21755C294O21770C299O21755C311O21785C319O21785C324O21824C326O21841,,
code-creation,LazyCompile,10,288193,0x18f72657a76,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x2e1cacdb408,~
code-source-info,0x18f72657a76,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,288323,0x18f72657cb6,235,trySelf node:internal/modules/cjs/loader:441:17,0x2e1cacdb458,~
code-source-info,0x18f72657cb6,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,288454,0x18f72657f6e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x2e1cacdb228,~
code-source-info,0x18f72657f6e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,288587,0x18f726582ce,234,readPackage node:internal/modules/cjs/loader:290:21,0x2e1cacdb1d8,~
code-source-info,0x18f726582ce,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,288742,0x18f726585d6,199,read node:internal/modules/package_json_reader:16:14,0x2e1cace0da8,~
code-source-info,0x18f726585d6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,288855,0x18f726589f6,232,toNamespacedPath node:path:618:19,0x308c100d6f8,~
code-source-info,0x18f726589f6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,289338,0x18f7265963e,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x2e1cacdbaa8,~
code-source-info,0x18f7265963e
code-creation,LazyCompile,10,289513,0x18f726599ee,109,isAbsolute node:path:402:13,0x308c100d5d0,~
code-source-info,0x18f726599ee,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,289709,0x18f72659c7e,85,stat node:internal/modules/cjs/loader:151:14,0x2e1cacdb048,~
code-source-info,0x18f72659c7e,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,289854,0x18f72659dd6,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x2e1cacdb368,~
code-source-info,0x18f72659dd6,111,11900,12093,C0O11936C2O11948C6O11941C11O11985C16O12001C19O11995C23O11985C29O12022C31O12045C33O12061C34O11957C39O11923C42O12077C43O12090,,
code-creation,LazyCompile,10,289940,0x18f72659f06,50,tryFile node:internal/modules/cjs/loader:384:17,0x2e1cacdb2c8,~
code-source-info,0x18f72659f06,111,11460,11661,C0O11498C3O11498C8O11520C9O11527C14O11534C15O11541C16O11545C24O11570C26O11585C31O11597C36O11597C41O11618C42O11627C45O11634C49O11658,,
code-creation,LazyCompile,10,290246,0x18f7265a04e,42,toRealPath node:internal/modules/cjs/loader:393:20,0x2e1cacdb318,~
code-source-info,0x18f7265a04e,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,291025,0x18f7265a466,1042,realpathSync node:fs:2425:22,0xb16c5193f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x18f7265a
tick,0x7ff9995db8af,297444,0,0x0,3,0x7ff7a85d40c0,0x18f7265a071,0x18f72659f33,0x18f72659ded,0x18f72659794,0x18f7265716f,0x18f72655e18,0x18f72655af2,0x18f726549a3,0x18f7265474d,0x21b1914654c,0x21b19142065
code-creation,LazyCompile,10,297613,0x18f72660b8e,123,getOptions node:internal/fs/utils:315:20,0xb16c521c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x18f72660b8e,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
code-creation,LazyCompile,10,299627,0x18f72662b16,48,assertEncoding node:internal/fs/utils:152:24,0xb16c5216a0,~
code-source-info,0x18f72662b16,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,299787,0x18f72662c2e,20,toPathIfFileURL node:internal/url:1499:25,0x13f332f9258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x18f72662c2e,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,302428,0x18f72665d76,17,isURLInstance node:internal/url:1495:23,0x13f332f9208,~
code-source-info,0x18f72665d76,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
code-creation,LazyCompile,10,302593,0x18f72665ed6,81, node:internal/fs/utils:669:38,0xb16c5226c0,~
code-source-info,0x18f72665ed6,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,302722,0x18f726660e6,110, node:internal/fs/utils:358:35,0xb16c521d38,~
code-source-info,0x18f726660e6,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,302894,0x18f7266625e,16,isUint8Array node:internal/util/types:13:22,0xb214c7418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x18f7266625e,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,303293,0x18f726666c6,23,splitRoot node:fs:2375:33,0xb16c5192a8,~
code-source-info,0x18f726666c6,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,303653,0x18f726667ce,63,handleErrorFromBinding node:internal/fs/utils:341:32,0xb16c521ce8,~
code-source-info,0x18f726667ce,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,303780,0x18f72666946,53,nextPart node:fs:2401:31,0xb16c5193a0,~
code-source-info,0x18f72666946,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,303984,0x18f72666aa6,34,isFileType node:fs:205:20,0xb16c517010,~
code-source-info,0x18f72666aa6,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,304505,0x1d3d54c61c0,6232,resolve node:path:158:10,0x308c100d510,^
code-source-info,0x1d3d54c61c0,41,4875,9786,,,
code-creation,Function,11,304575,0x1d3d54c7a80,544,nextPart node:fs:2401:31,0xb16c5193a0,^
code-source-info,0x1d3d54c7a80,80,66157,66408,,,
code-creation,LazyCompile,10,305109,0x18f7266767e,72,encodeRealpathResult node:fs:2388:30,0xb16c519350,~
code-source-info,0x18f7266767e,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,305209,0x18f7266780e,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x2e1cacd5ad8,~
code-source-info,0x18f7266780e,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,305338,0x18f72668186,246,Module.load node:internal/modules/cjs/loader:969:33,0x2e1cacdbea0,~
code-source-info,0x18f72668186,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,305492,0x18f72668436,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x2e1cacdb3b8,~
code-source-info,0x18f72668436,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,305662,0x18f72668616,415,basename node:path:749:11,0x308c100d7d0,~
code-source-info,0x18f
code-creation,LazyCompile,10,305919,0x18f72668b36,485,Module._extensions..js node:internal/modules/cjs/loader:1114:37,0x2e1cacdc040,~
code-source-info,0x18f72668b
code-creation,LazyCompile,10,306125,0x18f72668f7e,376,readFileSync node:fs:450:22,0xb16c5174c8,~
code-source-info,0x18f72668f7e
code-creation,LazyCompile,10,306293,0x18f7266929e,30,isEncoding node:buffer:530:40,0xb214f75c0,~
code-source-info,0x18f7266929e,24,15337,15472,C0O15353C6O15401C12O15408C20O15427C23O15427C28O15455C29O15469,,
code-creation,LazyCompile,10,306342,0x18f726693a6,30,normalizeEncoding node:internal/util:160:27,0xb214c5d58,~
code-source-info,0x18f726693a6,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,306417,0x18f7266951e,113,openSync node:fs:576:18,0xb16c5176b0,~
code-source-info,0x18f7266951e,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,306474,0x18f7266969e,37, node:internal/fs/utils:681:42,0xb16c522710,~
code-source-info,0x18f7266969e,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,306664,0x18f72669a76,515,stringToFlags node:internal/fs/utils:556:23,0xb16c522530,~
code-source-info,0x18f72669a
code-creation,LazyCompile,10,308156,0x18f72669e66,97,parseFileMode node:internal/validators:59:23,0xc90ecfcd10,~
code-source-info,0x18f72669e66,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
tick,0x7ff7a7f9b5c5,308415,0,0x0,3,0x7ff7a85d40c0,0x18f7266952e,0x18f72668fb6,0x18f72668b72,0x18f72668216,0x18f72655f27,0x18f72655af2,0x18f726549a3,0x18f7265474d,0x21b1914654c,0x21b19142065
code-creation,LazyCompile,10,308475,0x18f72669ffe,206, node:internal/validators:84:3,0xc90ecfcdd0,~
code-source-info,0x18f72669ffe,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,308618,0x18f7266a1c6,9,isInt32 node:internal/validators:36:17,0xc90ecfc7b0,~
code-source-info,0x18f7266a1c6,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,309018,0x18f7266a2ce,66,tryStatSync node:fs:404:21,0xb16c5173d8,~
code-source-info,0x18f7266a2ce,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,309159,0x18f7266a446,96,tryCreateBuffer node:fs:414:25,0xb16c517428,~
code-source-info,0x18f7266a446,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,309228,0x18f7266a59e,17,allocUnsafe node:buffer:373:42,0xb214f7138,~
code-source-info,0x18f7266a59e,24,11277,11335,C0O11289C5O11289C9O11310C12O11317C16O11332,,
code-creation,LazyCompile,10,309276,0x18f7266a6a6,54, node:buffer:349:36,0xb214f7080,~
code-source-info,0x18f7266a6a6,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,309346,0x18f7266a7ce,30,validateNumber node:internal/validators:123:24,0xc90ecfcf10,~
code-source-info,0x18f7266a7ce,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,309411,0x18f7266a8e6,119,allocate node:buffer:398:18,0xb214f7288,~
code-source-info,0x18f7266a8e6,24,12004,12332,C0O12016C1O12025C6O12038C11O12045C16O12062C17O12071C20O12090C24O12099C27O12080C32O12114C34O12126C39O12137C41O12135C44O12123C49O12157C52O12157C55O12186C62O12201C67O12212C75O12186C81O12236C88O12250C94O12247C100O12261C103O12261C106O12279C108O12288C109O12297C114O12304C118O12329,,
code-creation,LazyCompile,10,309518,0x18f7266aaa6,86,tryReadSync node:fs:429:21,0xb16c517478,~
code-source-info,0x18f7266aaa6,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,309627,0x18f7266ac96,258,readSync node:fs:684:18,0xb16c517780,~
code-source-info,0x18f7266ac96,80,17835,18869,C0O17835C2O17879C7O17884C13O17909C18O17909C22O17952C29O17959C34O18036C40O18046C45O18046C50O18083C62O18102C68O18118C75O18129C80O18146C89O18191C94O18218C99O18247C112O18247C117O18295C124O18313C125O18324C130O18338C131O18347C132O18369C138O18380C143O18394C159O18400C164O18394C165O18526C170O18574C181O18526C186O18592C191O18619C195O18639C203O18639C208O18696C210O18718C215O18726C240O18726C246O18820C251O18820C255O18852C257O18866,,
code-creation,LazyCompile,10,309716,0x18f7266af06,52, node:internal/fs/utils:687:40,0xb16c522760,~
code-source-info,0x18f7266af06,81,19376,19505,C14O19406C22O19410C29O19435C30O19444C31O19455C44O19455C49O19492C51O19502,,
code-creation,LazyCompile,10,309777,0x18f7266b076,51, node:internal/validators:191:40,0xc90ecfd138,~
code-source-info,0x18f7266b076,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,309874,0x18f7266b1ce,151, node:internal/validators:73:3,0xc90ecfcd80,~
code-source-info,0x18f7266b1ce,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,309948,0x18f7266b3d6,103, node:internal/fs/utils:637:3,0xb16c522620,~
code-source-info,0x18f7266b3d6,81,17950,18340,C0O17991C1O18002C6O18016C22O18022C27O18016C28O18082C29O18093C34O18107C50O18113C55O18107C56O18173C58O18184C64O18193C69O18218C82O18308C95O18224C100O18218C102O18339,,
code-creation,LazyCompile,10,310027,0x18f7266b6de,151, node:internal/fs/utils:892:42,0xb16c522a80,~
code-source-info,0x18f7266b6de,81,25170,25742,C0O25195C6O25236C14O25236C21O25285C27O25326C32O25349C35O25344C37O25341C47O25375C53O25382C56O25369C61O25398C77O25482C80O25477C98O25502C104O25509C117O25404C122O25398C125O25586C143O25592C148O25586C150O25741,,
code-creation,LazyCompile,10,310136,0x18f7266b896,47,closeSync node:fs:526:19,0xb16c5175d8,~
code-source-info,0x18f7266b896,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,310257,0x18f7266b9ce,162,toString node:buffer:783:46,0xb214f8fc0,~
code-source-info,0x18f7266b9ce,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,310430,0x18f7266bc8e,499,getEncodingOps node:buffer:679:24,0xb214f8e18,~
code-source-info,0x18f7266bc8e
code-creation,LazyCompile,10,310631,0x18f7266c076,12,slice node:buffer:594:12,0xb214f77e0,~
code-source-info,0x18f7266c076,24,17229,17275,C0O17254C5O17254C11O17275,,
code-creation,LazyCompile,10,311165,0x18f7266cb3e,499,Module._compile node:internal/modules/cjs/loader:1059:37,0x2e1cacdbfb0,~
code-source-info,0x18f7266cb3e
code-creation,LazyCompile,10,311332,0x18f7266d0a6,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x2e1cacd2ff8,~
code-source-info,0x18f7266d0a6,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,311410,0x18f7266dafe,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x2e1cacd2f58,~
code-source-info,0x18f7266dafe,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,311465,0x18f7266dc76,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x2e1cacd2fa8,~
code-source-info,0x18f7266dc76,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,311511,0x18f7266ddee,30,validateBoolean node:internal/validators:139:25,0xc90ecfcfb0,~
code-source-info,0x18f7266ddee,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,311618,0x18f7266e1e6,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x2e1cacdb638,~
code-source-info,0x18f7266e1e6,111,32708,33836,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33229C74O33249C81O33259C86O33275C98O33397C102O33414C113O33259C118O33705C130O33730C135O33742C142O33753C147O33783C157O33783C162O33818C164O33818,,
code-creation,LazyCompile,10,311808,0x18f7266e9be,472,compileFunction node:vm:308:25,0xb16c534570,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x18f7266e9be
code-creation,LazyCompile,10,312562,0x18f7266fb86,95, node:internal/validators:168:39,0xc90ecfd070,~
code-source-info,0x18f7266fb86,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,312606,0x18f7266fce6,27, node:vm:313:27,0x18f7266e690,~
code-source-info,0x18f7266fce6,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,Eval,10,312663,0x18f7266ff5e,5, C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x18f7266fe18,~
script-source,133,C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x18f7266ff5e,133,0,119,C0O0C4O119,,
code-creation,Function,10,312702,0x18f72670046,29, C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x18f7266fed8,~
code-source-info,0x18f72670046,133,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,312811,0x18f726702be,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x18f7264bb88,~
code-source-info,0x18f726702be,131,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,312920,0x18f72671496,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x2e1cacd5b28,~
code-source-info,0x18f72671496,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,313040,0x18f726716e6,14,require node:internal/modules/cjs/helpers:101:31,0x18f72671368,~
code-source-info,0x18f726716e6,110,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,313086,0x18f72671826,10, node:internal/modules/cjs/helpers:29:66,0x2e1cacd5cf8,~
code-source-info,0x18f72671826,110,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,313137,0x18f7267199e,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0xc90eccfb98,~
code-source-info,0x18f7267199e,9,7789,8477,C0O7809C6O7956C16O7999C33O7962C38O7956C39O8038C44O8038C48O8081C54O8273C61O8304C69O8273C75O8329C80O8347C90O8363C93O8379C98O8363C102O8345C106O8406C111O8406C115O8432C120O8432C124O8464C128O8472,,
code-creation,Eval,10,313218,0x18f72671cfe,5, node:cluster:1:1,0x18f72671bb8,~
script-source,134,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x18f72671cfe,134,0,1316,C0O0C4O1316,,
code-creation,Function,10,313296,0x18f72671da6,39, node:cluster:1:1,0x18f72671c78,~
code-source-info,0x18f72671da6,134,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,313674,0x18f72672966,5, node:internal/cluster/primary:1:1,0x18f726725e0,~
script-source,135,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x18f72672966,135,0,11181,C0O0C4O11181,,
code-creation,Function,10,314198,0x18f7267332e,640, node:internal/cluster/primary:1:1,0x18f726728e0,~
code-source-info,0x18f7267332e
code-creation,Eval,10,314554,0x18f72674976,5, node:internal/cluster/round_robin_handle:1:1,0x18f72674760,~
script-source,136,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address\x2C backlog);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x18f72674976,136,0,3423,C0O0C4O3423,,
code-creation,Function,10,314736,0x18f72674d3e,217, node:internal/cluster/round_robin_handle:1:1,0x18f726748f0,~
code-source-info,0x18f72674d3e,136,0,3423,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1307C172O1321C176O1999C185O2016C189O2419C198O2440C202O2807C211O2825C216O3422,,
code-creation,Eval,10,314884,0x18f7267565e,5, node:internal/cluster/utils:1:1,0x18f726754e8,~
script-source,137,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x18f7267565e,137,0,1104,C0O0C4O1104,,
code-creation,Function,10,314970,0x18f7267581e,72, node:internal/cluster/utils:1:1,0x18f726755d8,~
code-source-info,0x18f7267581e,137,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,315115,0x18f72675e2e,5, node:internal/cluster/shared_handle:1:1,0x18f72675ca8,~
script-source,138,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x18f72675e2e,138,0,1147,C0O0C4O1147,,
code-creation,Function,10,315191,0x18f72676066,89, node:internal/cluster/shared_handle:1:1,0x18f72675da8,~
code-source-info,0x18f72676066,138,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,315325,0x18f7267664e,5, node:internal/cluster/worker:1:1,0x18f726764d8,~
script-source,139,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x18f7267664e,139,0,1370,C0O0C4O1370,,
code-creation,Function,10,315419,0x18f726769b6,141, node:internal/cluster/worker:1:1,0x18f726765c8,~
code-source-info,0x18f726769b6,139,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,315597,0x18f7267714e,151,getESMFacade node:internal/bootstrap/loaders:264:15,0xc90eccfc10,~
code-source-info,0x18f7267714e,9,8495,9141,C0O8495C8O8514C14O8534C18O8541C19O8570C29O8570C34O8555C39O8619C42O8632C51O8664C53O8664C55O8695C62O8720C67O8695C72O8738C82O8738C87O8787C89O8840C102O8801C107O8799C111O9052C116O9059C121O9059C125O9084C130O9091C140O9091C146O9129C150O9136,,
code-creation,LazyCompile,10,315699,0x18f72677536,40, node:internal/bootstrap/loaders:273:15,0x18f72677048,~
code-source-info,0x18f72677536,9,8868,8976,C0O8882C5O8895C10O8895C14O8924C24O8945C27O8958C32O8924C39O8975,,
code-creation,LazyCompile,10,315755,0x18f7267768e,89,syncExports node:internal/bootstrap/loaders:287:14,0xc90eccfc80,~
code-source-info,0x18f7267768e,9,9454,9797,C0O9483C5O9509C11O9539C13O9552C17O9544C22O9595C24O9600C28O9614C30O9629C35O9644C37O9668C42O9675C51O9728C54O9740C59O9766C67O9728C73O9675C79O9561C84O9526C88O9796,,
code-creation,LazyCompile,10,315804,0x18f726777f6,35,getOwn node:internal/bootstrap/loaders:180:16,0xc90eccf918,~
code-source-info,0x18f726777f6,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
code-creation,RegExp,3,316019,0x1d3d54c7d00,1532,(?:^|\\/)\\.?\\.$
code-creation,RegExp,3,316281,0x1d3d54c8360,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,316529,0x1d3d54c8a00,3380,dirname node:path:653:10,0x308c100d768,^
code-source-info,0x1d3d54c8a00,41,21280,23908,,,
code-creation,Function,11,316575,0x1d3d54c97a0,1936,toNamespacedPath node:path:618:19,0x308c100d6f8,^
code-source-info,0x1d3d54c97a0,41,20086,21201,,,
code-creation,Function,11,316599,0x1d3d54c9fa0,320,isFileType node:fs:205:20,0xb16c517010,^
code-source-info,0x1d3d54c9fa0,80,5489,5737,,,
code-creation,Function,11,316617,0x1d3d54ca140,304,getOwn node:internal/bootstrap/loaders:180:16,0xc90eccf918,^
code-source-info,0x1d3d54ca140,9,5677,5835,,,
code-creation,Function,11,316638,0x1d3d54ca2e0,672,syncExports node:internal/bootstrap/loaders:287:14,0xc90eccfc80,^
code-source-info,0x1d3d54ca2e0,9,9454,9797,,,
code-creation,Eval,10,316998,0x18f726784c6,5, C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x18f72678320,~
script-source,140,C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x18f726784c6,140,0,494,C0O0C4O494,,
code-creation,Function,10,317051,0x18f7267876e,157, C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x18f72678440,~
code-source-info,0x18f7267876e,140,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,317237,0x18f72678c3e,37,get SocketAddress node:net:1830:20,0x21b1916b860,~
code-source-info,0x18f72678c3e,101,50750,50858,C0O50760C14O50778C19O50811C26O50774C32O50832C36O50853,,
code-creation,Eval,10,317348,0x18f72678ffe,5, node:worker_threads:1:1,0x18f72678eb8,~
script-source,141,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x18f72678ffe,141,0,727,C0O0C4O727,,
code-creation,Function,10,317413,0x18f7267920e,180, node:worker_threads:1:1,0x18f72678f78,~
code-source-info,0x18f7267920e,141,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,318216,0x18f7267a196,5, node:internal/worker:1:1,0x18f72679bb8,~
script-source,142,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = {}) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x18f7267a196,142,0,15857,C0O0C4O15857,,
code-creation,Function,10,319168,0x18f7267b4e6,1185, node:internal/worker:1:1,0x18f7267a110,~
code-source-info,0x18f7267b4e
code-creation,Eval,10,319681,0x18f7267d42e,5, node:internal/error_serdes:1:1,0x18f7267d168,~
script-source,143,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x18f7267d42e,143,0,4324,C0O0C4O4324,,
code-creation,Function,10,319947,0x18f7267d84e,335, node:internal/error_serdes:1:1,0x18f7267d3a8,~
code-source-info,0x18f7267d84e,143,0,4324,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2171C302O2171C304O2376C305O2376C307O3408C308O3408C310O4268C317O4287C323O4303C329O4283C334O4323,,
code-creation,LazyCompile,10,320482,0x18f7267ecde,914,Socket node:net:285:16,0x21b19169728,~
code-source-info,0x18f7267ecde
code-creation,LazyCompile,10,320751,0x18f7267f3ae,109,Duplex node:internal/streams/duplex:52:16,0x308c1037fb0,~
script-source,55,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x18f7267f3ae,55,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
new,MemoryChunk,0x3d8dfd80000,262144
code-creation,LazyCompile,10,321236,0x18f7267fa56,220,Readable node:internal/streams/readable:181:18,0x72ad14c230,~
script-source,56,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x18f7267fa56,56,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
tick,0x7ff7a8f7f7a5,323979,0,0x0,3,0x7ff7a85c2760,0x18f726787af,0x18f7266cd09,0x18f72668d13,0x18f72668216,0x18f72655f27,0x18f72655af2,0x18f726549a3,0x18f7265474d,0x21b1914654c,0x21b19142065
code-creation,LazyCompile,10,324095,0x3d8dfd83d6e,18,Stream node:internal/streams/legacy:10:16,0x72ad14ea90,~
script-source,57,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x3d8dfd83d6e,57,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,324543,0x3d8dfd84636,354,ReadableState node:internal/streams/readable:78:23,0x72ad14c1e0,~
code-source-info,0x3d8dfd
code-creation,LazyCompile,10,324745,0x3d8dfd84a46,98,getHighWaterMark node:internal/streams/state:19:26,0x72ad151578,~
script-source,60,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x3d8dfd84a46,60,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,324872,0x3d8dfd84cde,26,highWaterMarkFrom node:internal/streams/state:10:27,0x72ad151418,~
code-source-info,0x3d8dfd84cde,60,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,324908,0x3d8dfd84db6,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x72ad151528,~
code-source-info,0x3d8dfd84db6,60,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,324981,0x3d8dfd84e96,17,BufferList node:internal/streams/buffer_list:14:14,0x72ad1508d0,~
script-source,59,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x3d8dfd84e96,59,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,325412,0x3d8dfd855e6,98,construct node:internal/streams/destroy:225:19,0x308c1036c70,~
script-source,54,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x3d8dfd855e6,54,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,326028,0x3d8dfd862be,266,Writable node:internal/streams/writable:219:18,0x72ad15aec8,~
script-source,63,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x3d8dfd862be,63,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
code-creation,LazyCompile,10,327626,0x3d8dfd8832e,341,WritableState node:internal/streams/writable:77:23,0x72ad15ad68,~
code-source-info,0x3d8dfd8832e
code-creation,LazyCompile,10,327815,0x3d8dfd8873e,23,resetBuffer node:internal/streams/writable:202:21,0x72ad15adb8,~
code-source-info,0x3d8dfd8873e,63,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,327896,0x3d8dfd88846,21,set node:internal/streams/readable:1174:8,0x72ad14d1d8,~
code-source-info,0x3d8dfd88846,56,36985,37117,C0O37037C6O37069C13O37097C15O37093C20O37116,,
code-creation,LazyCompile,10,328010,0x3d8dfd8899e,131,createHandle node:net:137:22,0x21b191694f8,~
code-source-info,0x3d8dfd8899e,101,3745,4121,C0O3766C13O3766C18O3810C23O3810C28O3834C30O3843C35O3862C42O3886C46O3898C49O3912C57O3921C60O3935C67O3869C72O3949C73O3960C75O3969C80O3987C87O4010C91O4022C94O4035C102O4044C105O4057C112O3994C117O4071C118O4082C125O4088C130O4082,,
code-creation,LazyCompile,10,328148,0x3d8dfd88b3e,14,set node:net:1754:6,0x21b1916b538,~
code-source-info,0x3d8dfd88b3e,101,48768,48801,C0O48774C2O48786C7O48795C13O48799,,
code-creation,LazyCompile,10,328249,0x3d8dfd88c2e,8,get node:net:1753:6,0x21b1916b4e8,~
code-source-info,0x3d8dfd88c2e,101,48732,48760,C0O48737C2O48749C4O48748C7O48758,,
code-creation,LazyCompile,10,328396,0x3d8dfd88dde,196,Readable.on node:internal/streams/readable:874:33,0x72ad14cb10,~
code-source-info,0x3d8dfd88dde,56,28621,29547,C0O28647C5O28654C10O28664C15O28667C29O28667C35O28709C40O28730C42O28737C47O28922C55O28922C62O28948C65O28915C69O29044C75O29052C80O29075C85O29075C91O29095C93O29102C98O29136C104O29157C110O29185C112O29230C118O29209C122O29245C123O29259C127O29275C128O29297C132O29313C140O29340C145O29354C150O29313C155O29381C161O29400C164O29400C170O29445C176O29465C179O29473C187O29473C193O29533C195O29544,,
code-creation,LazyCompile,10,328593,0x3d8dfd89056,135,initSocketHandle node:net:254:26,0x21b191696d8,~
code-source-info,0x3d8dfd89056,101,6586,7186,C0O6603C5O6603C9O6620C10O6635C14O6724C20O6745C27O6753C32O6767C36O6785C43O6802C45O6800C49O6821C51O6826C57O6864C62O6845C66O6843C70O6895C72O6900C74O6899C78O6915C80O6952C82O6957C84O6956C88O6977C90O7019C94O7038C99O7043C105O7077C106O7084C107O7094C109O7099C114O7108C118O7140C123O7148C128O7148C134O7185,,
code-creation,LazyCompile,10,328699,0x3d8dfd89286,120,undestroy node:internal/streams/destroy:160:19,0x308c1036bb0,~
code-source-info,0x3d8dfd89286,54,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,328813,0x3d8dfd89486,32,getNewAsyncId node:net:156:23,0x21b19169548,~
code-source-info,0x3d8dfd89486,101,4149,4268,C0O4163C4O4196C14O4230C17O4230C22O4252C27O4252C31O4265,,
code-creation,LazyCompile,10,328898,0x3d8dfd89586,5,get node:internal/bootstrap/pre_execution:370:8,0x2e1cacd8478,~
code-source-info,0x3d8dfd89586,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,328964,0x3d8dfd8965e,5,get C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x18f726784f8,~
code-source-info,0x3d8dfd8965e,140,392,404,C0O398C4O404,,
code-creation,Function,11,329904,0x1d3d54ca5e0,1148,readPackageScope node:internal/modules/cjs/loader:321:26,0x2e1cacdb228,^
code-source-info,0x1d3d54ca5e0,111,9239,9772,,,
code-creation,Function,11,329952,0x1d3d54caac0,216, node:vm:313:27,0x18f7266e690,^
code-source-info,0x1d3d54caac0,88,10064,10115,,,
code-creation,Function,11,329974,0x1d3d54cac00,72,isUint32 node:internal/validators:40:18,0xc90ecfccc0,^
code-source-info,0x1d3d54cac00,15,835,882,,,
code-creation,Function,11,329994,0x1d3d54cacc0,40,noop node:internal/util/debuglog:47:14,0xb214e1ca0,^
code-source-info,0x1d3d54cacc0,22,1465,1473,,,
code-creation,Function,11,330030,0x1d3d54cad60,1020,debuglog node:internal/util/debuglog:71:18,0xb214e1d40,^
code-source-info,0x1d3d54cad60,22,2302,3328,,,
code-creation,Function,11,330053,0x1d3d54cb1c0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0xc90eccfb20,^
code-source-info,0x1d3d54cb1c0,9,7593,7692,,,
code-creation,Function,11,330114,0x1d3d54cb320,72,isInt32 node:internal/validators:36:17,0xc90ecfc7b0,^
code-source-info,0x1d3d54cb320,15,769,814,,,
code-creation,Eval,10,330265,0x3d8dfd89e2e,5, C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x3d8dfd89ce8,~
script-source,144,C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x3d8dfd89e2e,144,0,85,C0O0C4O85,,
code-creation,Function,10,330312,0x3d8dfd89ece,56, C:\\Users\\jmauas\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x3d8dfd89da8,~
code-source-info,0x3d8dfd89ece,144,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,330547,0x3d8dfd8a5ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x21b19144770,~
code-source-info,0x3d8dfd8a5ae,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,330669,0x3d8dfd8a6d6,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x18f72653a78,~
code-source-info,0x3d8dfd8a6d6,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,330738,0x3d8dfd8ab06,68,resolveMainPath node:internal/modules/run_main:15:25,0x18f72653938,~
code-source-info,0x3d8dfd8ab06,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,331267,0x1d3d54cb3e0,7720,realpathSync node:fs:2425:22,0xb16c5193f0,^
code-source-info,0x1d3d54cb3e0,80,66755,70785,,,
code-creation,Function,11,331327,0x1d3d54cd280,160,checkListener node:events:258:23,0xb214eb2f8,^
code-source-info,0x1d3d54cd280,23,7884,7942,,,
code-creation,Function,11,331346,0x1d3d54cd380,128,addListener node:events:618:58,0xb214eba38,^
code-source-info,0x1d3d54cd380,23,18854,18928,,,
code-creation,LazyCompile,10,331784,0x3d8dfd8b7ce,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x18f72653988,~
code-source-info,0x3d8dfd8b7ce,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,331999,0x3d8dfd8ba46,70,runMainESM node:internal/modules/run_main:47:20,0x18f726539d8,~
code-source-info,0x3d8dfd8ba46,132,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,332171,0x3d8dfd8bc86,222,loadESM node:internal/process/esm_loader:85:41,0x2e1cace1870,~
code-source-info,0x3d8dfd8bc86,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,332284,0x3d8dfd8c2a6,284,initializeLoader node:internal/process/esm_loader:50:32,0x2e1cace1740,~
code-source-info,0x3d8dfd8c2a6,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,332388,0x3d8dfd8c596,175,handleMainPromise node:internal/modules/run_main:58:33,0x18f72653a28,~
code-source-info,0x3d8dfd8c596,132,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,332542,0x3d8dfd8c7d6,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x13f332daa00,~
code-source-info,0x3d8dfd8c7d
code-creation,LazyCompile,10,332763,0x3d8dfd8caae,43,shift node:internal/fixed_queue:108:8,0x13f332dfd20,~
code-source-info,0x3d8dfd8caae,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,332826,0x3d8dfd8cbf6,54,shift node:internal/fixed_queue:80:8,0x13f332dfb30,~
code-source-info,0x3d8dfd8cbf6,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,332893,0x3d8dfd8cd2e,42,emitBeforeScript node:internal/async_hooks:510:26,0xc90ecf8c78,~
code-source-info,0x3d8dfd8cd2e,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,332960,0x3d8dfd8ce7e,180,pushAsyncContext node:internal/async_hooks:540:26,0xc90ecf8e20,~
code-source-info,0x3d8dfd8ce7e,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,333107,0x3d8dfd8d096,125, node:internal/child_process:708:22,0x2e1caccee58,~
code-source-info,0x3d8dfd8d096,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,333203,0x3d8dfd8d256,31,listenerCount node:events:854:23,0xb214ebf80,~
code-source-info,0x3d8dfd8d256,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,333250,0x3d8dfd8d35e,13,destroyHooksExist node:internal/async_hooks:487:27,0xc90ecf8b88,~
code-source-info,0x3d8dfd8d35e,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,333298,0x3d8dfd8d44e,32,emitAfterScript node:internal/async_hooks:518:25,0xc90ecf8cc8,~
code-source-info,0x3d8dfd8d44e,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,333366,0x3d8dfd8d5b6,167,popAsyncContext node:internal/async_hooks:554:25,0xc90ecf8e70,~
code-source-info,0x3d8dfd8d5b6,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,333439,0x3d8dfd8d796,13,enabledHooksExist node:internal/async_hooks:475:27,0xc90ecf8a78,~
code-source-info,0x3d8dfd8d796,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,333561,0x3d8dfd8d946,77, node:internal/modules/run_main:51:29,0x3d8dfd8b980,~
code-source-info,0x3d8dfd8d946,132,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,333689,0x3d8dfd8dbc6,283,pathToFileURL node:internal/url:1458:23,0x13f332f9198,~
code-source-info,0x3d8dfd8dbc
code-creation,LazyCompile,10,333829,0x3d8dfd8de96,136,URL node:internal/url:621:14,0x13f332f7fb0,~
code-source-info,0x3d8dfd8de96,39,17620,18024,C13O17688C17O17717C19O17736C23O17769C30O17784C40O17798C42O17797C46O17820C50O17825C57O17840C60O17836C65O17834C69O17859C85O17912C93O17912C103O17969C117O17969C129O17859C135O18023,,
code-creation,LazyCompile,10,334018,0x3d8dfd8e076,51,URLContext node:internal/url:161:14,0x13f332f7750,~
code-source-info,0x3d8dfd8e076,39,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,334220,0x3d8dfd8e2be,190,onParseComplete node:internal/url:533:25,0x13f332f7ce0,~
code-source-info,0x3d8dfd8e2be,39,14738,15424,C0O14854C2O14859C4O14858C8O14872C10O14882C14O14894C16O14905C20O14920C22O14944C24O14942C29O14968C43O14933C47O14994C49O15018C51O15016C56O15042C70O15007C74O15068C76O15077C80O15088C82O15108C84O15106C89O15128C101O15136C103O15097C107O15150C109O15160C113O15172C115O15185C119O15200C121O15209C125O15220C127O15230C129O15229C134O15284C136O15289C141O15309C144O15305C149O15303C153O15333C155O15338C157O15337C163O15352C168O15361C172O15377C177O15399C179O15398C183O15377C189O15423,,
code-creation,LazyCompile,10,334471,0x3d8dfd8e746,889,URLSearchParams node:internal/url:183:14,0x13f332f77f0,~
code-source-info,0x3d8dfd8e
code-creation,LazyCompile,10,334649,0x3d8dfd8ed26,35,initSearchParams node:internal/url:1019:26,0x13f332f8cf8,~
code-source-info,0x3d8dfd8ed26,39,28156,28277,C0O28173C4O28191C6O28195C11O28209C15O28220C16O28227C17O28236C19O28240C25O28256C29O28254C34O28276,,
code-creation,LazyCompile,10,334766,0x3d8dfd8eed6,199,encodePathChars node:internal/url:1443:25,0x13f332f9148,~
code-source-info,0x3d8dfd8eed6,39,40900,41605,C0O40916C8O40920C15O40965C22O41009C31O40976C38O41091C46O41109C52O41109C59O41155C66O41199C75O41166C82O41226C90O41230C97O41276C104O41320C113O41287C120O41345C128O41349C135O41395C142O41439C151O41406C158O41471C166O41475C173O41521C180O41565C189O41532C196O41586C198O41602,,
code-creation,LazyCompile,10,334875,0x3d8dfd8f106,70,set pathname node:internal/url:887:15,0x13f332f88e8,~
code-source-info,0x3d8dfd8f106,39,24614,24823,C0O24663C5O24686C9O24695C11O24694C16O24717C17O24724C18O24730C29O24742C38O24765C40O24764C49O24806C54O24806C63O24730C69O24822,,
code-creation,LazyCompile,10,334927,0x3d8dfd8f256,31, node:internal/url:638:21,0x13f332f8088,~
code-source-info,0x3d8dfd8f256,39,18137,18214,C0O18147C4O18160C6O18159C10O18169C19O18177C21O18175C26O18203C30O18209,,
code-creation,LazyCompile,10,335006,0x3d8dfd8f386,108,onParsePathComplete node:internal/url:592:29,0x13f332f7ec0,~
code-source-info,0x3d8dfd8f386,39,16756,17238,C0O16876C2O16881C4O16880C8O16894C10O16907C12O16905C17O16927C22O16941C24O16950C28O16963C35O16976C40O16973C46O17013C48O17022C52O17033C59O17047C61O17046C66O17043C70O17129C72O17142C74O17140C79O17162C84O17176C86O17185C90O17198C97O17211C102O17208C107O17237,,
code-creation,LazyCompile,10,335107,0x3d8dfd8f526,18,get href node:internal/url:736:11,0x13f332f8218,~
code-source-info,0x3d8dfd8f526,39,20900,20940,C0O20910C4O20922C6O20921C12O20930C17O20935,,
code-creation,LazyCompile,10,335220,0x3d8dfd8f7de,393, node:internal/url:684:12,0x13f332f8178,~
code-source-info,0x3d8dfd8f7de
code-creation,LazyCompile,10,335428,0x3d8dfd8fc6e,308,import node:internal/modules/esm/loader:372:15,0x2e1cace2f20,~
code-source-info,0x3d8dfd8fc6e,114,11547,12117,C10O11547C18O11611C25O11611C30O11642C32O11655C41O11669C50O11714C55O11740C64O11740C70O11778C81O11973C90O11793C98O11783C100O11783C116O11821C123O11844C137O11821C143O11887C154O11888C160O11922C170O11923C175O11814C186O11765C201O12001C212O12022C217O12018C223O12007C235O12001C261O12055C270O12108C283O12112,,
code-creation,LazyCompile,10,335556,0x3d8dfd8ffd6,251,getModuleJob node:internal/modules/esm/loader:285:21,0x2e1cace2ed0,~
code-source-info,0x3d8dfd8ffd6,114,8519,9368,C10O8519C18O8571C20O8604C22O8613C26O8622C33O8629C38O8796C49O8847C54O8847C59O8834C65O8940C82O8940C95O8929C118O8906C123O8914C128O9021C133O9031C138O9057C143O9031C150O9132C154O9177C159O9187C166O9213C176O9187C181O9235C185O9267C187O9278C208O9294C214O9352C226O9363,,
code-creation,LazyCompile,10,335690,0x3d8dfd9042e,425,resolve node:internal/modules/esm/loader:556:16,0x2e1cace3060,~
code-source-info,0x3d8dfd9042e,114,17002,18544,C10O17002C32O17068C37O17068C75O17114C79O17146C91O17217C94O17217C100O17249C120O17255C125O17249C126O17379C133O17430C135O17435C140O17445C144O17474C146O17479C150O17490C157O17497C168O17542C174O17552C178O17604C185O17641C191O17662C197O17689C207O17587C220O17581C246O17749C252O17794C270O17800C275O17794C276O17929C281O17937C286O17964C297O18044C318O18050C323O18044C324O18195C330O18279C351O18285C356O18279C357O18424C366O18424C371O18496C378O18512C384O18527C400O18539,,
code-creation,LazyCompile,10,336056,0x3d8dfd90c86,939,defaultResolve node:internal/modules/esm/resolve:1128:30,0x2e1caceb438,~
code-source-info,0x3d8dfd90c86,118,37458,41488,C6O37458C65O37517C70O37528C75O37555C81O37572C87O37578C96O37615C102O37622C108O37631C114O37631C120O37668C122O37700C127O37709C133O37760C135O37783C141O37779C148O37760C155O37826C158O37839C159O37855C164O37876C169O37907C173O37960C179O37975C187O37989C205O37996C206O38013C210O38228C212O38241C218O38329C224O38352C231O38329C246O38237C253O38228C257O38414C259O38434C266O38469C274O38487C283O38485C286O38570C291O38592C295O38596C301O38657C315O38666C323O38724C331O38733C337O38778C345O38787C352O38810C356O38869C364O38878C369O38912C377O38921C382O38969C388O38990C410O38997C417O39288C430O39288C436O39375C438O39392C451O39411C452O39468C456O39489C464O39498C469O39511C477O39525C495O39537C496O39543C502O39579C506O39543C511O39628C515O39656C517O39675C527O39712C533O39712C547O39687C553O39721C558O40141C564O40155C570O40161C575O40155C576O40205C580O40218C585O40255C590O40274C605O40353C609O40362C615O40385C619O40280C629O40278C640O40527C644O40537C652O40542C661O40587C669O40592C674O40635C686O40639C693O40699C701O40711C706O40767C712O40767C718O40815C720O40919C732O40946C742O40919C748O40982C754O41008C766O41027C774O41052C778O41052C786O41079C793O41086C800O41104C809O41124C817O41124C822O41111C825O41039C829O41166C845O41188C852O41180C856O41217C858O41217C859O41240C863O41240C867O41281C873O41416C883O41435C887O41435C910O41485,,
code-creation,LazyCompile,10,336213,0x3d8dfd93ac6,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:975:49,0x2e1caceb258,~
code-source-info,0x3d8dfd93ac6,118,32653,32792,C0O32670C2O32684C7O32692C8O32705C9O32709C10O32722C16O32726C21O32735C22O32747C23O32751C26O32758C30O32789,,
code-creation,LazyCompile,10,336263,0x3d8dfd93bde,81,isRelativeSpecifier node:internal/modules/esm/resolve:965:29,0x2e1caceb208,~
code-source-info,0x3d8dfd93bde,118,32350,32601,C0O32367C1O32380C7O32384C12O32414C19O32421C26O32439C32O32443C37O32452C38O32464C39O32470C41O32483C47O32487C52O32519C59O32526C66O32544C72O32548C77O32557C78O32569C79O32585C80O32598,,
code-creation,LazyCompile,10,336371,0x3d8dfd93d6e,15,get protocol node:internal/url:772:15,0x13f332f8358,~
code-source-info,0x3d8dfd93d6e,39,21820,21863,C0O21830C4O21842C6O21841C10O21851C14O21858,,
code-creation,LazyCompile,10,336464,0x3d8dfd93f66,191,checkIfDisallowedImport node:internal/modules/esm/resolve:1059:33,0x2e1caceb348,~
code-source-info,0x3d8dfd93f66,118,35531,36707,C0O35573C4O35619C16O35648C24O35619C29O35692C36O35701C41O35739C48O35748C53O35777C56O35781C62O35940C66O35972C73O35981C78O36015C85O36024C90O36060C106O36066C111O36060C112O36252C117O36273C127O36280C128O36297C133O36314C138O36314C145O36358C161O36364C166O36358C167O36538C183O36544C188O36538C190O36706,,
code-creation,LazyCompile,10,336550,0x3d8dfd941ce,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1107:37,0x2e1caceb3e8,~
code-source-info,0x3d8dfd941ce,118,36954,37425,C0O36996C4O37028C11O37037C16O37064C23O37073C30O37103C32O37158C39O37167C44O37199C51O37208C56O37248C63O37297C77O37356C88O37297C96O37254C101O37248C103O37424,,
code-creation,LazyCompile,10,336663,0x3d8dfd94386,64,getConditionsSet node:internal/modules/esm/resolve:170:26,0x2e1caceaa88,~
code-source-info,0x3d8dfd94386,118,5549,5885,C0O5567C6O5614C8O5610C13O5641C18O5646C24O5681C40O5687C45O5681C46O5812C53O5819C58O5843C59O5852C63O5882,,
code-creation,LazyCompile,10,336747,0x3d8dfd94506,171,moduleResolve node:internal/modules/esm/resolve:988:23,0x2e1caceb2a8,~
code-source-info,0x3d8dfd94506,118,32994,33785,C0O33069C7O33078C12O33103C19O33112C23O33235C25O33248C28O33252C34O33311C47O33322C55O33358C60O33384C66O33388C71O33404C83O33420C89O33407C99O33503C106O33514C115O33512C116O33556C120O33582C132O33593C138O33675C145O33684C150O33702C152O33718C153O33722C165O33729C170O33782,,
code-creation,LazyCompile,10,336948,0x3d8dfd94896,490,finalizeResolution node:internal/modules/esm/resolve:397:28,0x2e1cacead08,~
code-source-info,0x3d8dfd
code-creation,LazyCompile,10,337095,0x3d8dfd94cb6,78,get pathname node:internal/url:878:15,0x13f332f8878,~
code-source-info,0x3d8dfd94cb6,39,24396,24596,C0O24418C4O24423C6O24422C10O24438C14O24447C16O24446C21O24480C27O24484C30O24488C31O24502C36O24507C42O24514C47O24528C49O24538C50O24544C57O24555C60O24578C68O24555C77O24591,,
code-creation,LazyCompile,10,337240,0x3d8dfd94f0e,106,fileURLToPath node:internal/url:1416:23,0x13f332f90f8,~
code-source-info,0x3d8dfd94f0e,39,39764,40097,C0O39776C6O39811C13O39818C22O39841C25O39846C31O39872C49O39878C54O39872C55O39949C62O39958C67O39976C77O39982C82O39976C83O40021C92O40040C101O40068C105O40094,,
code-creation,LazyCompile,10,337363,0x3d8dfd95146,150,get origin node:internal/url:749:13,0x13f332f82e8,~
code-source-info,0x3d8dfd95146,39,21222,21802,C0O21306C4O21311C6O21310C10O21338C59O21386C64O21391C70O21398C78O21435C83O21455C89O21459C95O21443C101O21465C105O21472C110O21570C116O21591C117O21703C122O21735C127O21747C132O21757C137O21710C142O21763C143O21776C149O21797,,
tick,0x7ff7a8f6f1b0,337773,0,0x0,3,0x7ff7a85d40c0,0x3d8dfd94f6a,0x3d8dfd948d0,0x3d8dfd945ab,0x3d8dfd90ef1,0x3d8dfd904fd,0x3d8dfd90028,0x3d8dfd8fcf7,0x3d8dfd8d98d,0x3d8dfd8bcc5,0x7ff7a8a3b243,0x7ff7a8024770,0x3d8dfd8c8db
code-creation,LazyCompile,10,337995,0x3d8dfd95416,261,getPathFromURLWin32 node:internal/url:1363:29,0x13f332f9058,~
code-source-info,0x3d8dfd
code-creation,LazyCompile,10,338121,0x3d8dfd956be,19,get hostname node:internal/url:844:15,0x13f332f86c8,~
code-source-info,0x3d8dfd956be,39,23572,23619,C0O23582C4O23594C6O23593C10O23603C18O23614,,
code-creation,LazyCompile,10,338237,0x3d8dfd957e6,30,tryStatSync node:internal/modules/esm/resolve:189:3,0x2e1caceb488,~
code-source-info,0x3d8dfd957e6,118,6098,6164,C0O6153C5O6117C10O6108C21O6157C24O6153C29O6164,,
code-creation,LazyCompile,10,338348,0x3d8dfd9599e,123,statSync node:fs:1543:18,0xb16c5184e8,~
code-source-info,0x3d8dfd9599e,80,40711,41125,C7O40711C16O40774C21O40781C26O40820C33O40822C40O40847C45O40855C52O40860C55O40871C60O40871C66O40933C76O40855C82O40973C88O40988C96O41001C102O41030C103O41047C104O41056C109O41056C113O41088C118O41095C122O41122,,
code-creation,LazyCompile,10,338614,0x3d8dfd95bae,64,hasNoEntryError node:fs:1480:25,0xb16c5183b8,~
code-source-info,0x3d8dfd95bae,80,39085,39287,C0O39104C6O39132C11O39148C16O39132C21O39161C27O39175C36O39179C39O39192C40O39211C46O39236C51O39242C58O39247C61O39260C62O39271C63O39284,,
code-creation,LazyCompile,10,338745,0x3d8dfd95ce6,576,getStatsFromBinding node:internal/fs/utils:531:29,0xb16c5224e0,~
code-source-info,0x3d8dfd95ce
code-creation,LazyCompile,10,338892,0x3d8dfd96116,16,isBigUint64Array node:internal/util/types:53:26,0xb214c7880,~
code-source-info,0x3d8dfd96116,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,338945,0x3d8dfd96236,19,msFromTimeSpec node:internal/fs/utils:447:24,0xb16c522208,~
code-source-info,0x3d8dfd96236,81,11486,11547,C0O11503C2O11516C4O11514C10O11535C12O11533C15O11526C18O11544,,
code-creation,LazyCompile,10,339042,0x3d8dfd96476,116,Stats node:internal/fs/utils:496:15,0xb16c522400,~
code-source-info,0x3d8dfd96476,81,13278,13819,C0O13418C41O13418C46O13548C48O13561C52O13575C54O13588C58O13602C60O13615C64O13629C66O13646C70O13664C73O13677C77O13675C81O13701C84O13714C88O13712C92O13738C95O13751C99O13749C103O13775C106O13792C110O13790C115O13818,,
code-creation,LazyCompile,10,339112,0x3d8dfd9664e,62,StatsBase node:internal/fs/utils:401:19,0xb16c521dd8,~
code-source-info,0x3d8dfd9664e,81,10347,10648,C0O10435C2O10444C6O10454C8O10464C12O10475C14O10486C18O10498C20O10507C24O10517C26O10526C30O10536C32O10546C36O10557C38O10570C42O10584C44O10593C48O10603C50O10613C54O10624C56O10636C61O10647,,
code-creation,LazyCompile,10,339211,0x3d8dfd96846,29,dateFromMs node:internal/fs/utils:461:20,0xb16c5222a8,~
code-source-info,0x3d8dfd96846,81,12012,12059,C0O12022C7O12038C10O12038C17O12049C23O12029C28O12056,,
code-creation,LazyCompile,10,339272,0x3d8dfd9694e,16,StatsBase.isDirectory node:internal/fs/utils:415:43,0xb16c521e28,~
code-source-info,0x3d8dfd9694e,81,10694,10745,C0O10714C7O10733C10O10714C15O10742,,
code-creation,LazyCompile,10,339324,0x3d8dfd96a66,54,Stats._checkModeProperty node:internal/fs/utils:518:46,0xb16c522450,~
code-source-info,0x3d8dfd96a66,81,14177,14405,C0O14193C8O14224C10O14220C17O14248C19O14244C26O14277C28O14273C33O14295C34O14308C35O14374C42O14381C44O14379C50O14389C53O14402,,
code-creation,LazyCompile,10,339372,0x3d8dfd96b9e,16,StatsBase.isFile node:internal/fs/utils:419:38,0xb16c521eb8,~
code-source-info,0x3d8dfd96b9e,81,10787,10838,C0O10807C7O10826C10O10807C15O10835,,
code-creation,LazyCompile,10,339947,0x3d8dfd96dee,37,get search node:internal/url:896:13,0x13f332f8958,~
code-source-info,0x3d8dfd96dee,39,24839,24970,C0O24867C4O24872C6O24871C10O24857C15O24887C19O24915C24O24930C26O24940C27O24946C32O24957C36O24965,,
code-creation,LazyCompile,10,340018,0x3d8dfd96f36,37,get hash node:internal/url:926:11,0x13f332f8aa8,~
code-source-info,0x3d8dfd96f36,39,25601,25744,C0O25632C4O25637C6O25636C10O25619C15O25652C19O25686C24O25701C26O25711C27O25717C32O25728C36O25739,,
code-creation,LazyCompile,10,340230,0x3d8dfd970c6,181,set search node:internal/url:903:13,0x13f332f89c8,~
code-source-info,0x3d8dfd970c6,39,24986,25509,C0O25014C4O25019C6O25018C10O25034C17O25043C23O25069C25O25080C30O25097C31O25107C35O25122C44O25136C46O25135C51O25132C57O25178C58O25188C64O25192C69O25201C79O25210C86O25250C88O25260C92O25273C101O25286C106O25283C110O25314C114O25337C125O25351C134O25385C142O25385C154O25337C159O25459C168O25481C170O25480C174O25459C180O25508,,
code-creation,LazyCompile,10,340313,0x3d8dfd972be,41,toUSVString node:internal/util:59:21,0xb214c5110,~
code-source-info,0x3d8dfd972be,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,340421,0x3d8dfd97436,144,set hash node:internal/url:933:11,0x13f332f8b10,~
code-source-info,0x3d8dfd97436,39,25758,26205,C0O25784C4O25789C6O25788C10O25839C15O25862C17O25882C18O25895C22O25910C31O25924C33O25923C38O25920C42O25955C43O25962C44O25975C45O25983C51O25987C56O25996C66O26003C73O26039C75O26052C79O26063C88O26076C93O26073C97O26105C108O26117C117O26150C125O26150C137O26105C143O26204,,
code-creation,LazyCompile,10,340496,0x3d8dfd975fe,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1100:39,0x2e1caceb398,~
code-source-info,0x3d8dfd975fe,118,36749,36914,C0O36768C7O36777C12O36796C19O36805C24O36831C31O36840C36O36860C43O36866C48O36860C50O36913,,
code-creation,LazyCompile,10,340614,0x3d8dfd97796,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:103:39,0x2e1cacef678,~
code-source-info,0x3d8dfd97796,119,3548,3759,C0O3583C7O3583C13O3600C20O3635C23O3660C28O3605C35O3676C36O3688C37O3692C42O3723C46O3715C58O3732C63O3756,,
code-creation,LazyCompile,10,340674,0x3d8dfd97cd6,18,toString node:internal/url:732:11,0x13f332f81c8,~
code-source-info,0x3d8dfd97cd6,39,20846,20886,C0O20856C4O20868C6O20867C12O20876C17O20881,,
code-creation,LazyCompile,10,340823,0x3d8dfd9807e,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:51:37,0x2e1cacef5d8,~
code-source-info,0x3d8dfd9807e,119,1588,2922,C0O1639C5O1639C10O1674C15O1674C20O1696C22O1704C27O1722C32O1729C39O1749C50O1786C51O1812C58O1830C62O1840C64O1852C66O1866C67O1872C74O1908C79O2007C83O2025C84O2042C85O2065C88O2074C93O2078C100O2098C107O2118C112O2150C117O2150C122O2206C127O2206C132O2254C139O2275C142O2291C147O2275C156O2254C162O2324C167O2395C171O2491C182O2470C191O2568C201O2545C207O2621C216O2747C229O2765C239O2708C243O2799C259O2805C264O2799C265O2874C270O2881C279O2919,,
code-creation,Function,11,340986,0x1d3d54cd460,1916,getPathFromURLWin32 node:internal/url:1363:29,0x13f332f9058,^
code-source-info,0x1d3d54cd460,39,37816,39214,,,
code-creation,Function,11,341036,0x1d3d54cdc40,152,hasHooks node:internal/async_hooks:471:18,0xc90ecf8a28,^
code-source-info,0x1d3d54cdc40,13,16531,16579,,,
code-creation,Function,11,341055,0x1d3d54cdd40,108,isEmpty node:internal/fixed_queue:67:10,0x13f332dfa10,^
code-source-info,0x1d3d54cdd40,34,3150,3197,,,
code-creation,Function,11,341073,0x1d3d54cde20,164,isUint8Array node:internal/util/types:13:22,0xb214c7418,^
code-source-info,0x1d3d54cde20,17,269,356,,,
code-creation,Function,11,341110,0x1d3d54cdf40,188,isURLInstance node:internal/url:1495:23,0x13f332f9208,^
code-source-info,0x1d3d54cdf40,39,42921,43020,,,
code-creation,Function,11,341137,0x1d3d54ce060,568,handleErrorFromBinding node:internal/fs/utils:341:32,0xb16c521ce8,^
code-source-info,0x1d3d54ce060,81,8304,8815,,,
code-creation,Function,11,341158,0x1d3d54ce300,280, node:internal/url:638:21,0x13f332f8088,^
code-source-info,0x1d3d54ce300,39,18137,18214,,,
code-creation,Function,11,341183,0x1d3d54ce480,156,get protocol node:internal/url:772:15,0x13f332f8358,^
code-source-info,0x1d3d54ce480,39,21820,21863,,,
code-creation,LazyCompile,10,341310,0x3d8dfd98a4e,275,extname node:path:836:10,0x308c100d838,~
code-source-info,0x3d8dfd98a4e
code-creation,LazyCompile,10,341409,0x3d8dfd98cde,13,getPackageType node:internal/modules/esm/resolve:848:24,0x2e1caceb0c8,~
code-source-info,0x3d8dfd98cde,118,28538,28631,C0O28571C3O28571C8O28623C12O28628,,
code-creation,LazyCompile,10,341482,0x3d8dfd98f36,173,getPackageScopeConfig node:internal/modules/esm/resolve:253:31,0x2e1caceab28,~
code-source-info,0x3d8dfd98f36,118,7802,8901,C0O7839C13O7839C19O7938C24O7953C32O7957C39O8035C41O8069C46O8086C49O8086C54O8069C60O8195C66O8203C68O8224C69O8259C72O8280C85O8297C91O8506C96O8538C100O8515C105O8548C107O7879C110O8587C115O8587C120O8643C127O8661C132O8709C137O8731C142O8775C147O8800C154O8820C159O8837C164O8837C170O8877C172O8898,,
code-creation,LazyCompile,10,341717,0x3d8dfd99396,331,getPackageConfig node:internal/modules/esm/resolve:197:26,0x2e1caceaad8,~
code-source-info,0x3d8dfd
code-creation,Function,11,341931,0x1d3d54ce580,620,get pathname node:internal/url:878:15,0x13f332f8878,^
code-source-info,0x1d3d54ce580,39,24396,24596,,,
code-creation,Function,11,341956,0x1d3d54ce860,340,URLContext node:internal/url:161:14,0x13f332f7750,^
code-source-info,0x1d3d54ce860,39,3883,4105,,,
code-creation,Function,11,342016,0x1d3d54cea20,1468,onParseComplete node:internal/url:533:25,0x13f332f7ce0,^
code-source-info,0x1d3d54cea20,39,14738,15424,,,
code-creation,Function,11,342050,0x1d3d54cf040,956,URL node:internal/url:621:14,0x13f332f7fb0,^
code-source-info,0x1d3d54cf040,39,17620,18024,,,
code-creation,LazyCompile,10,342260,0x3d8dfd99e96,78,get node:internal/modules/esm/module_map:18:6,0x2e1cace54e0,~
code-source-info,0x3d8dfd99e96,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,342350,0x3d8dfd9a08e,111,#createModuleJob node:internal/modules/esm/loader:321:19,0x2e1cace2cf0,~
code-source-info,0x3d8dfd9a08e,114,10035,10886,C0O10035C17O10108C22O10555C31O10598C37O10598C42O10657C70O10657C76O10810C79O10815C84O10825C92O10851C103O10825C108O10870C110O10881,,
code-creation,LazyCompile,10,342471,0x3d8dfd9a3b6,196,ModuleJob node:internal/modules/esm/module_job:56:14,0x2e1cace6370,~
code-source-info,0x3d8dfd9a3b6,116,1367,3272,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2948C152O2962C155O2960C159O3072C169O3099C178O3107C181O3072C186O3237C190O3255C195O3271,,
code-creation,LazyCompile,10,342592,0x3d8dfd9ae2e,193,moduleProvider node:internal/modules/esm/loader:322:28,0x3d8dfd99fb8,~
code-source-info,0x3d8dfd9ae2e,114,10108,10527,C10O10108C18O10206C21O10217C26O10222C33O10238C39O10255C43O10217C57O10206C80O10165C85O10187C90O10312C97O10324C102O10324C108O10351C110O10379C125O10385C130O10379C131O10452C153O10459C168O10520,,
code-creation,LazyCompile,10,342736,0x3d8dfd9b23e,397,load node:internal/modules/esm/loader:401:13,0x2e1cace2f70,~
code-source-info,0x3d8dfd9b23e,114,12495,13760,C10O12495C60O12544C62O12549C67O12557C71O12584C73O12589C77O12598C84O12605C95O12648C101O12656C105O12681C114O12687C127O12681C153O12731C159O12772C177O12778C182O12772C183O12907C188O12922C193O12954C198O12999C210O12999C216O13108C225O13154C229O13171C242O13114C247O13108C248O13214C254O13255C275O13261C280O13255C281O13406C296O13481C299O13481C309O13517C312O13517C318O13550C337O13556C342O13550C343O13709C350O13725C356O13740C372O13755,,
code-creation,LazyCompile,10,342973,0x3d8dfd9b606,226,defaultLoad node:internal/modules/esm/load:13:27,0x2e1cacf87f8,~
code-source-info,0x3d8dfd9b606,125,380,859,C10O380C18O408C23O452C28O465C33O494C38O521C43O536C56O530C84O578C98O578C103O634C105O651C112O680C117O707C121O732C126O759C131O774C144O768C172O816C179O830C185O843C201O856,,
code-creation,LazyCompile,10,343116,0x3d8dfd9b986,150,validateAssertions node:internal/modules/esm/assert:55:28,0x2e1cace8470,~
code-source-info,0x3d8dfd9b986,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,343353,0x3d8dfd9bcf6,430,defaultGetSource node:internal/modules/esm/get_source:30:32,0x2e1cacf8f38,~
code-source-info,0x3d8dfd9bcf6,126,903,1881,C10O903C18O956C25O956C31O977C33O999C40O1008C45O1028C50O1043C62O1037C92O1087C99O1096C104O1130C111O1150C114O1175C119O1130C125O1191C127O1212C134O1218C139O1212C140O1267C147O1278C154O1299C161O1319C164O1319C171O1345C180O1308C188O1384C194O1432C201O1441C206O1469C213O1478C218O1515C223O1521C236O1515C262O1575C274O1565C304O1598C311O1647C324O1707C343O1647C350O1604C355O1598C356O1778C363O1788C372O1807C377O1814C382O1823C387O1823C393O1864C405O1878,,
code-creation,LazyCompile,10,344140,0x3d8dfd9c2c6,196,readFile node:internal/fs/promises:788:24,0x2e1cacfb258,~
code-source-info,0x3d8dfd9c2c6,127,22848,23194,C10O22848C18O22869C23O22890C28O22879C35O22939C44O22957C46O22977C48O22966C53O22994C56O23001C71O23031C72O23037C75O23058C80O23037C84O23083C98O23089C111O23083C137O23117C145O23152C151O23184C156O23124C171O23191,,
code-creation,LazyCompile,10,344278,0x3d8dfd9dede,29,checkAborted node:internal/fs/promises:320:22,0x2e1cacfa588,~
code-source-info,0x3d8dfd9dede,127,7483,7549,C0O7497C7O7507C16O7523C21O7529C26O7523C28O7548,,
code-creation,LazyCompile,10,344360,0x3d8dfd9e086,182,open node:internal/fs/promises:450:20,0x2e1cacfa768,~
code-source-info,0x3d8dfd9e086,127,11766,12079,C10O11766C18O11791C23O11798C29O11845C34O11845C39O11870C55O11877C62O11916C69O11950C72O11958C79O11973C82O11984C87O11984C95O12061C104O11958C117O11944C142O11923C157O12076,,
code-creation,LazyCompile,10,345333,0x3d8dfd9e47e,263,link node:internal/modules/esm/module_job:69:18,0x3d8dfd9a238,~
code-source-info,0x3d8dfd9e47e,116,1937,2889,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2728C140O2765C151O2786C156O2782C162O2771C174O2765C199O2825C210O2847C218O2843C224O2832C238O2882,,
code-creation,LazyCompile,10,345432,0x3d8dfd9e706,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:406:37,0xc90ecca548,~
code-source-info,0x3d8dfd9e706,6,11986,12074,C0O12018C13O12018C18O12074,,
code-creation,LazyCompile,10,345528,0x3d8dfd9e8de,216,set node:internal/modules/esm/module_map:23:6,0x2e1cace5530,~
code-source-info,0x3d8dfd9e8de,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,345616,0x3d8dfd9eae6,10, node:internal/modules/esm/module_map:9:63,0x2e1cace5440,~
code-source-info,0x3d8dfd9eae6,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,345671,0x3d8dfd9ebae,10, node:internal/modules/esm/loader:381:15,0x3d8dfd8fad8,~
code-source-info,0x3d8dfd9ebae,114,11893,11911,C0O11906C5O11906C9O11911,,
code-creation,LazyCompile,10,345791,0x3d8dfd9f006,433,run node:internal/modules/esm/module_job:193:12,0x2e1cace6460,~
code-source-info,0x3d8dfd9f006,116,7177,8381,C10O7177C18O7198C23O7198C35O7187C58O7234C61O7265C66O7301C71O7308C76O7308C90O7290C128O7368C133O7373C143O7380C152O7415C158O7453C163O7415C169O7474C182O7484C186O7521C196O7553C204O7525C211O7588C224O7598C228O7688C235O7719C240O7726C248O7688C259O7758C267O7808C272O7815C277O7758C292O7836C297O7891C302O7919C307O7926C312O7892C318O7959C325O7964C330O7991C344O8140C358O8082C364O8163C370O8243C376O8001C380O8324C382O8324C383O8345C388O8367C408O8376,,
code-creation,LazyCompile,10,345886,0x3d8dfd9f336,24,instantiate node:internal/modules/esm/module_job:102:14,0x2e1cace63c0,~
code-source-info,0x3d8dfd9f336,116,3289,3428,C0O3308C6O3370C11O3370C15O3363C19O3410C23O3423,,
code-creation,LazyCompile,10,346081,0x3d8dfd9fa3e,935,_instantiate node:internal/modules/esm/module_job:109:21,0x2e1cace6410,~
code-source-info,0x3d8dfd9fa3e
code-creation,LazyCompile,10,346282,0x3d8dfda00b6,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:111:38,0x3d8dfd9f780,~
code-source-info,0x3d8dfda00b6,116,3535,3840,C10O3535C18O3565C23O3581C28O3581C35O3608C46O3615C47O3632C52O3644C57O3644C62O3706C74O3690C100O3721C111O3743C118O3771C123O3805C126O3771C134O3739C140O3728C154O3833,,
code-creation,LazyCompile,10,346519,0x3d8dfda044e,627,processPromiseRejections node:internal/process/promises:211:34,0x13f332de438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x3d8dfda044e
code-creation,LazyCompile,10,347302,0x3d8dfda13a6,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x13f332dd9a8,~
code-source-info,0x3d8dfda13a6,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,347421,0x3d8dfda14c6,112,FileHandle node:internal/fs/promises:117:14,0x2e1cacfb2a8,~
code-source-info,0x3d8dfda14c6,127,2979,3152,C3O2999C11O2999C40O3013C45O3018C50O3027C54O3046C59O3051C67O3058C69O3082C77O3056C81O3098C86O3103C91O3110C95O3120C100O3125C104O3140C111O3151,,
code-creation,LazyCompile,10,347486,0x3d8dfda1646,63,MixedEventEmitter node:internal/event_target:964:16,0x18f72645d18,~
code-source-info,0x3d8dfda1646,44,26760,26894,C0O26760C8O26779C15O26786C21O26822C25O26831C29O26822C41O26845C48O26867C54O26845C62O26893,,
code-creation,LazyCompile,10,347846,0x3d8dfda192e,601,readFileHandle node:internal/fs/promises:360:30,0x2e1cacfa628,~
code-source-info,0x3d8dfda192e
code-creation,LazyCompile,10,348060,0x3d8dfda1d76,8,get fd node:internal/fs/promises:130:9,0x2e1cacfb360,~
code-source-info,0x3d8dfda1d76,127,3229,3261,C0O3239C2O3251C4O3250C7O3256,,
code-creation,LazyCompile,10,348486,0x3d8dfda1ef6,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:418:43,0xc90ecca600,~
code-source-info,0x3d8dfda1ef6,6,12582,12862,C0O12582C13O12718C27O12718C32O12862,,
code-creation,LazyCompile,10,348627,0x3d8dfda2086,46, node:internal/per_context/primordials:421:15,0x3d8dfda1e48,~
code-source-info,0x3d8dfda2086,6,12730,12857,C0O12847C14O12745C20O12820C28O12827C34O12846C39O12847C45O12857,,
code-creation,LazyCompile,10,348682,0x3d8dfda21ce,27,SafePromise node:internal/per_context/primordials:402:16,0xc90ecca4f8,~
code-source-info,0x3d8dfda21ce,6,11906,11937,C3O11919C7O11925C11O11919C26O11936,,
code-creation,LazyCompile,10,348733,0x3d8dfda22c6,22, node:internal/per_context/primordials:422:21,0x3d8dfda1fd0,~
code-source-info,0x3d8dfda22c6,6,12761,12810,C0O12771C16O12771C21O12810,,
code-creation,LazyCompile,10,348824,0x3d8dfda23be,19,allocUnsafeSlow node:buffer:383:50,0xb214f71a8,~
code-source-info,0x3d8dfda23be,24,11607,11675,C0O11619C5O11619C9O11640C14O11647C18O11672,,
code-creation,LazyCompile,10,348913,0x3d8dfda24e6,71,createUnsafeBuffer node:internal/buffer:1059:28,0x13f332cbd18,~
code-source-info,0x3d8dfda24e6,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,349200,0x3d8dfda27d6,248,close node:internal/fs/promises:190:11,0x2e1cacfd4b0,~
code-source-info,0x3d8dfda27d6,127,4415,5236,C0O4428C7O4437C9O4436C15O4442C20O4459C27O4466C30O4483C31O4498C38O4507C40O4506C45O4532C52O4544C54O4543C57O4559C58O4574C65O4579C73O4585C77O4594C84O4603C86O4602C91O4610C96O4626C103O4631C108O4636C112O4649C119O4654C126O4671C136O4714C138O4713C142O4723C147O4723C157O4671C162O4669C168O4815C175O4820C182O4837C189O4879C199O4875C210O4837C215O4835C219O5179C222O5184C230O5184C235O5204C242O5216C244O5215C247O5231,,
code-creation,LazyCompile,10,349523,0x3d8dfda2b3e,17, node:internal/fs/promises:204:9,0x3d8dfda25c0,~
code-source-info,0x3d8dfda2b3e,127,4741,4783,C0O4749C7O4754C11O4769C16O4782,,
code-creation,LazyCompile,10,349768,0x3d8dfda2ed6,193,moduleStrategy node:internal/modules/esm/translators:112:56,0x18f72648ce0,~
code-source-info,0x3d8dfda2ed6,129,3253,3705,C0O3253C23O3280C36O3280C41O3325C46O3334C52O3356C59O3356C64O3393C76O3429C81O3393C85O3455C106O3455C112O3504C119O3515C124O3527C129O3531C134O3568C146O3653C150O3527C156O3688C168O3702,,
code-creation,LazyCompile,10,349890,0x3d8dfda3c4e,83,assertBufferSource node:internal/modules/esm/translators:74:28,0x18f72648ab0,~
code-source-info,0x3d8dfda3c4e,129,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,349962,0x3d8dfda3da6,31,lazyTypes node:internal/modules/esm/translators:22:19,0x18f72648a10,~
code-source-info,0x3d8dfda3da6,129,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,350056,0x3d8dfda3ebe,72,stringify node:internal/modules/esm/translators:90:19,0x18f72648b00,~
code-source-info,0x3d8dfda3ebe,129,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,350202,0x3d8dfda40ae,206,TextDecoder node:internal/encoding:380:16,0x13f332d3fe8,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x3d8dfda40ae,27,10699,11509,C15O10699C21O10743C25O10776C35O10791C43O10776C48O10927C53O10927C58O10966C60O10998C69O11004C74O10998C75O11067C77O11077C81O11127C94O11135C103O11188C116O11200C125O11265C130O11265C136O11298C138O11333C147O11339C152O11333C153O11390C157O11395C161O11405C165O11420C169O11425C174O11434C178O11451C182O11456C187O11464C191O11480C195O11485C200O11496C205O11508,,
code-creation,LazyCompile,10,352166,0x3d8dfda5536,55,getEncodingFromLabel node:internal/encoding:314:30,0x13f332d3d20,~
code-source-info,0x3d8dfda5536,27,8982,9136,C0O9007C5O9017C10O9017C16O9032C18O9055C20O9066C21O9070C26O9087C34O9117C39O9117C44O9091C49O9087C54O9133,,
tick,0x7ff7a86d76c7,353237,1,0x7ff7a806ed50,5,0x7ff7a89a59a0,0x3d8dfda4130,0x3d8dfda3ee2,0x3d8dfda2f04,0x3d8dfd9aec7,0x7ff7a8a3b243
code-creation,LazyCompile,10,353619,0x3d8dfda5846,227,decode node:internal/encoding:409:11,0x13f332d4108,~
code-source-info,0x3d8dfda5846,27,11525,12371,C8O11534C25O11564C30O11564C34O11594C41O11598C47O11634C52O11642C56O11654C61O11655C69O11682C76O11687C82O11724C102O11730C107O11724C108O11904C118O11919C126O11904C131O12055C133O12065C137O12113C153O12126C159O12170C168O12183C170O12182C180O12170C186O12215C190O12255C197O12304C207O12261C212O12255C213O12347C221O12347C226O12364,,
code-creation,LazyCompile,10,353962,0x3d8dfda5a6e,37,validateDecoder node:internal/encoding:65:25,0x13f332d3c80,~
code-source-info,0x3d8dfda5a6e,27,1357,1461,C0O1368C7O1391C9O1390C14O1401C19O1416C29O1422C34O1416C36O1460,,
code-creation,LazyCompile,10,354253,0x3d8dfda5bbe,12,slice node:buffer:603:12,0xb214f7ac8,~
code-source-info,0x3d8dfda5bbe,24,17607,17653,C0O17632C5O17632C11O17653,,
code-creation,LazyCompile,10,354438,0x3d8dfda5ca6,10, node:internal/modules/esm/translators:42:63,0x18f72648c90,~
code-source-info,0x3d8dfda5ca6,129,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,354692,0x3d8dfda608e,78, file:///D:/CoderHouse/Back/ec_newmanag/back/src/utils/calculo.util.js:1:1,0x3d8dfda5e30,~
script-source,145,file:///D:/CoderHouse/Back/ec_newmanag/back/src/utils/calculo.util.js,\x0d\nfunction getRandomInt(min\x2C max) {\x0d\n    return Math.floor(Math.random() * (max + 1 - min)) + min;\x0d\n}\x0d\n\x0d\nfunction calculo(cant) {\x0d\n    const numeros = [];\x0d\n    const valores = {};\x0d\n    for (let i = 0; i < cant; i++) {\x0d\n        numeros.push(getRandomInt(1\x2C 1000));\x0d\n    }\x0d\n    numeros.map(val => {\x0d\n        valores[val] = numeros.filter(v => v==val).length;\x0d\n    })\x0d\n    return valores;\x0d\n  }\x0d\n  \x0d\n  process.on("message"\x2C (cant) => {\x0d\n    const resultado = calculo(cant);\x0d\n    process.send(resultado);\x0d\n  });
code-source-info,0x3d8dfda608e,145,0,506,C10O0C29O0C49O0C53O398C57O406C70O406C77O506,,
code-creation,LazyCompile,10,355115,0x3d8dfda64e6,44,refCounted node:internal/child_process:539:13,0x21b19163f28,~
code-source-info,0x3d8dfda64e6,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,355281,0x3d8dfda6606,15, node:internal/modules/esm/loader:382:15,0x3d8dfd8fb28,~
code-source-info,0x3d8dfda6606,114,11928,11965,C0O11931C5O11951C10O11951C14O11965,,
code-creation,LazyCompile,10,355464,0x3d8dfda6776,307,removeListener node:events:689:28,0xb214ebcd8,~
code-source-info,0x3d8dfda
code-creation,LazyCompile,10,355657,0x3d8dfda6a5e,64,stopListeningIfSignal node:internal/process/signal:43:31,0xc90ecfdd70,~
code-source-info,0x3d8dfda6a5e,93,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,355714,0x3d8dfda6ba6,30,onRemoveListener node:child_process:178:57,0x2e1cacc8be0,~
code-source-info,0x3d8dfda6ba6,99,5444,5535,C0O5458C2O5467C9O5489C14O5507C19O5515C24O5515C29O5534,,
tick,0x7ff999646dc4,368519,0,0x0,8
tick,0x7ff999646dc4,383430,0,0x0,8
tick,0x7ff999646dc4,398326,0,0x0,8
tick,0x7ff999646dc4,413795,0,0x0,8
tick,0x7ff999646dc4,429915,0,0x0,8
tick,0x7ff999646dc4,444020,0,0x0,8
tick,0x7ff999646dc4,460522,0,0x0,8
tick,0x7ff999646dc4,474725,0,0x0,8
tick,0x7ff999646dc4,489497,0,0x0,8
tick,0x7ff999646dc4,505182,0,0x0,8
tick,0x7ff999646dc4,522133,0,0x0,8
tick,0x7ff999646dc4,535970,0,0x0,8
tick,0x7ff999646dc4,551622,0,0x0,8
tick,0x7ff999646dc4,566178,0,0x0,8
tick,0x7ff999646dc4,582033,0,0x0,8
tick,0x7ff999646dc4,596914,0,0x0,8
tick,0x7ff999646dc4,612691,0,0x0,8
tick,0x7ff999646dc4,628311,0,0x0,8
tick,0x7ff999646dc4,642871,0,0x0,8
tick,0x7ff999646dc4,658359,0,0x0,8
tick,0x7ff999646dc4,673030,0,0x0,8
tick,0x7ff999646dc4,689196,0,0x0,8
tick,0x7ff999646dc4,704384,0,0x0,8
tick,0x7ff999646dc4,719947,0,0x0,8
tick,0x7ff999646dc4,735131,0,0x0,8
tick,0x7ff999646dc4,749747,0,0x0,8
tick,0x7ff999646dc4,765753,0,0x0,8
tick,0x7ff999646dc4,780224,0,0x0,8
tick,0x7ff999646dc4,795375,0,0x0,8
tick,0x7ff999646dc4,810048,0,0x0,8
tick,0x7ff999646dc4,826282,0,0x0,8
tick,0x7ff999646dc4,842732,0,0x0,8
tick,0x7ff999646dc4,856192,0,0x0,8
tick,0x7ff999646dc4,872172,0,0x0,8
tick,0x7ff999646dc4,887147,0,0x0,8
tick,0x7ff999646dc4,901791,0,0x0,8
tick,0x7ff999646dc4,916779,0,0x0,8
tick,0x7ff999646dc4,932475,0,0x0,8
tick,0x7ff999646dc4,948398,0,0x0,8
tick,0x7ff999646dc4,963625,0,0x0,8
tick,0x7ff999646dc4,978398,0,0x0,8
tick,0x7ff999646dc4,993689,0,0x0,8
tick,0x7ff999646dc4,1010316,0,0x0,8
tick,0x7ff999646dc4,1024749,0,0x0,8
tick,0x7ff999646dc4,1040107,0,0x0,8
tick,0x7ff999646dc4,1055288,0,0x0,8
tick,0x7ff999646dc4,1070551,0,0x0,8
tick,0x7ff999646dc4,1086327,0,0x0,8
tick,0x7ff999646dc4,1101349,0,0x0,8
tick,0x7ff999646dc4,1116940,0,0x0,8
tick,0x7ff999646dc4,1132200,0,0x0,8
tick,0x7ff999646dc4,1147277,0,0x0,8
tick,0x7ff999646dc4,1163186,0,0x0,8
tick,0x7ff999646dc4,1177544,0,0x0,8
tick,0x7ff999646dc4,1193198,0,0x0,8
tick,0x7ff999646dc4,1209143,0,0x0,8
tick,0x7ff999646dc4,1223481,0,0x0,8
tick,0x7ff999646dc4,1239243,0,0x0,8
tick,0x7ff999646dc4,1256370,0,0x0,8
tick,0x7ff999646dc4,1273424,0,0x0,8
tick,0x7ff999646dc4,1286079,0,0x0,8
tick,0x7ff999646dc4,1300706,0,0x0,8
tick,0x7ff999646dc4,1315719,0,0x0,8
tick,0x7ff999646dc4,1331037,0,0x0,8
tick,0x7ff999646dc4,1346793,0,0x0,8
tick,0x7ff999646dc4,1362476,0,0x0,8
tick,0x7ff999646dc4,1378086,0,0x0,8
tick,0x7ff999646dc4,1393080,0,0x0,8
tick,0x7ff999646dc4,1408263,0,0x0,8
tick,0x7ff999646dc4,1423054,0,0x0,8
tick,0x7ff999646dc4,1438480,0,0x0,8
tick,0x7ff999646dc4,1454317,0,0x0,8
tick,0x7ff999646dc4,1469144,0,0x0,8
tick,0x7ff999646dc4,1484442,0,0x0,8
tick,0x7ff999646dc4,1499318,0,0x0,8
tick,0x7ff999646dc4,1515044,0,0x0,8
tick,0x7ff999646dc4,1530488,0,0x0,8
tick,0x7ff999646dc4,1546114,0,0x0,8
tick,0x7ff999646dc4,1561247,0,0x0,8
tick,0x7ff999646dc4,1576485,0,0x0,8
tick,0x7ff999646dc4,1591900,0,0x0,8
tick,0x7ff999646dc4,1606794,0,0x0,8
tick,0x7ff999646dc4,1622624,0,0x0,8
tick,0x7ff999646dc4,1637628,0,0x0,8
tick,0x7ff999646dc4,1653395,0,0x0,8
tick,0x7ff999646dc4,1668301,0,0x0,8
tick,0x7ff999646dc4,1683345,0,0x0,8
tick,0x7ff999646dc4,1699492,0,0x0,8
tick,0x7ff999646dc4,1714851,0,0x0,8
tick,0x7ff999646dc4,1730096,0,0x0,8
tick,0x7ff999646dc4,1744827,0,0x0,8
tick,0x7ff999646dc4,1760874,0,0x0,8
tick,0x7ff999646dc4,1776211,0,0x0,8
tick,0x7ff999646dc4,1791129,0,0x0,8
tick,0x7ff999646dc4,1807179,0,0x0,8
tick,0x7ff999646dc4,1821552,0,0x0,8
tick,0x7ff999646dc4,1836916,0,0x0,8
tick,0x7ff999646dc4,1854957,0,0x0,8
tick,0x7ff999646dc4,1868189,0,0x0,8
tick,0x7ff999646dc4,1883344,0,0x0,8
tick,0x7ff999646dc4,1899671,0,0x0,8
tick,0x7ff999646dc4,1914017,0,0x0,8
tick,0x7ff999646dc4,1929302,0,0x0,8
tick,0x7ff999646dc4,1945050,0,0x0,8
tick,0x7ff999646dc4,1959083,0,0x0,8
tick,0x7ff999646dc4,1974781,0,0x0,8
tick,0x7ff999646dc4,1990116,0,0x0,8
tick,0x7ff999646dc4,2005385,0,0x0,8
tick,0x7ff999646dc4,2021528,0,0x0,8
tick,0x7ff999646dc4,2036138,0,0x0,8
tick,0x7ff999646dc4,2051593,0,0x0,8
tick,0x7ff999646dc4,2067998,0,0x0,8
tick,0x7ff999646dc4,2082376,0,0x0,8
tick,0x7ff999646dc4,2098044,0,0x0,8
tick,0x7ff999646dc4,2113592,0,0x0,8
tick,0x7ff999646dc4,2129395,0,0x0,8
tick,0x7ff999646dc4,2143965,0,0x0,8
tick,0x7ff999646dc4,2159156,0,0x0,8
tick,0x7ff999646dc4,2174110,0,0x0,8
tick,0x7ff999646dc4,2189061,0,0x0,8
tick,0x7ff999646dc4,2204573,0,0x0,8
tick,0x7ff999646dc4,2219877,0,0x0,8
tick,0x7ff999646dc4,2235436,0,0x0,8
tick,0x7ff999646dc4,2250401,0,0x0,8
tick,0x7ff999646dc4,2266907,0,0x0,8
tick,0x7ff999646dc4,2281615,0,0x0,8
tick,0x7ff999646dc4,2297270,0,0x0,8
tick,0x7ff999646dc4,2312567,0,0x0,8
tick,0x7ff999646dc4,2327721,0,0x0,8
tick,0x7ff999646dc4,2344252,0,0x0,8
tick,0x7ff999646dc4,2358857,0,0x0,8
tick,0x7ff999646dc4,2373885,0,0x0,8
tick,0x7ff999646dc4,2388984,0,0x0,8
tick,0x7ff999646dc4,2404569,0,0x0,8
tick,0x7ff999646dc4,2420016,0,0x0,8
tick,0x7ff999646dc4,2435660,0,0x0,8
tick,0x7ff999646dc4,2452200,0,0x0,8
tick,0x7ff999646dc4,2466253,0,0x0,8
tick,0x7ff999646dc4,2481875,0,0x0,8
tick,0x7ff999646dc4,2496453,0,0x0,8
tick,0x7ff999646dc4,2511986,0,0x0,8
tick,0x7ff999646dc4,2527571,0,0x0,8
tick,0x7ff999646dc4,2542876,0,0x0,8
tick,0x7ff999646dc4,2559045,0,0x0,8
tick,0x7ff999646dc4,2573220,0,0x0,8
tick,0x7ff999646dc4,2589968,0,0x0,8
tick,0x7ff999646dc4,2603911,0,0x0,8
tick,0x7ff999646dc4,2619265,0,0x0,8
tick,0x7ff999646dc4,2634710,0,0x0,8
tick,0x7ff999646dc4,2649815,0,0x0,8
tick,0x7ff999646dc4,2665661,0,0x0,8
tick,0x7ff999646dc4,2680085,0,0x0,8
tick,0x7ff999646dc4,2695374,0,0x0,8
tick,0x7ff999646dc4,2710553,0,0x0,8
tick,0x7ff999646dc4,2725943,0,0x0,8
tick,0x7ff999646dc4,2741428,0,0x0,8
tick,0x7ff999646dc4,2758047,0,0x0,8
tick,0x7ff999646dc4,2776340,0,0x0,8
tick,0x7ff999646dc4,2789357,0,0x0,8
tick,0x7ff999646dc4,2802073,0,0x0,8
tick,0x7ff999646dc4,2817541,0,0x0,8
tick,0x7ff999646dc4,2832572,0,0x0,8
tick,0x7ff999646dc4,2848075,0,0x0,8
tick,0x7ff999646dc4,2863763,0,0x0,8
tick,0x7ff999646dc4,2879162,0,0x0,8
tick,0x7ff999646dc4,2895049,0,0x0,8
tick,0x7ff999646dc4,2909508,0,0x0,8
tick,0x7ff999646dc4,2925608,0,0x0,8
tick,0x7ff999646dc4,2941423,0,0x0,8
tick,0x7ff999646dc4,2956307,0,0x0,8
tick,0x7ff999646dc4,2971029,0,0x0,8
tick,0x7ff999646dc4,2987062,0,0x0,8
tick,0x7ff999646dc4,3002345,0,0x0,8
tick,0x7ff999646dc4,3017615,0,0x0,8
tick,0x7ff999646dc4,3033251,0,0x0,8
tick,0x7ff999646dc4,3049101,0,0x0,8
tick,0x7ff999646dc4,3064604,0,0x0,8
tick,0x7ff999646dc4,3079632,0,0x0,8
tick,0x7ff999646dc4,3095413,0,0x0,8
tick,0x7ff999646dc4,3110674,0,0x0,8
tick,0x7ff999646dc4,3125946,0,0x0,8
tick,0x7ff999646dc4,3141328,0,0x0,8
tick,0x7ff999646dc4,3156765,0,0x0,8
tick,0x7ff999646dc4,3171486,0,0x0,8
tick,0x7ff999646dc4,3187209,0,0x0,8
tick,0x7ff999646dc4,3202350,0,0x0,8
tick,0x7ff999646dc4,3216919,0,0x0,8
tick,0x7ff999646dc4,3232204,0,0x0,8
tick,0x7ff999646dc4,3247916,0,0x0,8
tick,0x7ff999646dc4,3263496,0,0x0,8
tick,0x7ff999646dc4,3278246,0,0x0,8
tick,0x7ff999646dc4,3293920,0,0x0,8
tick,0x7ff999646dc4,3309394,0,0x0,8
tick,0x7ff999646dc4,3323384,0,0x0,8
tick,0x7ff999646dc4,3339408,0,0x0,8
tick,0x7ff999646dc4,3354174,0,0x0,8
tick,0x7ff999646dc4,3370346,0,0x0,8
tick,0x7ff999646dc4,3385075,0,0x0,8
tick,0x7ff999646dc4,3401121,0,0x0,8
tick,0x7ff999646dc4,3417013,0,0x0,8
tick,0x7ff999646dc4,3431819,0,0x0,8
tick,0x7ff999646dc4,3447790,0,0x0,8
tick,0x7ff999646dc4,3463604,0,0x0,8
tick,0x7ff999646dc4,3478028,0,0x0,8
tick,0x7ff999646dc4,3493559,0,0x0,8
tick,0x7ff999646dc4,3508032,0,0x0,8
tick,0x7ff999646dc4,3524672,0,0x0,8
tick,0x7ff999646dc4,3539128,0,0x0,8
tick,0x7ff999646dc4,3555843,0,0x0,8
tick,0x7ff999646dc4,3570179,0,0x0,8
tick,0x7ff999646dc4,3586177,0,0x0,8
tick,0x7ff999646dc4,3601353,0,0x0,8
tick,0x7ff999646dc4,3616600,0,0x0,8
tick,0x7ff999646dc4,3632327,0,0x0,8
tick,0x7ff999646dc4,3647383,0,0x0,8
tick,0x7ff999646dc4,3662389,0,0x0,8
tick,0x7ff999646dc4,3677330,0,0x0,8
tick,0x7ff999646dc4,3693167,0,0x0,8
tick,0x7ff999646dc4,3708796,0,0x0,8
tick,0x7ff999646dc4,3724194,0,0x0,8
tick,0x7ff999646dc4,3739606,0,0x0,8
tick,0x7ff999646dc4,3754737,0,0x0,8
tick,0x7ff999646dc4,3770605,0,0x0,8
tick,0x7ff999646dc4,3785477,0,0x0,8
tick,0x7ff999646dc4,3799934,0,0x0,8
tick,0x7ff999646dc4,3815910,0,0x0,8
tick,0x7ff999646dc4,3831793,0,0x0,8
tick,0x7ff999646dc4,3846435,0,0x0,8
tick,0x7ff999646dc4,3861629,0,0x0,8
tick,0x7ff999646dc4,3877254,0,0x0,8
tick,0x7ff999646dc4,3892615,0,0x0,8
tick,0x7ff999646dc4,3907866,0,0x0,8
tick,0x7ff999646dc4,3926636,0,0x0,8
tick,0x7ff999646dc4,3938722,0,0x0,8
tick,0x7ff999646dc4,3953693,0,0x0,8
tick,0x7ff999646dc4,3968462,0,0x0,8
tick,0x7ff999646dc4,3983818,0,0x0,8
tick,0x7ff999646dc4,3999499,0,0x0,8
tick,0x7ff999646dc4,4014794,0,0x0,8
tick,0x7ff999646dc4,4030355,0,0x0,8
tick,0x7ff999646dc4,4045471,0,0x0,8
tick,0x7ff999646dc4,4061342,0,0x0,8
tick,0x7ff999646dc4,4076909,0,0x0,8
tick,0x7ff999646dc4,4091332,0,0x0,8
tick,0x7ff999646dc4,4107250,0,0x0,8
tick,0x7ff999646dc4,4122845,0,0x0,8
tick,0x7ff999646dc4,4138250,0,0x0,8
tick,0x7ff999646dc4,4152954,0,0x0,8
tick,0x7ff999646dc4,4171118,0,0x0,8
tick,0x7ff999646dc4,4184631,0,0x0,8
tick,0x7ff999646dc4,4200873,0,0x0,8
tick,0x7ff999646dc4,4214988,0,0x0,8
tick,0x7ff999646dc4,4229833,0,0x0,8
tick,0x7ff999646dc4,4246485,0,0x0,8
tick,0x7ff999646dc4,4262465,0,0x0,8
tick,0x7ff999646dc4,4276504,0,0x0,8
tick,0x7ff999646dc4,4293410,0,0x0,8
tick,0x7ff999646dc4,4306310,0,0x0,8
tick,0x7ff999646dc4,4322285,0,0x0,8
tick,0x7ff999646dc4,4342706,0,0x0,8
tick,0x7ff999646dc4,4358169,0,0x0,8
tick,0x7ff999646dc4,4367943,0,0x0,8
tick,0x7ff999646dc4,4385378,0,0x0,8
tick,0x7ff999646dc4,4398697,0,0x0,8
tick,0x7ff999646dc4,4413604,0,0x0,8
tick,0x7ff999646dc4,4429154,0,0x0,8
tick,0x7ff999646dc4,4444647,0,0x0,8
tick,0x7ff999646dc4,4460247,0,0x0,8
tick,0x7ff999646dc4,4474812,0,0x0,8
tick,0x7ff999646dc4,4490914,0,0x0,8
tick,0x7ff999646dc4,4504986,0,0x0,8
tick,0x7ff999646dc4,4520948,0,0x0,8
tick,0x7ff999646dc4,4535745,0,0x0,8
tick,0x7ff999646dc4,4551802,0,0x0,8
tick,0x7ff999646dc4,4567221,0,0x0,8
tick,0x7ff999646dc4,4585096,0,0x0,8
tick,0x7ff999646dc4,4597304,0,0x0,8
tick,0x7ff999646dc4,4611602,0,0x0,8
tick,0x7ff999646dc4,4627755,0,0x0,8
tick,0x7ff999646dc4,4642957,0,0x0,8
tick,0x7ff999646dc4,4658275,0,0x0,8
tick,0x7ff999646dc4,4674679,0,0x0,8
tick,0x7ff999646dc4,4692229,0,0x0,8
tick,0x7ff999646dc4,4704294,0,0x0,8
tick,0x7ff999646dc4,4719090,0,0x0,8
tick,0x7ff999646dc4,4734014,0,0x0,8
tick,0x7ff999646dc4,4749624,0,0x0,8
tick,0x7ff999646dc4,4765974,0,0x0,8
tick,0x7ff999646dc4,4780438,0,0x0,8
tick,0x7ff999646dc4,4795199,0,0x0,8
tick,0x7ff999646dc4,4811466,0,0x0,8
tick,0x7ff999646dc4,4827882,0,0x0,8
tick,0x7ff999646dc4,4841079,0,0x0,8
tick,0x7ff999646dc4,4862637,0,0x0,8
tick,0x7ff999646dc4,4873518,0,0x0,8
tick,0x7ff999646dc4,4889291,0,0x0,8
tick,0x7ff999646dc4,4903689,0,0x0,8
tick,0x7ff999646dc4,4918126,0,0x0,8
tick,0x7ff999646dc4,4933672,0,0x0,8
tick,0x7ff999646dc4,4954500,0,0x0,8
tick,0x7ff999646dc4,4967114,0,0x0,8
tick,0x7ff999646dc4,4979007,0,0x0,8
tick,0x7ff999646dc4,4994990,0,0x0,8
tick,0x7ff999646dc4,5011234,0,0x0,8
tick,0x7ff999646dc4,5025717,0,0x0,8
tick,0x7ff999646dc4,5040692,0,0x0,8
tick,0x7ff999646dc4,5056489,0,0x0,8
tick,0x7ff999646dc4,5071500,0,0x0,8
tick,0x7ff999646dc4,5086969,0,0x0,8
tick,0x7ff999646dc4,5102719,0,0x0,8
tick,0x7ff999646dc4,5117777,0,0x0,8
tick,0x7ff999646dc4,5133727,0,0x0,8
tick,0x7ff999646dc4,5148843,0,0x0,8
tick,0x7ff999646dc4,5163798,0,0x0,8
tick,0x7ff999646dc4,5180048,0,0x0,8
tick,0x7ff999646dc4,5195171,0,0x0,8
tick,0x7ff999646dc4,5210118,0,0x0,8
tick,0x7ff999646dc4,5225322,0,0x0,8
tick,0x7ff999646dc4,5240482,0,0x0,8
tick,0x7ff999646dc4,5255943,0,0x0,8
tick,0x7ff999646dc4,5272030,0,0x0,8
tick,0x7ff999646dc4,5285978,0,0x0,8
tick,0x7ff999646dc4,5300991,0,0x0,8
tick,0x7ff999646dc4,5316824,0,0x0,8
tick,0x7ff999646dc4,5332727,0,0x0,8
tick,0x7ff999646dc4,5347974,0,0x0,8
tick,0x7ff999646dc4,5364681,0,0x0,8
tick,0x7ff999646dc4,5378401,0,0x0,8
tick,0x7ff999646dc4,5394121,0,0x0,8
tick,0x7ff999646dc4,5408972,0,0x0,8
tick,0x7ff999646dc4,5424331,0,0x0,8
tick,0x7ff999646dc4,5439311,0,0x0,8
tick,0x7ff999646dc4,5454084,0,0x0,8
tick,0x7ff999646dc4,5470590,0,0x0,8
tick,0x7ff999646dc4,5492995,0,0x0,8
tick,0x7ff999646dc4,5500726,0,0x0,8
tick,0x7ff999646dc4,5516339,0,0x0,8
tick,0x7ff999646dc4,5531683,0,0x0,8
tick,0x7ff999646dc4,5555359,0,0x0,8
tick,0x7ff999646dc4,5563133,0,0x0,8
tick,0x7ff999646dc4,5578419,0,0x0,8
tick,0x7ff999646dc4,5593981,0,0x0,8
tick,0x7ff999646dc4,5608175,0,0x0,8
tick,0x7ff999646dc4,5623500,0,0x0,8
tick,0x7ff999646dc4,5640337,0,0x0,8
tick,0x7ff999646dc4,5654799,0,0x0,8
tick,0x7ff999646dc4,5669889,0,0x0,8
tick,0x7ff999646dc4,5697756,0,0x0,8
tick,0x7ff999646dc4,5710421,0,0x0,8
tick,0x7ff999646dc4,5719202,0,0x0,8
tick,0x7ff999646dc4,5750043,0,0x0,8
tick,0x7ff999646dc4,5772614,0,0x0,8
tick,0x7ff999646dc4,5784758,0,0x0,8
tick,0x7ff999646dc4,5807892,0,0x0,8
tick,0x7ff999646dc4,5821630,0,0x0,8
tick,0x7ff999646dc4,5836905,0,0x0,8
tick,0x7ff999646dc4,5851377,0,0x0,8
tick,0x7ff999646dc4,5867032,0,0x0,8
tick,0x7ff999646dc4,5882764,0,0x0,8
tick,0x7ff999646dc4,5899640,0,0x0,8
tick,0x7ff999646dc4,5913333,0,0x0,8
tick,0x7ff999646dc4,5929077,0,0x0,8
tick,0x7ff999646dc4,5945117,0,0x0,8
tick,0x7ff999646dc4,5960625,0,0x0,8
tick,0x7ff999646dc4,5977778,0,0x0,8
tick,0x7ff999646dc4,5989828,0,0x0,8
tick,0x7ff999646dc4,6004665,0,0x0,8
tick,0x7ff999646dc4,6022245,0,0x0,8
tick,0x7ff999646dc4,6039908,0,0x0,8
tick,0x7ff999646dc4,6052417,0,0x0,8
tick,0x7ff999646dc4,6066683,0,0x0,8
tick,0x7ff999646dc4,6082886,0,0x0,8
tick,0x7ff999646dc4,6104241,0,0x0,8
tick,0x7ff999646dc4,6113856,0,0x0,8
tick,0x7ff999646dc4,6128248,0,0x0,8
tick,0x7ff999646dc4,6146519,0,0x0,8
tick,0x7ff999646dc4,6158452,0,0x0,8
tick,0x7ff999646dc4,6174006,0,0x0,8
tick,0x7ff999646dc4,6190988,0,0x0,8
tick,0x7ff999646dc4,6204688,0,0x0,8
tick,0x7ff999646dc4,6221470,0,0x0,8
tick,0x7ff999646dc4,6235595,0,0x0,8
tick,0x7ff999646dc4,6250883,0,0x0,8
tick,0x7ff999646dc4,6265541,0,0x0,8
tick,0x7ff999646dc4,6280785,0,0x0,8
tick,0x7ff999646dc4,6296391,0,0x0,8
tick,0x7ff999646dc4,6311850,0,0x0,8
tick,0x7ff999646dc4,6327574,0,0x0,8
tick,0x7ff999646dc4,6342169,0,0x0,8
tick,0x7ff999646dc4,6358050,0,0x0,8
tick,0x7ff999646dc4,6375257,0,0x0,8
tick,0x7ff999646dc4,6393741,0,0x0,8
tick,0x7ff999646dc4,6409328,0,0x0,8
tick,0x7ff999646dc4,6421261,0,0x0,8
tick,0x7ff999646dc4,6444411,0,0x0,8
tick,0x7ff999646dc4,6462505,0,0x0,8
tick,0x7ff999646dc4,6470680,0,0x0,8
tick,0x7ff999646dc4,6499608,0,0x0,8
tick,0x7ff999646dc4,6518099,0,0x0,8
tick,0x7ff999646dc4,6547400,0,0x0,8
tick,0x7ff999646dc4,6572032,0,0x0,8
tick,0x7ff999646dc4,6604222,0,0x0,8
tick,0x7ff999646dc4,6634080,0,0x0,8
tick,0x7ff999646dc4,6652344,0,0x0,8
tick,0x7ff999646dc4,6664782,0,0x0,8
tick,0x7ff999646dc4,6680385,0,0x0,8
tick,0x7ff999646dc4,6695983,0,0x0,8
tick,0x7ff999646dc4,6711747,0,0x0,8
tick,0x7ff999646dc4,6725809,0,0x0,8
tick,0x7ff999646dc4,6741633,0,0x0,8
tick,0x7ff999646dc4,6758272,0,0x0,8
tick,0x7ff999646dc4,6773936,0,0x0,8
tick,0x7ff999646dc4,6788101,0,0x0,8
tick,0x7ff999646dc4,6802939,0,0x0,8
tick,0x7ff999646dc4,6818688,0,0x0,8
tick,0x7ff999646dc4,6834224,0,0x0,8
tick,0x7ff999646dc4,6852273,0,0x0,8
tick,0x7ff999646dc4,6865337,0,0x0,8
tick,0x7ff999646dc4,6880682,0,0x0,8
tick,0x7ff999646dc4,6896299,0,0x0,8
tick,0x7ff999646dc4,6911684,0,0x0,8
tick,0x7ff999646dc4,6925780,0,0x0,8
tick,0x7ff999646dc4,6941582,0,0x0,8
tick,0x7ff999646dc4,6956863,0,0x0,8
tick,0x7ff999646dc4,6972064,0,0x0,8
tick,0x7ff999646dc4,6987931,0,0x0,8
tick,0x7ff999646dc4,7002623,0,0x0,8
tick,0x7ff999646dc4,7018386,0,0x0,8
tick,0x7ff999646dc4,7041015,0,0x0,8
tick,0x7ff999646dc4,7048871,0,0x0,8
tick,0x7ff999646dc4,7063861,0,0x0,8
tick,0x7ff999646dc4,7080294,0,0x0,8
tick,0x7ff999646dc4,7094982,0,0x0,8
tick,0x7ff999646dc4,7110954,0,0x0,8
tick,0x7ff999646dc4,7125209,0,0x0,8
tick,0x7ff999646dc4,7141667,0,0x0,8
tick,0x7ff999646dc4,7156109,0,0x0,8
tick,0x7ff999646dc4,7171906,0,0x0,8
tick,0x7ff999646dc4,7188037,0,0x0,8
tick,0x7ff999646dc4,7202923,0,0x0,8
tick,0x7ff999646dc4,7218142,0,0x0,8
tick,0x7ff999646dc4,7233469,0,0x0,8
tick,0x7ff999646dc4,7249429,0,0x0,8
tick,0x7ff999646dc4,7264222,0,0x0,8
tick,0x7ff999646dc4,7278710,0,0x0,8
tick,0x7ff999646dc4,7294183,0,0x0,8
tick,0x7ff999646dc4,7309594,0,0x0,8
tick,0x7ff999646dc4,7326266,0,0x0,8
tick,0x7ff999646dc4,7340472,0,0x0,8
tick,0x7ff999646dc4,7355805,0,0x0,8
tick,0x7ff999646dc4,7371013,0,0x0,8
tick,0x7ff999646dc4,7386445,0,0x0,8
tick,0x7ff999646dc4,7402988,0,0x0,8
tick,0x7ff999646dc4,7416421,0,0x0,8
tick,0x7ff999646dc4,7432617,0,0x0,8
tick,0x7ff999646dc4,7447929,0,0x0,8
tick,0x7ff999646dc4,7464774,0,0x0,8
tick,0x7ff999646dc4,7478421,0,0x0,8
tick,0x7ff999646dc4,7494060,0,0x0,8
tick,0x7ff999646dc4,7509881,0,0x0,8
tick,0x7ff999646dc4,7524612,0,0x0,8
tick,0x7ff999646dc4,7539783,0,0x0,8
tick,0x7ff999646dc4,7556227,0,0x0,8
tick,0x7ff999646dc4,7570021,0,0x0,8
tick,0x7ff999646dc4,7585648,0,0x0,8
tick,0x7ff999646dc4,7602530,0,0x0,8
tick,0x7ff999646dc4,7616878,0,0x0,8
tick,0x7ff999646dc4,7632354,0,0x0,8
tick,0x7ff999646dc4,7648460,0,0x0,8
tick,0x7ff999646dc4,7663244,0,0x0,8
tick,0x7ff999646dc4,7678648,0,0x0,8
tick,0x7ff999646dc4,7694312,0,0x0,8
tick,0x7ff999646dc4,7710133,0,0x0,8
tick,0x7ff999646dc4,7725065,0,0x0,8
tick,0x7ff999646dc4,7740605,0,0x0,8
tick,0x7ff999646dc4,7756404,0,0x0,8
tick,0x7ff999646dc4,7771055,0,0x0,8
tick,0x7ff999646dc4,7786099,0,0x0,8
tick,0x7ff999646dc4,7801537,0,0x0,8
tick,0x7ff999646dc4,7816396,0,0x0,8
tick,0x7ff999646dc4,7832266,0,0x0,8
tick,0x7ff999646dc4,7847727,0,0x0,8
tick,0x7ff999646dc4,7862737,0,0x0,8
tick,0x7ff999646dc4,7877382,0,0x0,8
tick,0x7ff999646dc4,7893025,0,0x0,8
tick,0x7ff999646dc4,7908631,0,0x0,8
tick,0x7ff999646dc4,7923838,0,0x0,8
tick,0x7ff999646dc4,7939154,0,0x0,8
tick,0x7ff999646dc4,7954715,0,0x0,8
tick,0x7ff999646dc4,7971208,0,0x0,8
tick,0x7ff999646dc4,7985683,0,0x0,8
tick,0x7ff999646dc4,8000988,0,0x0,8
tick,0x7ff999646dc4,8015880,0,0x0,8
tick,0x7ff999646dc4,8032367,0,0x0,8
tick,0x7ff999646dc4,8046699,0,0x0,8
tick,0x7ff999646dc4,8062543,0,0x0,8
tick,0x7ff999646dc4,8077662,0,0x0,8
tick,0x7ff999646dc4,8093107,0,0x0,8
tick,0x7ff999646dc4,8108226,0,0x0,8
tick,0x7ff999646dc4,8124232,0,0x0,8
tick,0x7ff999646dc4,8140540,0,0x0,8
tick,0x7ff999646dc4,8155642,0,0x0,8
tick,0x7ff999646dc4,8170381,0,0x0,8
tick,0x7ff999646dc4,8185824,0,0x0,8
tick,0x7ff999646dc4,8201064,0,0x0,8
tick,0x7ff999646dc4,8216796,0,0x0,8
tick,0x7ff999646dc4,8230960,0,0x0,8
tick,0x7ff999646dc4,8246770,0,0x0,8
tick,0x7ff999646dc4,8266512,0,0x0,8
tick,0x7ff999646dc4,8285360,0,0x0,8
tick,0x7ff999646dc4,8292722,0,0x0,8
tick,0x7ff999646dc4,8307152,0,0x0,8
tick,0x7ff999646dc4,8322382,0,0x0,8
tick,0x7ff999646dc4,8337833,0,0x0,8
tick,0x7ff999646dc4,8354777,0,0x0,8
tick,0x7ff999646dc4,8368867,0,0x0,8
tick,0x7ff999646dc4,8384631,0,0x0,8
tick,0x7ff999646dc4,8400916,0,0x0,8
tick,0x7ff999646dc4,8416055,0,0x0,8
tick,0x7ff999646dc4,8431054,0,0x0,8
tick,0x7ff999646dc4,8446233,0,0x0,8
tick,0x7ff999646dc4,8460881,0,0x0,8
tick,0x7ff999646dc4,8477306,0,0x0,8
tick,0x7ff999646dc4,8492312,0,0x0,8
tick,0x7ff999646dc4,8507122,0,0x0,8
tick,0x7ff999646dc4,8534447,0,0x0,8
tick,0x7ff999646dc4,8556623,0,0x0,8
tick,0x7ff999646dc4,8579035,0,0x0,8
tick,0x7ff999646dc4,8582632,0,0x0,8
tick,0x7ff999646dc4,8613892,0,0x0,8
tick,0x7ff999646dc4,8680805,0,0x0,8
tick,0x7ff999646dc4,8718875,0,0x0,8
tick,0x7ff999646dc4,8768222,0,0x0,8
tick,0x7ff999646dc4,8796432,0,0x0,8
tick,0x7ff999646dc4,8842403,0,0x0,8
tick,0x7ff999646dc4,8868149,0,0x0,8
tick,0x7ff999646dc4,8933652,0,0x0,8
tick,0x7ff999646dc4,8936273,0,0x0,8
tick,0x7ff999646dc4,8951458,0,0x0,8
tick,0x7ff999646dc4,9035732,0,0x0,8
tick,0x7ff999646dc4,9065138,0,0x0,8
tick,0x7ff999646dc4,9124129,0,0x0,8
tick,0x7ff999646dc4,9141114,0,0x0,8
tick,0x7ff999646dc4,9192373,0,0x0,8
tick,0x7ff999646dc4,9195470,0,0x0,8
tick,0x7ff999646dc4,9252605,0,0x0,8
tick,0x7ff999646dc4,9280573,0,0x0,8
tick,0x7ff999646dc4,9288943,0,0x0,8
tick,0x7ff999646dc4,9303731,0,0x0,8
tick,0x7ff999646dc4,9318108,0,0x0,8
tick,0x7ff999646dc4,9333674,0,0x0,8
tick,0x7ff999646dc4,9350997,0,0x0,8
tick,0x7ff999646dc4,9365734,0,0x0,8
tick,0x7ff999646dc4,9381294,0,0x0,8
tick,0x7ff999646dc4,9397769,0,0x0,8
tick,0x7ff999646dc4,9411534,0,0x0,8
tick,0x7ff999646dc4,9498238,0,0x0,8
tick,0x7ff999646dc4,9514890,0,0x0,8
tick,0x7ff999646dc4,9556436,0,0x0,8
tick,0x7ff999646dc4,9575669,0,0x0,8
tick,0x7ff999646dc4,9586869,0,0x0,8
tick,0x7ff999646dc4,9605157,0,0x0,8
tick,0x7ff999646dc4,9620195,0,0x0,8
tick,0x7ff999646dc4,9672409,0,0x0,8
tick,0x7ff999646dc4,9725153,0,0x0,8
tick,0x7ff999646dc4,9742191,0,0x0,8
tick,0x7ff999646dc4,9758540,0,0x0,8
tick,0x7ff999646dc4,9771661,0,0x0,8
tick,0x7ff999646dc4,9787746,0,0x0,8
tick,0x7ff999646dc4,9800610,0,0x0,8
tick,0x7ff999646dc4,9808494,0,0x0,8
tick,0x7ff999646dc4,9824632,0,0x0,8
tick,0x7ff999646dc4,9840881,0,0x0,8
tick,0x7ff999646dc4,9856189,0,0x0,8
tick,0x7ff999646dc4,9869332,0,0x0,8
tick,0x7ff999646dc4,9884782,0,0x0,8
tick,0x7ff999646dc4,9900318,0,0x0,8
tick,0x7ff999646dc4,9915307,0,0x0,8
tick,0x7ff999646dc4,9937939,0,0x0,8
tick,0x7ff999646dc4,9949289,0,0x0,8
tick,0x7ff999646dc4,9959906,0,0x0,8
tick,0x7ff999646dc4,9983475,0,0x0,8
tick,0x7ff999646dc4,9990031,0,0x0,8
tick,0x7ff999646dc4,10005498,0,0x0,8
tick,0x7ff999646dc4,10026450,0,0x0,8
tick,0x7ff999646dc4,10035234,0,0x0,8
tick,0x7ff999646dc4,10050691,0,0x0,8
tick,0x7ff999646dc4,10070775,0,0x0,8
tick,0x7ff999646dc4,10079481,0,0x0,8
tick,0x7ff999646dc4,10094967,0,0x0,8
tick,0x7ff999646dc4,10110454,0,0x0,8
tick,0x7ff999646dc4,10125641,0,0x0,8
tick,0x7ff999646dc4,10141374,0,0x0,8
tick,0x7ff999646dc4,10157527,0,0x0,8
tick,0x7ff999646dc4,10174817,0,0x0,8
tick,0x7ff999646dc4,10193343,0,0x0,8
tick,0x7ff999646dc4,10202277,0,0x0,8
tick,0x7ff999646dc4,10219340,0,0x0,8
tick,0x7ff999646dc4,10233519,0,0x0,8
tick,0x7ff999646dc4,10248768,0,0x0,8
tick,0x7ff999646dc4,10263197,0,0x0,8
tick,0x7ff999646dc4,10279560,0,0x0,8
tick,0x7ff999646dc4,10293871,0,0x0,8
tick,0x7ff999646dc4,10309823,0,0x0,8
tick,0x7ff999646dc4,10324976,0,0x0,8
tick,0x7ff999646dc4,10340728,0,0x0,8
tick,0x7ff999646dc4,10355856,0,0x0,8
tick,0x7ff999646dc4,10372348,0,0x0,8
tick,0x7ff999646dc4,10386626,0,0x0,8
tick,0x7ff999646dc4,10403517,0,0x0,8
tick,0x7ff999646dc4,10417294,0,0x0,8
tick,0x7ff999646dc4,10433049,0,0x0,8
tick,0x7ff999646dc4,10448880,0,0x0,8
tick,0x7ff999646dc4,10463706,0,0x0,8
tick,0x7ff999646dc4,10479877,0,0x0,8
tick,0x7ff999646dc4,10495094,0,0x0,8
tick,0x7ff999646dc4,10510330,0,0x0,8
tick,0x7ff999646dc4,10525304,0,0x0,8
tick,0x7ff999646dc4,10540689,0,0x0,8
tick,0x7ff999646dc4,10557402,0,0x0,8
tick,0x7ff999646dc4,10570972,0,0x0,8
tick,0x7ff999646dc4,10587196,0,0x0,8
tick,0x7ff999646dc4,10607414,0,0x0,8
tick,0x7ff999646dc4,10643956,0,0x0,8
tick,0x7ff999646dc4,10647366,0,0x0,8
tick,0x7ff999646dc4,10664223,0,0x0,8
tick,0x7ff999646dc4,10725493,0,0x0,8
tick,0x7ff999646dc4,10761652,0,0x0,8
tick,0x7ff999646dc4,10784451,0,0x0,8
tick,0x7ff999646dc4,10801803,0,0x0,8
tick,0x7ff999646dc4,10816960,0,0x0,8
tick,0x7ff999646dc4,10833235,0,0x0,8
tick,0x7ff999646dc4,10848249,0,0x0,8
tick,0x7ff999646dc4,10863059,0,0x0,8
tick,0x7ff999646dc4,10878728,0,0x0,8
tick,0x7ff999646dc4,10893884,0,0x0,8
tick,0x7ff999646dc4,10909573,0,0x0,8
tick,0x7ff999646dc4,10924305,0,0x0,8
tick,0x7ff999646dc4,10939468,0,0x0,8
tick,0x7ff999646dc4,10956318,0,0x0,8
tick,0x7ff999646dc4,10970774,0,0x0,8
tick,0x7ff999646dc4,10985810,0,0x0,8
tick,0x7ff999646dc4,11000635,0,0x0,8
tick,0x7ff999646dc4,11016333,0,0x0,8
tick,0x7ff999646dc4,11032639,0,0x0,8
tick,0x7ff999646dc4,11049089,0,0x0,8
tick,0x7ff999646dc4,11062580,0,0x0,8
tick,0x7ff999646dc4,11079672,0,0x0,8
tick,0x7ff999646dc4,11092609,0,0x0,8
tick,0x7ff999646dc4,11107913,0,0x0,8
tick,0x7ff999646dc4,11123361,0,0x0,8
tick,0x7ff999646dc4,11138696,0,0x0,8
tick,0x7ff999646dc4,11153772,0,0x0,8
tick,0x7ff999646dc4,11170496,0,0x0,8
tick,0x7ff999646dc4,11184437,0,0x0,8
tick,0x7ff999646dc4,11199817,0,0x0,8
tick,0x7ff999646dc4,11215051,0,0x0,8
tick,0x7ff999646dc4,11229716,0,0x0,8
tick,0x7ff999646dc4,11246943,0,0x0,8
tick,0x7ff999646dc4,11260552,0,0x0,8
tick,0x7ff999646dc4,11276661,0,0x0,8
tick,0x7ff999646dc4,11293505,0,0x0,8
tick,0x7ff999646dc4,11307305,0,0x0,8
tick,0x7ff999646dc4,11323150,0,0x0,8
tick,0x7ff999646dc4,11337515,0,0x0,8
tick,0x7ff999646dc4,11353826,0,0x0,8
tick,0x7ff999646dc4,11368605,0,0x0,8
tick,0x7ff999646dc4,11384595,0,0x0,8
tick,0x7ff999646dc4,11399956,0,0x0,8
tick,0x7ff999646dc4,11416249,0,0x0,8
tick,0x7ff999646dc4,11430623,0,0x0,8
tick,0x7ff999646dc4,11445872,0,0x0,8
tick,0x7ff999646dc4,11461610,0,0x0,8
tick,0x7ff999646dc4,11477577,0,0x0,8
tick,0x7ff999646dc4,11493398,0,0x0,8
tick,0x7ff999646dc4,11508006,0,0x0,8
tick,0x7ff999646dc4,11524267,0,0x0,8
tick,0x7ff999646dc4,11538706,0,0x0,8
tick,0x7ff999646dc4,11555355,0,0x0,8
tick,0x7ff999646dc4,11569386,0,0x0,8
tick,0x7ff999646dc4,11585112,0,0x0,8
tick,0x7ff999646dc4,11600783,0,0x0,8
tick,0x7ff999646dc4,11615734,0,0x0,8
tick,0x7ff999646dc4,11632545,0,0x0,8
tick,0x7ff999646dc4,11646177,0,0x0,8
tick,0x7ff999646dc4,11662099,0,0x0,8
tick,0x7ff999646dc4,11676771,0,0x0,8
tick,0x7ff999646dc4,11692523,0,0x0,8
tick,0x7ff999646dc4,11707280,0,0x0,8
tick,0x7ff999646dc4,11723396,0,0x0,8
tick,0x7ff999646dc4,11738362,0,0x0,8
tick,0x7ff999646dc4,11753863,0,0x0,8
tick,0x7ff999646dc4,11769225,0,0x0,8
tick,0x7ff999646dc4,11784829,0,0x0,8
tick,0x7ff999646dc4,11800546,0,0x0,8
tick,0x7ff999646dc4,11816025,0,0x0,8
tick,0x7ff999646dc4,11831691,0,0x0,8
tick,0x7ff999646dc4,11847198,0,0x0,8
tick,0x7ff999646dc4,11861170,0,0x0,8
tick,0x7ff999646dc4,11877667,0,0x0,8
tick,0x7ff999646dc4,11891743,0,0x0,8
tick,0x7ff999646dc4,11908368,0,0x0,8
tick,0x7ff999646dc4,11922522,0,0x0,8
tick,0x7ff999646dc4,11937821,0,0x0,8
tick,0x7ff999646dc4,11952888,0,0x0,8
tick,0x7ff999646dc4,11969165,0,0x0,8
tick,0x7ff999646dc4,11983886,0,0x0,8
tick,0x7ff999646dc4,11998896,0,0x0,8
tick,0x7ff999646dc4,12016104,0,0x0,8
tick,0x7ff999646dc4,12031036,0,0x0,8
tick,0x7ff999646dc4,12045264,0,0x0,8
tick,0x7ff999646dc4,12059975,0,0x0,8
tick,0x7ff999646dc4,12075623,0,0x0,8
tick,0x7ff999646dc4,12091483,0,0x0,8
tick,0x7ff999646dc4,12106417,0,0x0,8
tick,0x7ff999646dc4,12122028,0,0x0,8
tick,0x7ff999646dc4,12137878,0,0x0,8
tick,0x7ff999646dc4,12154987,0,0x0,8
tick,0x7ff999646dc4,12171539,0,0x0,8
tick,0x7ff999646dc4,12184298,0,0x0,8
tick,0x7ff999646dc4,12203186,0,0x0,8
tick,0x7ff999646dc4,12213174,0,0x0,8
tick,0x7ff999646dc4,12230177,0,0x0,8
tick,0x7ff999646dc4,12245825,0,0x0,8
tick,0x7ff999646dc4,12259312,0,0x0,8
tick,0x7ff999646dc4,12274319,0,0x0,8
tick,0x7ff999646dc4,12289973,0,0x0,8
tick,0x7ff999646dc4,12304596,0,0x0,8
tick,0x7ff999646dc4,12319953,0,0x0,8
tick,0x7ff999646dc4,12337198,0,0x0,8
tick,0x7ff999646dc4,12353027,0,0x0,8
tick,0x7ff999646dc4,12368334,0,0x0,8
tick,0x7ff999646dc4,12383426,0,0x0,8
tick,0x7ff999646dc4,12397039,0,0x0,8
tick,0x7ff999646dc4,12420243,0,0x0,8
tick,0x7ff999646dc4,12448285,0,0x0,8
tick,0x7ff999646dc4,12469396,0,0x0,8
tick,0x7ff999646dc4,12473744,0,0x0,8
tick,0x7ff999646dc4,12488517,0,0x0,8
tick,0x7ff999646dc4,12503640,0,0x0,8
tick,0x7ff999646dc4,12518464,0,0x0,8
tick,0x7ff999646dc4,12535446,0,0x0,8
tick,0x7ff999646dc4,12551179,0,0x0,8
tick,0x7ff999646dc4,12565248,0,0x0,8
tick,0x7ff999646dc4,12581387,0,0x0,8
tick,0x7ff999646dc4,12600833,0,0x0,8
tick,0x7ff999646dc4,12611300,0,0x0,8
tick,0x7ff999646dc4,12626585,0,0x0,8
tick,0x7ff999646dc4,12641505,0,0x0,8
tick,0x7ff999646dc4,12658790,0,0x0,8
tick,0x7ff999646dc4,12672927,0,0x0,8
tick,0x7ff999646dc4,12692767,0,0x0,8
tick,0x7ff999646dc4,12704111,0,0x0,8
tick,0x7ff999646dc4,12718953,0,0x0,8
tick,0x7ff999646dc4,12733435,0,0x0,8
tick,0x7ff999646dc4,12749034,0,0x0,8
tick,0x7ff999646dc4,12765088,0,0x0,8
tick,0x7ff999646dc4,12782236,0,0x0,8
tick,0x7ff999646dc4,12796779,0,0x0,8
tick,0x7ff999646dc4,12811659,0,0x0,8
tick,0x7ff999646dc4,12826507,0,0x0,8
tick,0x7ff999646dc4,12843385,0,0x0,8
tick,0x7ff999646dc4,12857531,0,0x0,8
tick,0x7ff999646dc4,12873533,0,0x0,8
tick,0x7ff999646dc4,12888392,0,0x0,8
tick,0x7ff999646dc4,12905370,0,0x0,8
tick,0x7ff999646dc4,12919140,0,0x0,8
tick,0x7ff999646dc4,12935004,0,0x0,8
tick,0x7ff999646dc4,12950504,0,0x0,8
tick,0x7ff999646dc4,12966876,0,0x0,8
tick,0x7ff999646dc4,12983736,0,0x0,8
tick,0x7ff999646dc4,12996889,0,0x0,8
tick,0x7ff999646dc4,13012246,0,0x0,8
tick,0x7ff999646dc4,13026989,0,0x0,8
tick,0x7ff999646dc4,13044073,0,0x0,8
tick,0x7ff999646dc4,13058091,0,0x0,8
tick,0x7ff999646dc4,13075060,0,0x0,8
tick,0x7ff999646dc4,13089390,0,0x0,8
tick,0x7ff999646dc4,13104850,0,0x0,8
tick,0x7ff999646dc4,13119739,0,0x0,8
tick,0x7ff999646dc4,13134908,0,0x0,8
tick,0x7ff999646dc4,13150295,0,0x0,8
tick,0x7ff999646dc4,13172481,0,0x0,8
tick,0x7ff999646dc4,13180818,0,0x0,8
tick,0x7ff999646dc4,13196086,0,0x0,8
tick,0x7ff999646dc4,13211876,0,0x0,8
tick,0x7ff999646dc4,13227638,0,0x0,8
tick,0x7ff999646dc4,13242659,0,0x0,8
tick,0x7ff999646dc4,13257805,0,0x0,8
tick,0x7ff999646dc4,13273391,0,0x0,8
tick,0x7ff999646dc4,13289410,0,0x0,8
tick,0x7ff999646dc4,13303595,0,0x0,8
tick,0x7ff999646dc4,13320083,0,0x0,8
tick,0x7ff999646dc4,13335040,0,0x0,8
tick,0x7ff999646dc4,13350968,0,0x0,8
tick,0x7ff999646dc4,13366212,0,0x0,8
tick,0x7ff999646dc4,13381263,0,0x0,8
tick,0x7ff999646dc4,13396656,0,0x0,8
tick,0x7ff999646dc4,13411917,0,0x0,8
tick,0x7ff999646dc4,13426674,0,0x0,8
tick,0x7ff999646dc4,13443298,0,0x0,8
tick,0x7ff999646dc4,13456896,0,0x0,8
tick,0x7ff999646dc4,13472169,0,0x0,8
tick,0x7ff999646dc4,13487239,0,0x0,8
tick,0x7ff999646dc4,13502720,0,0x0,8
tick,0x7ff999646dc4,13518185,0,0x0,8
tick,0x7ff999646dc4,13534255,0,0x0,8
tick,0x7ff999646dc4,13549736,0,0x0,8
tick,0x7ff999646dc4,13564070,0,0x0,8
tick,0x7ff999646dc4,13580209,0,0x0,8
tick,0x7ff999646dc4,13595216,0,0x0,8
tick,0x7ff999646dc4,13610684,0,0x0,8
tick,0x7ff999646dc4,13625589,0,0x0,8
tick,0x7ff999646dc4,13641176,0,0x0,8
tick,0x7ff999646dc4,13657231,0,0x0,8
tick,0x7ff999646dc4,13671270,0,0x0,8
tick,0x7ff999646dc4,13687979,0,0x0,8
tick,0x7ff999646dc4,13705782,0,0x0,8
tick,0x7ff999646dc4,13720870,0,0x0,8
tick,0x7ff999646dc4,13732398,0,0x0,8
tick,0x7ff999646dc4,13747853,0,0x0,8
tick,0x7ff999646dc4,13762948,0,0x0,8
tick,0x7ff999646dc4,13778885,0,0x0,8
tick,0x7ff999646dc4,13794996,0,0x0,8
tick,0x7ff999646dc4,13809356,0,0x0,8
tick,0x7ff999646dc4,13824746,0,0x0,8
tick,0x7ff999646dc4,13839677,0,0x0,8
tick,0x7ff999646dc4,13855786,0,0x0,8
tick,0x7ff999646dc4,13870256,0,0x0,8
tick,0x7ff999646dc4,13886311,0,0x0,8
tick,0x7ff999646dc4,13900971,0,0x0,8
tick,0x7ff999646dc4,13917081,0,0x0,8
tick,0x7ff999646dc4,13932383,0,0x0,8
tick,0x7ff999646dc4,13947167,0,0x0,8
tick,0x7ff999646dc4,13962301,0,0x0,8
tick,0x7ff999646dc4,13977673,0,0x0,8
tick,0x7ff999646dc4,13994570,0,0x0,8
tick,0x7ff999646dc4,14007810,0,0x0,8
tick,0x7ff999646dc4,14022974,0,0x0,8
tick,0x7ff999646dc4,14038895,0,0x0,8
tick,0x7ff999646dc4,14054137,0,0x0,8
tick,0x7ff999646dc4,14069353,0,0x0,8
tick,0x7ff999646dc4,14085296,0,0x0,8
tick,0x7ff999646dc4,14100068,0,0x0,8
tick,0x7ff999646dc4,14115436,0,0x0,8
tick,0x7ff999646dc4,14130672,0,0x0,8
tick,0x7ff999646dc4,14191934,0,0x0,8
tick,0x7ff999646dc4,14220572,0,0x0,8
tick,0x7ff999646dc4,14237108,0,0x0,8
tick,0x7ff999646dc4,14252765,0,0x0,8
tick,0x7ff999646dc4,14267767,0,0x0,8
tick,0x7ff999646dc4,14283166,0,0x0,8
tick,0x7ff999646dc4,14298738,0,0x0,8
tick,0x7ff999646dc4,14314646,0,0x0,8
tick,0x7ff999646dc4,14329313,0,0x0,8
tick,0x7ff999646dc4,14345368,0,0x0,8
tick,0x7ff999646dc4,14360648,0,0x0,8
tick,0x7ff999646dc4,14375822,0,0x0,8
tick,0x7ff999646dc4,14390839,0,0x0,8
tick,0x7ff999646dc4,14406883,0,0x0,8
tick,0x7ff999646dc4,14421565,0,0x0,8
tick,0x7ff999646dc4,14436807,0,0x0,8
tick,0x7ff999646dc4,14452459,0,0x0,8
tick,0x7ff999646dc4,14468210,0,0x0,8
tick,0x7ff999646dc4,14482892,0,0x0,8
tick,0x7ff999646dc4,14498849,0,0x0,8
tick,0x7ff999646dc4,14514115,0,0x0,8
tick,0x7ff999646dc4,14530826,0,0x0,8
tick,0x7ff999646dc4,14545985,0,0x0,8
tick,0x7ff999646dc4,14560963,0,0x0,8
tick,0x7ff999646dc4,14575897,0,0x0,8
tick,0x7ff999646dc4,14591656,0,0x0,8
tick,0x7ff999646dc4,14605956,0,0x0,8
tick,0x7ff999646dc4,14622507,0,0x0,8
tick,0x7ff999646dc4,14637902,0,0x0,8
tick,0x7ff999646dc4,14652277,0,0x0,8
tick,0x7ff999646dc4,14669335,0,0x0,8
tick,0x7ff999646dc4,14683157,0,0x0,8
tick,0x7ff999646dc4,14699633,0,0x0,8
tick,0x7ff999646dc4,14713861,0,0x0,8
tick,0x7ff999646dc4,14729833,0,0x0,8
tick,0x7ff999646dc4,14744396,0,0x0,8
tick,0x7ff999646dc4,14759901,0,0x0,8
tick,0x7ff999646dc4,14775222,0,0x0,8
tick,0x7ff999646dc4,14790832,0,0x0,8
tick,0x7ff999646dc4,14806894,0,0x0,8
tick,0x7ff999646dc4,14821726,0,0x0,8
tick,0x7ff999646dc4,14836999,0,0x0,8
tick,0x7ff999646dc4,14852686,0,0x0,8
tick,0x7ff999646dc4,14868003,0,0x0,8
tick,0x7ff999646dc4,14883061,0,0x0,8
tick,0x7ff999646dc4,14898582,0,0x0,8
tick,0x7ff999646dc4,14914606,0,0x0,8
tick,0x7ff999646dc4,14929447,0,0x0,8
tick,0x7ff999646dc4,14945824,0,0x0,8
tick,0x7ff999646dc4,14961366,0,0x0,8
tick,0x7ff999646dc4,14977525,0,0x0,8
tick,0x7ff999646dc4,14991413,0,0x0,8
tick,0x7ff999646dc4,15007690,0,0x0,8
tick,0x7ff999646dc4,15021733,0,0x0,8
tick,0x7ff999646dc4,15037068,0,0x0,8
tick,0x7ff999646dc4,15052472,0,0x0,8
tick,0x7ff999646dc4,15068274,0,0x0,8
tick,0x7ff999646dc4,15083440,0,0x0,8
tick,0x7ff999646dc4,15098196,0,0x0,8
tick,0x7ff999646dc4,15113553,0,0x0,8
tick,0x7ff999646dc4,15129095,0,0x0,8
tick,0x7ff999646dc4,15144411,0,0x0,8
tick,0x7ff999646dc4,15160136,0,0x0,8
tick,0x7ff999646dc4,15176066,0,0x0,8
tick,0x7ff999646dc4,15190393,0,0x0,8
tick,0x7ff999646dc4,15206346,0,0x0,8
tick,0x7ff999646dc4,15222097,0,0x0,8
tick,0x7ff999646dc4,15236563,0,0x0,8
tick,0x7ff999646dc4,15252724,0,0x0,8
tick,0x7ff999646dc4,15267502,0,0x0,8
tick,0x7ff999646dc4,15283333,0,0x0,8
tick,0x7ff999646dc4,15297357,0,0x0,8
tick,0x7ff999646dc4,15313680,0,0x0,8
tick,0x7ff999646dc4,15329116,0,0x0,8
tick,0x7ff999646dc4,15345653,0,0x0,8
tick,0x7ff999646dc4,15359252,0,0x0,8
tick,0x7ff999646dc4,15375597,0,0x0,8
tick,0x7ff999646dc4,15390292,0,0x0,8
tick,0x7ff999646dc4,15405451,0,0x0,8
tick,0x7ff999646dc4,15421044,0,0x0,8
tick,0x7ff999646dc4,15436463,0,0x0,8
tick,0x7ff999646dc4,15452133,0,0x0,8
tick,0x7ff999646dc4,15467339,0,0x0,8
tick,0x7ff999646dc4,15482251,0,0x0,8
tick,0x7ff999646dc4,15498432,0,0x0,8
tick,0x7ff999646dc4,15513535,0,0x0,8
tick,0x7ff999646dc4,15528886,0,0x0,8
tick,0x7ff999646dc4,15544223,0,0x0,8
tick,0x7ff999646dc4,15559033,0,0x0,8
tick,0x7ff999646dc4,15574035,0,0x0,8
tick,0x7ff999646dc4,15588845,0,0x0,8
tick,0x7ff999646dc4,15606027,0,0x0,8
tick,0x7ff999646dc4,15620511,0,0x0,8
tick,0x7ff999646dc4,15635861,0,0x0,8
tick,0x7ff999646dc4,15650640,0,0x0,8
tick,0x7ff999646dc4,15666470,0,0x0,8
tick,0x7ff999646dc4,15681860,0,0x0,8
tick,0x7ff999646dc4,15697830,0,0x0,8
tick,0x7ff999646dc4,15713221,0,0x0,8
tick,0x7ff999646dc4,15728775,0,0x0,8
tick,0x7ff999646dc4,15744011,0,0x0,8
tick,0x7ff999646dc4,15759465,0,0x0,8
tick,0x7ff999646dc4,15774189,0,0x0,8
tick,0x7ff999646dc4,15789474,0,0x0,8
tick,0x7ff999646dc4,15846423,0,0x0,8
tick,0x7ff999646dc4,15853226,0,0x0,8
tick,0x7ff999646dc4,15866186,0,0x0,8
tick,0x7ff999646dc4,15881817,0,0x0,8
tick,0x7ff999646dc4,15896621,0,0x0,8
tick,0x7ff999646dc4,15912696,0,0x0,8
tick,0x7ff999646dc4,15928931,0,0x0,8
tick,0x7ff999646dc4,15943735,0,0x0,8
tick,0x7ff999646dc4,15960261,0,0x0,8
tick,0x7ff999646dc4,15976478,0,0x0,8
tick,0x7ff999646dc4,15989605,0,0x0,8
tick,0x7ff999646dc4,16004891,0,0x0,8
tick,0x7ff999646dc4,16021719,0,0x0,8
tick,0x7ff999646dc4,16036864,0,0x0,8
tick,0x7ff999646dc4,16050766,0,0x0,8
tick,0x7ff999646dc4,16066868,0,0x0,8
tick,0x7ff999646dc4,16081728,0,0x0,8
tick,0x7ff999646dc4,16096949,0,0x0,8
tick,0x7ff999646dc4,16111624,0,0x0,8
tick,0x7ff999646dc4,16127991,0,0x0,8
tick,0x7ff999646dc4,16143138,0,0x0,8
tick,0x7ff999646dc4,16158872,0,0x0,8
tick,0x7ff999646dc4,16173170,0,0x0,8
tick,0x7ff999646dc4,16188913,0,0x0,8
tick,0x7ff999646dc4,16204405,0,0x0,8
tick,0x7ff999646dc4,16219419,0,0x0,8
tick,0x7ff999646dc4,16234871,0,0x0,8
tick,0x7ff999646dc4,16250045,0,0x0,8
tick,0x7ff999646dc4,16265675,0,0x0,8
tick,0x7ff999646dc4,16281677,0,0x0,8
tick,0x7ff999646dc4,16296313,0,0x0,8
tick,0x7ff999646dc4,16311573,0,0x0,8
tick,0x7ff999646dc4,16327328,0,0x0,8
tick,0x7ff999646dc4,16342651,0,0x0,8
tick,0x7ff999646dc4,16357794,0,0x0,8
tick,0x7ff999646dc4,16373252,0,0x0,8
tick,0x7ff999646dc4,16388619,0,0x0,8
tick,0x7ff999646dc4,16404840,0,0x0,8
tick,0x7ff999646dc4,16418903,0,0x0,8
tick,0x7ff999646dc4,16433923,0,0x0,8
tick,0x7ff999646dc4,16449054,0,0x0,8
tick,0x7ff999646dc4,16465170,0,0x0,8
tick,0x7ff999646dc4,16479941,0,0x0,8
tick,0x7ff999646dc4,16496742,0,0x0,8
tick,0x7ff999646dc4,16513089,0,0x0,8
tick,0x7ff999646dc4,16526141,0,0x0,8
tick,0x7ff999646dc4,16543405,0,0x0,8
tick,0x7ff999646dc4,16557088,0,0x0,8
tick,0x7ff999646dc4,16572648,0,0x0,8
tick,0x7ff999646dc4,16587712,0,0x0,8
tick,0x7ff999646dc4,16604787,0,0x0,8
tick,0x7ff999646dc4,16618092,0,0x0,8
tick,0x7ff999646dc4,16633418,0,0x0,8
tick,0x7ff999646dc4,16648824,0,0x0,8
tick,0x7ff999646dc4,16664749,0,0x0,8
tick,0x7ff999646dc4,16679372,0,0x0,8
tick,0x7ff999646dc4,16695132,0,0x0,8
tick,0x7ff999646dc4,16711711,0,0x0,8
tick,0x7ff999646dc4,16726772,0,0x0,8
tick,0x7ff999646dc4,16741980,0,0x0,8
tick,0x7ff999646dc4,16757536,0,0x0,8
tick,0x7ff999646dc4,16771944,0,0x0,8
tick,0x7ff999646dc4,16788815,0,0x0,8
tick,0x7ff999646dc4,16803830,0,0x0,8
tick,0x7ff999646dc4,16818812,0,0x0,8
tick,0x7ff999646dc4,16834009,0,0x0,8
tick,0x7ff999646dc4,16849667,0,0x0,8
tick,0x7ff999646dc4,16864560,0,0x0,8
tick,0x7ff999646dc4,16879316,0,0x0,8
tick,0x7ff999646dc4,16895266,0,0x0,8
tick,0x7ff999646dc4,16911314,0,0x0,8
tick,0x7ff999646dc4,16926191,0,0x0,8
tick,0x7ff999646dc4,16941766,0,0x0,8
tick,0x7ff999646dc4,16956208,0,0x0,8
tick,0x7ff999646dc4,16973164,0,0x0,8
tick,0x7ff999646dc4,16986740,0,0x0,8
tick,0x7ff999646dc4,17002801,0,0x0,8
tick,0x7ff999646dc4,17017772,0,0x0,8
tick,0x7ff999646dc4,17034764,0,0x0,8
tick,0x7ff999646dc4,17048363,0,0x0,8
tick,0x7ff999646dc4,17063825,0,0x0,8
tick,0x7ff999646dc4,17078587,0,0x0,8
tick,0x7ff999646dc4,17094965,0,0x0,8
tick,0x7ff999646dc4,17109794,0,0x0,8
tick,0x7ff999646dc4,17125308,0,0x0,8
tick,0x7ff999646dc4,17140530,0,0x0,8
tick,0x7ff999646dc4,17156467,0,0x0,8
tick,0x7ff999646dc4,17171490,0,0x0,8
tick,0x7ff999646dc4,17186516,0,0x0,8
tick,0x7ff999646dc4,17202075,0,0x0,8
tick,0x7ff999646dc4,17218146,0,0x0,8
tick,0x7ff999646dc4,17254750,0,0x0,8
tick,0x7ff999646dc4,17286924,0,0x0,8
tick,0x7ff999646dc4,17323991,0,0x0,8
tick,0x7ff999646dc4,17349324,0,0x0,8
tick,0x7ff999646dc4,17406817,0,0x0,8
tick,0x7ff999646dc4,17428945,0,0x0,8
tick,0x7ff999646dc4,17488784,0,0x0,8
tick,0x7ff999646dc4,17494681,0,0x0,8
tick,0x7ff999646dc4,17516594,0,0x0,8
tick,0x7ff999646dc4,17573343,0,0x0,8
tick,0x7ff999646dc4,17589256,0,0x0,8
tick,0x7ff999646dc4,17602017,0,0x0,8
tick,0x7ff999646dc4,17615899,0,0x0,8
tick,0x7ff999646dc4,17631659,0,0x0,8
tick,0x7ff999646dc4,17646455,0,0x0,8
tick,0x7ff999646dc4,17662361,0,0x0,8
tick,0x7ff999646dc4,17677243,0,0x0,8
tick,0x7ff999646dc4,17692813,0,0x0,8
tick,0x7ff999646dc4,17708904,0,0x0,8
tick,0x7ff999646dc4,17723381,0,0x0,8
tick,0x7ff999646dc4,17738105,0,0x0,8
tick,0x7ff999646dc4,17755061,0,0x0,8
tick,0x7ff999646dc4,17768652,0,0x0,8
tick,0x7ff999646dc4,17784450,0,0x0,8
tick,0x7ff999646dc4,17799310,0,0x0,8
tick,0x7ff999646dc4,17815310,0,0x0,8
tick,0x7ff999646dc4,17830136,0,0x0,8
tick,0x7ff999646dc4,17845348,0,0x0,8
tick,0x7ff999646dc4,17860188,0,0x0,8
tick,0x7ff999646dc4,17875071,0,0x0,8
tick,0x7ff999646dc4,17891345,0,0x0,8
tick,0x7ff999646dc4,17906621,0,0x0,8
tick,0x7ff999646dc4,17921666,0,0x0,8
tick,0x7ff999646dc4,17936759,0,0x0,8
tick,0x7ff999646dc4,17952082,0,0x0,8
tick,0x7ff999646dc4,17967764,0,0x0,8
tick,0x7ff999646dc4,17982220,0,0x0,8
tick,0x7ff999646dc4,17998529,0,0x0,8
tick,0x7ff999646dc4,18013477,0,0x0,8
tick,0x7ff999646dc4,18029035,0,0x0,8
tick,0x7ff999646dc4,18044446,0,0x0,8
tick,0x7ff999646dc4,18059046,0,0x0,8
tick,0x7ff999646dc4,18074127,0,0x0,8
tick,0x7ff999646dc4,18091343,0,0x0,8
tick,0x7ff999646dc4,18105902,0,0x0,8
tick,0x7ff999646dc4,18120978,0,0x0,8
tick,0x7ff999646dc4,18135106,0,0x0,8
tick,0x7ff999646dc4,18151328,0,0x0,8
tick,0x7ff999646dc4,18166997,0,0x0,8
tick,0x7ff999646dc4,18187443,0,0x0,8
tick,0x7ff999646dc4,18198100,0,0x0,8
tick,0x7ff999646dc4,18212882,0,0x0,8
tick,0x7ff999646dc4,18228867,0,0x0,8
tick,0x7ff999646dc4,18243424,0,0x0,8
tick,0x7ff999646dc4,18259481,0,0x0,8
tick,0x7ff999646dc4,18274344,0,0x0,8
tick,0x7ff999646dc4,18289760,0,0x0,8
tick,0x7ff999646dc4,18304162,0,0x0,8
tick,0x7ff999646dc4,18320405,0,0x0,8
tick,0x7ff999646dc4,18335074,0,0x0,8
tick,0x7ff999646dc4,18350564,0,0x0,8
tick,0x7ff999646dc4,18365069,0,0x0,8
tick,0x7ff999646dc4,18380959,0,0x0,8
tick,0x7ff999646dc4,18396679,0,0x0,8
tick,0x7ff999646dc4,18412755,0,0x0,8
tick,0x7ff999646dc4,18428093,0,0x0,8
tick,0x7ff999646dc4,18444957,0,0x0,8
tick,0x7ff999646dc4,18458354,0,0x0,8
tick,0x7ff999646dc4,18473968,0,0x0,8
tick,0x7ff999646dc4,18488969,0,0x0,8
tick,0x7ff999646dc4,18503935,0,0x0,8
tick,0x7ff999646dc4,18519490,0,0x0,8
tick,0x7ff999646dc4,18535782,0,0x0,8
tick,0x7ff999646dc4,18551508,0,0x0,8
tick,0x7ff999646dc4,18566915,0,0x0,8
tick,0x7ff999646dc4,18580772,0,0x0,8
tick,0x7ff999646dc4,18597083,0,0x0,8
tick,0x7ff999646dc4,18612166,0,0x0,8
tick,0x7ff999646dc4,18627444,0,0x0,8
tick,0x7ff999646dc4,18642960,0,0x0,8
tick,0x7ff999646dc4,18657674,0,0x0,8
tick,0x7ff999646dc4,18701988,0,0x0,8
tick,0x7ff999646dc4,18718215,0,0x0,8
tick,0x7ff999646dc4,18733304,0,0x0,8
tick,0x7ff999646dc4,18790692,0,0x0,8
tick,0x7ff999646dc4,18795978,0,0x0,8
tick,0x7ff999646dc4,18809871,0,0x0,8
tick,0x7ff999646dc4,18872950,0,0x0,8
tick,0x7ff999646dc4,18901390,0,0x0,8
tick,0x7ff999646dc4,18917736,0,0x0,8
tick,0x7ff999646dc4,18932484,0,0x0,8
tick,0x7ff999646dc4,18947813,0,0x0,8
tick,0x7ff999646dc4,18963653,0,0x0,8
tick,0x7ff999646dc4,18979173,0,0x0,8
tick,0x7ff999646dc4,18994332,0,0x0,8
tick,0x7ff999646dc4,19010121,0,0x0,8
tick,0x7ff999646dc4,19024700,0,0x0,8
tick,0x7ff999646dc4,19041007,0,0x0,8
tick,0x7ff999646dc4,19056163,0,0x0,8
tick,0x7ff999646dc4,19071051,0,0x0,8
tick,0x7ff999646dc4,19086187,0,0x0,8
tick,0x7ff999646dc4,19102326,0,0x0,8
tick,0x7ff999646dc4,19116934,0,0x0,8
tick,0x7ff999646dc4,19132206,0,0x0,8
tick,0x7ff999646dc4,19147321,0,0x0,8
tick,0x7ff999646dc4,19163431,0,0x0,8
tick,0x7ff999646dc4,19178173,0,0x0,8
tick,0x7ff999646dc4,19193191,0,0x0,8
tick,0x7ff999646dc4,19210141,0,0x0,8
tick,0x7ff999646dc4,19225569,0,0x0,8
tick,0x7ff999646dc4,19239564,0,0x0,8
tick,0x7ff999646dc4,19255479,0,0x0,8
tick,0x7ff999646dc4,19271043,0,0x0,8
tick,0x7ff999646dc4,19286743,0,0x0,8
tick,0x7ff999646dc4,19301629,0,0x0,8
tick,0x7ff999646dc4,19317079,0,0x0,8
tick,0x7ff999646dc4,19332866,0,0x0,8
tick,0x7ff999646dc4,19348564,0,0x0,8
tick,0x7ff999646dc4,19362897,0,0x0,8
tick,0x7ff999646dc4,19378526,0,0x0,8
tick,0x7ff999646dc4,19396055,0,0x0,8
tick,0x7ff999646dc4,19409116,0,0x0,8
tick,0x7ff999646dc4,19424159,0,0x0,8
tick,0x7ff999646dc4,19440072,0,0x0,8
tick,0x7ff999646dc4,19454916,0,0x0,8
tick,0x7ff999646dc4,19470394,0,0x0,8
tick,0x7ff999646dc4,19485677,0,0x0,8
tick,0x7ff999646dc4,19500628,0,0x0,8
tick,0x7ff999646dc4,19516338,0,0x0,8
tick,0x7ff999646dc4,19534324,0,0x0,8
tick,0x7ff999646dc4,19548758,0,0x0,8
tick,0x7ff999646dc4,19562045,0,0x0,8
tick,0x7ff999646dc4,19577889,0,0x0,8
tick,0x7ff999646dc4,19594173,0,0x0,8
tick,0x7ff999646dc4,19607300,0,0x0,8
tick,0x7ff999646dc4,19649997,0,0x0,8
tick,0x7ff999646dc4,19682325,0,0x0,8
tick,0x7ff999646dc4,19685203,0,0x0,8
tick,0x7ff999646dc4,19699988,0,0x0,8
tick,0x7ff999646dc4,19715123,0,0x0,8
tick,0x7ff999646dc4,19729992,0,0x0,8
tick,0x7ff999646dc4,19786840,0,0x0,8
tick,0x7ff999646dc4,19792483,0,0x0,8
tick,0x7ff999646dc4,19807371,0,0x0,8
tick,0x7ff999646dc4,19822840,0,0x0,8
tick,0x7ff999646dc4,19838261,0,0x0,8
tick,0x7ff999646dc4,19854178,0,0x0,8
tick,0x7ff999646dc4,19869030,0,0x0,8
tick,0x7ff999646dc4,19883695,0,0x0,8
tick,0x7ff999646dc4,19899418,0,0x0,8
tick,0x7ff999646dc4,19915152,0,0x0,8
tick,0x7ff999646dc4,19930115,0,0x0,8
tick,0x7ff999646dc4,19945890,0,0x0,8
tick,0x7ff999646dc4,19961261,0,0x0,8
tick,0x7ff999646dc4,19978599,0,0x0,8
tick,0x7ff999646dc4,19992226,0,0x0,8
tick,0x7ff999646dc4,20007887,0,0x0,8
tick,0x7ff999646dc4,20023001,0,0x0,8
tick,0x7ff999646dc4,20038712,0,0x0,8
tick,0x7ff999646dc4,20053413,0,0x0,8
tick,0x7ff999646dc4,20069672,0,0x0,8
tick,0x7ff999646dc4,20083688,0,0x0,8
tick,0x7ff999646dc4,20100228,0,0x0,8
tick,0x7ff999646dc4,20115406,0,0x0,8
tick,0x7ff999646dc4,20130218,0,0x0,8
tick,0x7ff999646dc4,20145818,0,0x0,8
tick,0x7ff999646dc4,20161422,0,0x0,8
tick,0x7ff999646dc4,20176110,0,0x0,8
tick,0x7ff999646dc4,20191379,0,0x0,8
tick,0x7ff999646dc4,20207610,0,0x0,8
tick,0x7ff999646dc4,20223841,0,0x0,8
tick,0x7ff999646dc4,20237377,0,0x0,8
tick,0x7ff999646dc4,20252801,0,0x0,8
tick,0x7ff999646dc4,20267721,0,0x0,8
tick,0x7ff999646dc4,20284387,0,0x0,8
tick,0x7ff999646dc4,20298534,0,0x0,8
tick,0x7ff999646dc4,20314579,0,0x0,8
tick,0x7ff999646dc4,20330180,0,0x0,8
tick,0x7ff999646dc4,20345385,0,0x0,8
tick,0x7ff999646dc4,20360097,0,0x0,8
tick,0x7ff999646dc4,20375334,0,0x0,8
tick,0x7ff999646dc4,20391443,0,0x0,8
tick,0x7ff999646dc4,20407828,0,0x0,8
tick,0x7ff999646dc4,20422002,0,0x0,8
tick,0x7ff999646dc4,20438096,0,0x0,8
tick,0x7ff999646dc4,20452423,0,0x0,8
tick,0x7ff999646dc4,20467763,0,0x0,8
tick,0x7ff999646dc4,20482320,0,0x0,8
tick,0x7ff999646dc4,20497772,0,0x0,8
tick,0x7ff999646dc4,20512893,0,0x0,8
tick,0x7ff999646dc4,20529546,0,0x0,8
tick,0x7ff999646dc4,20544977,0,0x0,8
tick,0x7ff999646dc4,20558906,0,0x0,8
tick,0x7ff999646dc4,20574150,0,0x0,8
tick,0x7ff999646dc4,20589573,0,0x0,8
tick,0x7ff999646dc4,20606732,0,0x0,8
tick,0x7ff999646dc4,20620972,0,0x0,8
tick,0x7ff999646dc4,20637381,0,0x0,8
tick,0x7ff999646dc4,20651688,0,0x0,8
tick,0x7ff999646dc4,20668201,0,0x0,8
tick,0x7ff999646dc4,20681834,0,0x0,8
tick,0x7ff999646dc4,20697997,0,0x0,8
tick,0x7ff999646dc4,20714457,0,0x0,8
tick,0x7ff999646dc4,20729474,0,0x0,8
tick,0x7ff999646dc4,20744080,0,0x0,8
tick,0x7ff999646dc4,20760503,0,0x0,8
tick,0x7ff999646dc4,20774866,0,0x0,8
tick,0x7ff999646dc4,20791012,0,0x0,8
tick,0x7ff999646dc4,20805759,0,0x0,8
tick,0x7ff999646dc4,20821572,0,0x0,8
tick,0x7ff999646dc4,20836101,0,0x0,8
tick,0x7ff999646dc4,20873454,0,0x0,8
tick,0x7ff999646dc4,20909295,0,0x0,8
tick,0x7ff999646dc4,20913705,0,0x0,8
tick,0x7ff999646dc4,20928441,0,0x0,8
tick,0x7ff999646dc4,20943717,0,0x0,8
tick,0x7ff999646dc4,20959448,0,0x0,8
tick,0x7ff999646dc4,20975182,0,0x0,8
tick,0x7ff999646dc4,20990658,0,0x0,8
tick,0x7ff999646dc4,21006469,0,0x0,8
tick,0x7ff999646dc4,21021583,0,0x0,8
tick,0x7ff999646dc4,21038825,0,0x0,8
tick,0x7ff999646dc4,21051414,0,0x0,8
tick,0x7ff999646dc4,21066323,0,0x0,8
tick,0x7ff999646dc4,21082220,0,0x0,8
tick,0x7ff999646dc4,21098584,0,0x0,8
tick,0x7ff999646dc4,21112497,0,0x0,8
tick,0x7ff999646dc4,21127760,0,0x0,8
tick,0x7ff999646dc4,21143241,0,0x0,8
tick,0x7ff999646dc4,21158200,0,0x0,8
tick,0x7ff999646dc4,21173363,0,0x0,8
tick,0x7ff999646dc4,21188772,0,0x0,8
tick,0x7ff999646dc4,21205384,0,0x0,8
tick,0x7ff999646dc4,21221645,0,0x0,8
tick,0x7ff999646dc4,21234526,0,0x0,8
tick,0x7ff999646dc4,21250270,0,0x0,8
tick,0x7ff999646dc4,21265801,0,0x0,8
tick,0x7ff999646dc4,21282273,0,0x0,8
tick,0x7ff999646dc4,21295580,0,0x0,8
tick,0x7ff999646dc4,21311015,0,0x0,8
tick,0x7ff999646dc4,21325905,0,0x0,8
tick,0x7ff999646dc4,21341819,0,0x0,8
tick,0x7ff999646dc4,21355996,0,0x0,8
tick,0x7ff999646dc4,21371176,0,0x0,8
tick,0x7ff999646dc4,21387158,0,0x0,8
tick,0x7ff999646dc4,21403218,0,0x0,8
tick,0x7ff999646dc4,21417463,0,0x0,8
tick,0x7ff999646dc4,21434193,0,0x0,8
tick,0x7ff999646dc4,21448476,0,0x0,8
tick,0x7ff999646dc4,21465709,0,0x0,8
tick,0x7ff999646dc4,21479054,0,0x0,8
tick,0x7ff999646dc4,21494926,0,0x0,8
tick,0x7ff999646dc4,21510358,0,0x0,8
tick,0x7ff999646dc4,21528204,0,0x0,8
tick,0x7ff999646dc4,21541861,0,0x0,8
tick,0x7ff999646dc4,21557677,0,0x0,8
tick,0x7ff999646dc4,21571525,0,0x0,8
tick,0x7ff999646dc4,21587700,0,0x0,8
tick,0x7ff999646dc4,21603564,0,0x0,8
tick,0x7ff999646dc4,21618115,0,0x0,8
tick,0x7ff999646dc4,21634641,0,0x0,8
tick,0x7ff999646dc4,21650561,0,0x0,8
tick,0x7ff999646dc4,21664761,0,0x0,8
tick,0x7ff999646dc4,21679441,0,0x0,8
tick,0x7ff999646dc4,21694463,0,0x0,8
tick,0x7ff999646dc4,21709953,0,0x0,8
tick,0x7ff999646dc4,21725632,0,0x0,8
tick,0x7ff999646dc4,21740887,0,0x0,8
tick,0x7ff999646dc4,21756290,0,0x0,8
tick,0x7ff999646dc4,21771538,0,0x0,8
tick,0x7ff999646dc4,21787979,0,0x0,8
tick,0x7ff999646dc4,21802780,0,0x0,8
tick,0x7ff999646dc4,21818477,0,0x0,8
tick,0x7ff999646dc4,21833089,0,0x0,8
tick,0x7ff999646dc4,21850011,0,0x0,8
tick,0x7ff999646dc4,21864416,0,0x0,8
tick,0x7ff999646dc4,21879086,0,0x0,8
tick,0x7ff999646dc4,21894572,0,0x0,8
tick,0x7ff999646dc4,21910306,0,0x0,8
tick,0x7ff999646dc4,21924674,0,0x0,8
tick,0x7ff999646dc4,21940412,0,0x0,8
tick,0x7ff999646dc4,21956050,0,0x0,8
tick,0x7ff999646dc4,21970856,0,0x0,8
tick,0x7ff999646dc4,22003354,0,0x0,8
tick,0x7ff999646dc4,22039416,0,0x0,8
tick,0x7ff999646dc4,22099971,0,0x0,8
tick,0x7ff999646dc4,22110254,0,0x0,8
tick,0x7ff999646dc4,22124695,0,0x0,8
tick,0x7ff999646dc4,22139455,0,0x0,8
tick,0x7ff999646dc4,22154896,0,0x0,8
tick,0x7ff999646dc4,22170680,0,0x0,8
tick,0x7ff999646dc4,22185401,0,0x0,8
tick,0x7ff999646dc4,22201201,0,0x0,8
tick,0x7ff999646dc4,22216954,0,0x0,8
tick,0x7ff999646dc4,22232121,0,0x0,8
tick,0x7ff999646dc4,22248106,0,0x0,8
tick,0x7ff999646dc4,22262950,0,0x0,8
tick,0x7ff999646dc4,22278829,0,0x0,8
tick,0x7ff999646dc4,22293259,0,0x0,8
tick,0x7ff999646dc4,22308127,0,0x0,8
tick,0x7ff999646dc4,22324054,0,0x0,8
tick,0x7ff999646dc4,22338814,0,0x0,8
tick,0x7ff999646dc4,22355540,0,0x0,8
tick,0x7ff999646dc4,22370055,0,0x0,8
tick,0x7ff999646dc4,22385080,0,0x0,8
tick,0x7ff999646dc4,22401071,0,0x0,8
tick,0x7ff999646dc4,22417196,0,0x0,8
tick,0x7ff999646dc4,22432184,0,0x0,8
tick,0x7ff999646dc4,22446370,0,0x0,8
tick,0x7ff999646dc4,22461590,0,0x0,8
tick,0x7ff999646dc4,22478862,0,0x0,8
tick,0x7ff999646dc4,22493253,0,0x0,8
tick,0x7ff999646dc4,22509910,0,0x0,8
tick,0x7ff999646dc4,22523261,0,0x0,8
tick,0x7ff999646dc4,22540480,0,0x0,8
tick,0x7ff999646dc4,22556563,0,0x0,8
tick,0x7ff999646dc4,22569667,0,0x0,8
tick,0x7ff999646dc4,22584484,0,0x0,8
tick,0x7ff999646dc4,22601906,0,0x0,8
tick,0x7ff999646dc4,22615429,0,0x0,8
tick,0x7ff999646dc4,22631771,0,0x0,8
tick,0x7ff999646dc4,22646759,0,0x0,8
tick,0x7ff999646dc4,22663034,0,0x0,8
tick,0x7ff999646dc4,22676781,0,0x0,8
tick,0x7ff999646dc4,22693558,0,0x0,8
tick,0x7ff999646dc4,22707568,0,0x0,8
tick,0x7ff999646dc4,22723683,0,0x0,8
tick,0x7ff999646dc4,22738489,0,0x0,8
tick,0x7ff999646dc4,22754111,0,0x0,8
tick,0x7ff999646dc4,22769503,0,0x0,8
tick,0x7ff999646dc4,22785262,0,0x0,8
tick,0x7ff999646dc4,22799796,0,0x0,8
tick,0x7ff999646dc4,22815546,0,0x0,8
tick,0x7ff999646dc4,22830866,0,0x0,8
tick,0x7ff999646dc4,22845887,0,0x0,8
tick,0x7ff999646dc4,22861366,0,0x0,8
tick,0x7ff999646dc4,22877453,0,0x0,8
tick,0x7ff999646dc4,22892005,0,0x0,8
tick,0x7ff999646dc4,22909779,0,0x0,8
tick,0x7ff999646dc4,22922203,0,0x0,8
tick,0x7ff999646dc4,22938170,0,0x0,8
tick,0x7ff999646dc4,22955064,0,0x0,8
tick,0x7ff999646dc4,22970120,0,0x0,8
tick,0x7ff999646dc4,22983447,0,0x0,8
tick,0x7ff999646dc4,23039720,0,0x0,8
tick,0x7ff999646dc4,23044804,0,0x0,8
tick,0x7ff999646dc4,23083919,0,0x0,8
tick,0x7ff999646dc4,23091608,0,0x0,8
tick,0x7ff999646dc4,23106348,0,0x0,8
tick,0x7ff999646dc4,23121488,0,0x0,8
tick,0x7ff999646dc4,23136762,0,0x0,8
tick,0x7ff999646dc4,23153140,0,0x0,8
tick,0x7ff999646dc4,23169977,0,0x0,8
tick,0x7ff999646dc4,23183946,0,0x0,8
tick,0x7ff999646dc4,23198498,0,0x0,8
tick,0x7ff999646dc4,23215310,0,0x0,8
tick,0x7ff999646dc4,23229587,0,0x0,8
tick,0x7ff999646dc4,23244852,0,0x0,8
tick,0x7ff999646dc4,23259867,0,0x0,8
tick,0x7ff999646dc4,23275732,0,0x0,8
tick,0x7ff999646dc4,23291048,0,0x0,8
tick,0x7ff999646dc4,23306118,0,0x0,8
tick,0x7ff999646dc4,23321920,0,0x0,8
tick,0x7ff999646dc4,23337160,0,0x0,8
tick,0x7ff999646dc4,23353152,0,0x0,8
tick,0x7ff999646dc4,23367600,0,0x0,8
tick,0x7ff999646dc4,23384084,0,0x0,8
tick,0x7ff999646dc4,23398827,0,0x0,8
tick,0x7ff999646dc4,23415936,0,0x0,8
tick,0x7ff999646dc4,23429496,0,0x0,8
tick,0x7ff999646dc4,23444571,0,0x0,8
tick,0x7ff999646dc4,23460009,0,0x0,8
tick,0x7ff999646dc4,23475731,0,0x0,8
tick,0x7ff999646dc4,23492139,0,0x0,8
tick,0x7ff999646dc4,23506486,0,0x0,8
tick,0x7ff999646dc4,23521811,0,0x0,8
tick,0x7ff999646dc4,23537050,0,0x0,8
tick,0x7ff999646dc4,23553742,0,0x0,8
tick,0x7ff999646dc4,23567621,0,0x0,8
tick,0x7ff999646dc4,23583017,0,0x0,8
tick,0x7ff999646dc4,23599728,0,0x0,8
tick,0x7ff999646dc4,23613911,0,0x0,8
tick,0x7ff999646dc4,23629199,0,0x0,8
tick,0x7ff999646dc4,23643946,0,0x0,8
tick,0x7ff999646dc4,23659970,0,0x0,8
tick,0x7ff999646dc4,23675206,0,0x0,8
tick,0x7ff999646dc4,23690089,0,0x0,8
tick,0x7ff999646dc4,23706560,0,0x0,8
tick,0x7ff999646dc4,23721787,0,0x0,8
tick,0x7ff999646dc4,23737285,0,0x0,8
tick,0x7ff999646dc4,23752511,0,0x0,8
tick,0x7ff999646dc4,23767383,0,0x0,8
tick,0x7ff999646dc4,23783729,0,0x0,8
tick,0x7ff999646dc4,23798098,0,0x0,8
tick,0x7ff999646dc4,23813805,0,0x0,8
tick,0x7ff999646dc4,23829217,0,0x0,8
tick,0x7ff999646dc4,23845456,0,0x0,8
tick,0x7ff999646dc4,23859585,0,0x0,8
tick,0x7ff999646dc4,23874810,0,0x0,8
tick,0x7ff999646dc4,23890067,0,0x0,8
tick,0x7ff999646dc4,23907297,0,0x0,8
tick,0x7ff999646dc4,23923658,0,0x0,8
tick,0x7ff999646dc4,23936391,0,0x0,8
tick,0x7ff999646dc4,23953126,0,0x0,8
tick,0x7ff999646dc4,23967642,0,0x0,8
tick,0x7ff999646dc4,23981388,0,0x0,8
tick,0x7ff999646dc4,23997414,0,0x0,8
tick,0x7ff999646dc4,24012661,0,0x0,8
tick,0x7ff999646dc4,24029009,0,0x0,8
tick,0x7ff999646dc4,24043492,0,0x0,8
tick,0x7ff999646dc4,24059063,0,0x0,8
tick,0x7ff999646dc4,24074564,0,0x0,8
tick,0x7ff999646dc4,24089658,0,0x0,8
tick,0x7ff999646dc4,24105768,0,0x0,8
tick,0x7ff999646dc4,24120917,0,0x0,8
tick,0x7ff999646dc4,24137082,0,0x0,8
tick,0x7ff999646dc4,24151739,0,0x0,8
tick,0x7ff999646dc4,24168079,0,0x0,8
tick,0x7ff999646dc4,24180958,0,0x0,8
tick,0x7ff999646dc4,24197112,0,0x0,8
tick,0x7ff999646dc4,24211974,0,0x0,8
tick,0x7ff999646dc4,24228582,0,0x0,8
tick,0x7ff999646dc4,24242143,0,0x0,8
tick,0x7ff999646dc4,24257748,0,0x0,8
tick,0x7ff999646dc4,24274257,0,0x0,8
tick,0x7ff999646dc4,24291025,0,0x0,8
tick,0x7ff999646dc4,24304647,0,0x0,8
tick,0x7ff999646dc4,24320019,0,0x0,8
tick,0x7ff999646dc4,24335522,0,0x0,8
tick,0x7ff999646dc4,24351545,0,0x0,8
tick,0x7ff999646dc4,24365960,0,0x0,8
tick,0x7ff999646dc4,24382314,0,0x0,8
tick,0x7ff999646dc4,24396950,0,0x0,8
tick,0x7ff999646dc4,24412623,0,0x0,8
tick,0x7ff999646dc4,24427055,0,0x0,8
tick,0x7ff999646dc4,24442672,0,0x0,8
tick,0x7ff999646dc4,24458298,0,0x0,8
tick,0x7ff999646dc4,24474312,0,0x0,8
tick,0x7ff999646dc4,24489965,0,0x0,8
tick,0x7ff999646dc4,24503778,0,0x0,8
tick,0x7ff999646dc4,24519592,0,0x0,8
tick,0x7ff999646dc4,24535363,0,0x0,8
tick,0x7ff999646dc4,24551114,0,0x0,8
tick,0x7ff999646dc4,24565055,0,0x0,8
tick,0x7ff999646dc4,24581059,0,0x0,8
tick,0x7ff999646dc4,24597184,0,0x0,8
tick,0x7ff999646dc4,24611374,0,0x0,8
tick,0x7ff999646dc4,24626338,0,0x0,8
tick,0x7ff999646dc4,24642073,0,0x0,8
tick,0x7ff999646dc4,24658559,0,0x0,8
tick,0x7ff999646dc4,24673176,0,0x0,8
tick,0x7ff999646dc4,24688141,0,0x0,8
tick,0x7ff999646dc4,24705257,0,0x0,8
tick,0x7ff999646dc4,24719316,0,0x0,8
tick,0x7ff999646dc4,24734660,0,0x0,8
tick,0x7ff999646dc4,24749314,0,0x0,8
tick,0x7ff999646dc4,24764611,0,0x0,8
tick,0x7ff999646dc4,24780697,0,0x0,8
tick,0x7ff999646dc4,24795004,0,0x0,8
tick,0x7ff999646dc4,24811216,0,0x0,8
tick,0x7ff999646dc4,24825971,0,0x0,8
tick,0x7ff999646dc4,24842085,0,0x0,8
tick,0x7ff999646dc4,24857243,0,0x0,8
tick,0x7ff999646dc4,24872440,0,0x0,8
tick,0x7ff999646dc4,24887863,0,0x0,8
tick,0x7ff999646dc4,24904020,0,0x0,8
tick,0x7ff999646dc4,24919035,0,0x0,8
tick,0x7ff999646dc4,24933709,0,0x0,8
tick,0x7ff999646dc4,24949938,0,0x0,8
tick,0x7ff999646dc4,24964260,0,0x0,8
tick,0x7ff999646dc4,24981387,0,0x0,8
tick,0x7ff999646dc4,24994991,0,0x0,8
tick,0x7ff999646dc4,25012121,0,0x0,8
tick,0x7ff999646dc4,25026552,0,0x0,8
tick,0x7ff999646dc4,25042450,0,0x0,8
tick,0x7ff999646dc4,25057978,0,0x0,8
tick,0x7ff999646dc4,25072749,0,0x0,8
tick,0x7ff999646dc4,25088196,0,0x0,8
tick,0x7ff999646dc4,25104931,0,0x0,8
tick,0x7ff999646dc4,25118024,0,0x0,8
tick,0x7ff999646dc4,25135365,0,0x0,8
tick,0x7ff999646dc4,25148941,0,0x0,8
tick,0x7ff999646dc4,25165135,0,0x0,8
tick,0x7ff999646dc4,25180309,0,0x0,8
tick,0x7ff999646dc4,25195243,0,0x0,8
tick,0x7ff999646dc4,25209845,0,0x0,8
tick,0x7ff999646dc4,25250025,0,0x0,8
tick,0x7ff999646dc4,25271600,0,0x0,8
tick,0x7ff999646dc4,25308142,0,0x0,8
tick,0x7ff999646dc4,25336938,0,0x0,8
tick,0x7ff999646dc4,25360792,0,0x0,8
tick,0x7ff999646dc4,25363355,0,0x0,8
tick,0x7ff999646dc4,25383482,0,0x0,8
tick,0x7ff999646dc4,25434699,0,0x0,8
tick,0x7ff999646dc4,25439222,0,0x0,8
tick,0x7ff999646dc4,25462711,0,0x0,8
tick,0x7ff999646dc4,25493491,0,0x0,8
tick,0x7ff999646dc4,25501408,0,0x0,8
tick,0x7ff999646dc4,25516611,0,0x0,8
tick,0x7ff999646dc4,25533254,0,0x0,8
tick,0x7ff999646dc4,25548705,0,0x0,8
tick,0x7ff999646dc4,25562554,0,0x0,8
tick,0x7ff999646dc4,25578148,0,0x0,8
tick,0x7ff999646dc4,25593904,0,0x0,8
tick,0x7ff999646dc4,25608245,0,0x0,8
tick,0x7ff999646dc4,25623520,0,0x0,8
tick,0x7ff999646dc4,25638847,0,0x0,8
tick,0x7ff999646dc4,25654646,0,0x0,8
tick,0x7ff999646dc4,25670274,0,0x0,8
tick,0x7ff999646dc4,25685567,0,0x0,8
tick,0x7ff999646dc4,25701549,0,0x0,8
tick,0x7ff999646dc4,25716609,0,0x0,8
tick,0x7ff999646dc4,25731628,0,0x0,8
tick,0x7ff999646dc4,25746678,0,0x0,8
tick,0x7ff999646dc4,25762534,0,0x0,8
tick,0x7ff999646dc4,25777736,0,0x0,8
tick,0x7ff999646dc4,25793080,0,0x0,8
tick,0x7ff999646dc4,25809631,0,0x0,8
tick,0x7ff999646dc4,25824709,0,0x0,8
tick,0x7ff999646dc4,25839275,0,0x0,8
tick,0x7ff999646dc4,25856421,0,0x0,8
tick,0x7ff999646dc4,25869701,0,0x0,8
tick,0x7ff999646dc4,25885520,0,0x0,8
tick,0x7ff999646dc4,25901266,0,0x0,8
tick,0x7ff999646dc4,25917692,0,0x0,8
tick,0x7ff999646dc4,25931787,0,0x0,8
tick,0x7ff999646dc4,25947440,0,0x0,8
tick,0x7ff999646dc4,25961571,0,0x0,8
tick,0x7ff999646dc4,25978119,0,0x0,8
tick,0x7ff999646dc4,25993999,0,0x0,8
tick,0x7ff999646dc4,26034059,0,0x0,8
tick,0x7ff999646dc4,26037663,0,0x0,8
tick,0x7ff999646dc4,26060045,0,0x0,8
tick,0x7ff999646dc4,26097762,0,0x0,8
tick,0x7ff999646dc4,26113506,0,0x0,8
tick,0x7ff999646dc4,26131671,0,0x0,8
tick,0x7ff999646dc4,26152382,0,0x0,8
tick,0x7ff999646dc4,26159681,0,0x0,8
tick,0x7ff999646dc4,26175049,0,0x0,8
tick,0x7ff999646dc4,26191306,0,0x0,8
tick,0x7ff999646dc4,26206149,0,0x0,8
tick,0x7ff999646dc4,26221627,0,0x0,8
tick,0x7ff999646dc4,26236271,0,0x0,8
tick,0x7ff999646dc4,26251888,0,0x0,8
tick,0x7ff999646dc4,26266620,0,0x0,8
tick,0x7ff999646dc4,26281865,0,0x0,8
tick,0x7ff999646dc4,26297662,0,0x0,8
tick,0x7ff999646dc4,26312903,0,0x0,8
tick,0x7ff999646dc4,26327606,0,0x0,8
tick,0x7ff999646dc4,26343227,0,0x0,8
tick,0x7ff999646dc4,26359941,0,0x0,8
tick,0x7ff999646dc4,26374750,0,0x0,8
tick,0x7ff999646dc4,26389529,0,0x0,8
tick,0x7ff999646dc4,26405624,0,0x0,8
tick,0x7ff999646dc4,26420866,0,0x0,8
tick,0x7ff999646dc4,26435878,0,0x0,8
tick,0x7ff999646dc4,26450868,0,0x0,8
tick,0x7ff999646dc4,26467213,0,0x0,8
tick,0x7ff999646dc4,26481770,0,0x0,8
tick,0x7ff999646dc4,26496985,0,0x0,8
tick,0x7ff999646dc4,26514087,0,0x0,8
tick,0x7ff999646dc4,26528942,0,0x0,8
tick,0x7ff999646dc4,26543384,0,0x0,8
tick,0x7ff999646dc4,26558012,0,0x0,8
tick,0x7ff999646dc4,26573856,0,0x0,8
tick,0x7ff999646dc4,26588869,0,0x0,8
tick,0x7ff999646dc4,26604550,0,0x0,8
tick,0x7ff999646dc4,26619365,0,0x0,8
tick,0x7ff999646dc4,26634899,0,0x0,8
tick,0x7ff999646dc4,26650079,0,0x0,8
tick,0x7ff999646dc4,26666065,0,0x0,8
tick,0x7ff999646dc4,26682228,0,0x0,8
tick,0x7ff999646dc4,26696717,0,0x0,8
tick,0x7ff999646dc4,26711961,0,0x0,8
tick,0x7ff999646dc4,26727725,0,0x0,8
tick,0x7ff999646dc4,26742528,0,0x0,8
tick,0x7ff999646dc4,26757866,0,0x0,8
tick,0x7ff999646dc4,26773834,0,0x0,8
tick,0x7ff999646dc4,26791014,0,0x0,8
tick,0x7ff999646dc4,26804594,0,0x0,8
tick,0x7ff999646dc4,26819804,0,0x0,8
tick,0x7ff999646dc4,26834827,0,0x0,8
tick,0x7ff999646dc4,26850775,0,0x0,8
tick,0x7ff999646dc4,26865861,0,0x0,8
tick,0x7ff999646dc4,26880554,0,0x0,8
tick,0x7ff999646dc4,26896700,0,0x0,8
tick,0x7ff999646dc4,26911122,0,0x0,8
tick,0x7ff999646dc4,26926782,0,0x0,8
tick,0x7ff999646dc4,26942028,0,0x0,8
tick,0x7ff999646dc4,26957567,0,0x0,8
tick,0x7ff999646dc4,26972831,0,0x0,8
tick,0x7ff999646dc4,26988794,0,0x0,8
tick,0x7ff999646dc4,27005308,0,0x0,8
tick,0x7ff999646dc4,27019239,0,0x0,8
tick,0x7ff999646dc4,27035453,0,0x0,8
tick,0x7ff999646dc4,27050353,0,0x0,8
tick,0x7ff999646dc4,27065547,0,0x0,8
tick,0x7ff999646dc4,27080786,0,0x0,8
tick,0x7ff999646dc4,27096111,0,0x0,8
tick,0x7ff999646dc4,27112002,0,0x0,8
tick,0x7ff999646dc4,27126617,0,0x0,8
tick,0x7ff999646dc4,27141559,0,0x0,8
tick,0x7ff999646dc4,27158842,0,0x0,8
tick,0x7ff999646dc4,27173247,0,0x0,8
tick,0x7ff999646dc4,27189259,0,0x0,8
tick,0x7ff999646dc4,27203572,0,0x0,8
tick,0x7ff999646dc4,27218760,0,0x0,8
tick,0x7ff999646dc4,27233076,0,0x0,8
tick,0x7ff999646dc4,27248038,0,0x0,8
tick,0x7ff999646dc4,27264010,0,0x0,8
tick,0x7ff999646dc4,27278876,0,0x0,8
tick,0x7ff999646dc4,27293195,0,0x0,8
tick,0x7ff999646dc4,27309143,0,0x0,8
tick,0x7ff999646dc4,27325169,0,0x0,8
tick,0x7ff999646dc4,27340381,0,0x0,8
tick,0x7ff999646dc4,27355017,0,0x0,8
tick,0x7ff999646dc4,27370019,0,0x0,8
tick,0x7ff999646dc4,27385444,0,0x0,8
tick,0x7ff999646dc4,27400378,0,0x0,8
tick,0x7ff999646dc4,27415732,0,0x0,8
tick,0x7ff999646dc4,27431672,0,0x0,8
tick,0x7ff999646dc4,27446718,0,0x0,8
tick,0x7ff999646dc4,27461826,0,0x0,8
tick,0x7ff999646dc4,27477269,0,0x0,8
tick,0x7ff999646dc4,27492396,0,0x0,8
tick,0x7ff999646dc4,27507879,0,0x0,8
tick,0x7ff999646dc4,27523346,0,0x0,8
tick,0x7ff999646dc4,27539220,0,0x0,8
tick,0x7ff999646dc4,27554885,0,0x0,8
tick,0x7ff999646dc4,27569698,0,0x0,8
tick,0x7ff999646dc4,27585298,0,0x0,8
tick,0x7ff999646dc4,27600287,0,0x0,8
tick,0x7ff999646dc4,27615544,0,0x0,8
tick,0x7ff999646dc4,27630784,0,0x0,8
tick,0x7ff999646dc4,27647300,0,0x0,8
tick,0x7ff999646dc4,27660897,0,0x0,8
tick,0x7ff999646dc4,27676404,0,0x0,8
tick,0x7ff999646dc4,27691739,0,0x0,8
tick,0x7ff999646dc4,27706894,0,0x0,8
tick,0x7ff999646dc4,27722171,0,0x0,8
tick,0x7ff999646dc4,27737530,0,0x0,8
tick,0x7ff999646dc4,27753829,0,0x0,8
tick,0x7ff999646dc4,27768610,0,0x0,8
tick,0x7ff999646dc4,27783972,0,0x0,8
tick,0x7ff999646dc4,27799014,0,0x0,8
tick,0x7ff999646dc4,27814266,0,0x0,8
tick,0x7ff999646dc4,27830060,0,0x0,8
tick,0x7ff999646dc4,27845153,0,0x0,8
tick,0x7ff999646dc4,27861374,0,0x0,8
tick,0x7ff999646dc4,27876386,0,0x0,8
tick,0x7ff999646dc4,27891059,0,0x0,8
tick,0x7ff999646dc4,27906513,0,0x0,8
tick,0x7ff999646dc4,27921773,0,0x0,8
tick,0x7ff999646dc4,27936919,0,0x0,8
tick,0x7ff999646dc4,27951995,0,0x0,8
tick,0x7ff999646dc4,27969565,0,0x0,8
tick,0x7ff999646dc4,27982753,0,0x0,8
tick,0x7ff999646dc4,27998010,0,0x0,8
tick,0x7ff999646dc4,28013770,0,0x0,8
tick,0x7ff999646dc4,28028380,0,0x0,8
tick,0x7ff999646dc4,28043907,0,0x0,8
tick,0x7ff999646dc4,28060014,0,0x0,8
tick,0x7ff999646dc4,28075494,0,0x0,8
tick,0x7ff999646dc4,28090720,0,0x0,8
tick,0x7ff999646dc4,28106510,0,0x0,8
tick,0x7ff999646dc4,28121881,0,0x0,8
tick,0x7ff999646dc4,28136644,0,0x0,8
tick,0x7ff999646dc4,28151128,0,0x0,8
tick,0x7ff999646dc4,28167914,0,0x0,8
tick,0x7ff999646dc4,28182775,0,0x0,8
tick,0x7ff999646dc4,28197926,0,0x0,8
tick,0x7ff999646dc4,28214158,0,0x0,8
tick,0x7ff999646dc4,28228583,0,0x0,8
tick,0x7ff999646dc4,28244498,0,0x0,8
tick,0x7ff999646dc4,28258957,0,0x0,8
tick,0x7ff999646dc4,28274532,0,0x0,8
tick,0x7ff999646dc4,28290922,0,0x0,8
tick,0x7ff999646dc4,28305471,0,0x0,8
tick,0x7ff999646dc4,28321285,0,0x0,8
tick,0x7ff999646dc4,28336335,0,0x0,8
tick,0x7ff999646dc4,28352129,0,0x0,8
tick,0x7ff999646dc4,28367098,0,0x0,8
tick,0x7ff999646dc4,28382461,0,0x0,8
tick,0x7ff999646dc4,28397811,0,0x0,8
tick,0x7ff999646dc4,28411950,0,0x0,8
tick,0x7ff999646dc4,28427393,0,0x0,8
tick,0x7ff999646dc4,28443278,0,0x0,8
tick,0x7ff999646dc4,28457810,0,0x0,8
tick,0x7ff999646dc4,28473378,0,0x0,8
tick,0x7ff999646dc4,28488120,0,0x0,8
tick,0x7ff999646dc4,28504462,0,0x0,8
tick,0x7ff999646dc4,28519647,0,0x0,8
tick,0x7ff999646dc4,28534227,0,0x0,8
tick,0x7ff999646dc4,28550397,0,0x0,8
tick,0x7ff999646dc4,28566200,0,0x0,8
tick,0x7ff999646dc4,28580591,0,0x0,8
tick,0x7ff999646dc4,28595713,0,0x0,8
tick,0x7ff999646dc4,28611917,0,0x0,8
tick,0x7ff999646dc4,28627029,0,0x0,8
tick,0x7ff999646dc4,28641742,0,0x0,8
tick,0x7ff999646dc4,28657414,0,0x0,8
tick,0x7ff999646dc4,28672703,0,0x0,8
tick,0x7ff999646dc4,28688413,0,0x0,8
tick,0x7ff999646dc4,28704383,0,0x0,8
tick,0x7ff999646dc4,28719109,0,0x0,8
tick,0x7ff999646dc4,28733888,0,0x0,8
tick,0x7ff999646dc4,28749323,0,0x0,8
tick,0x7ff999646dc4,28764623,0,0x0,8
tick,0x7ff999646dc4,28779558,0,0x0,8
tick,0x7ff999646dc4,28794645,0,0x0,8
tick,0x7ff999646dc4,28810299,0,0x0,8
tick,0x7ff999646dc4,28825299,0,0x0,8
tick,0x7ff999646dc4,28840834,0,0x0,8
tick,0x7ff999646dc4,28855307,0,0x0,8
tick,0x7ff999646dc4,28871430,0,0x0,8
tick,0x7ff999646dc4,28886910,0,0x0,8
tick,0x7ff999646dc4,28901437,0,0x0,8
tick,0x7ff999646dc4,28916940,0,0x0,8
tick,0x7ff999646dc4,28932489,0,0x0,8
tick,0x7ff999646dc4,28948353,0,0x0,8
tick,0x7ff999646dc4,28962938,0,0x0,8
tick,0x7ff999646dc4,28978853,0,0x0,8
tick,0x7ff999646dc4,28993779,0,0x0,8
tick,0x7ff999646dc4,29009519,0,0x0,8
tick,0x7ff999646dc4,29025006,0,0x0,8
tick,0x7ff999646dc4,29040995,0,0x0,8
tick,0x7ff999646dc4,29055078,0,0x0,8
tick,0x7ff999646dc4,29070678,0,0x0,8
tick,0x7ff999646dc4,29085904,0,0x0,8
tick,0x7ff999646dc4,29101928,0,0x0,8
tick,0x7ff999646dc4,29116640,0,0x0,8
tick,0x7ff999646dc4,29132069,0,0x0,8
tick,0x7ff999646dc4,29148759,0,0x0,8
tick,0x7ff999646dc4,29163710,0,0x0,8
tick,0x7ff999646dc4,29178820,0,0x0,8
tick,0x7ff999646dc4,29193496,0,0x0,8
tick,0x7ff999646dc4,29208733,0,0x0,8
tick,0x7ff999646dc4,29225280,0,0x0,8
tick,0x7ff999646dc4,29239703,0,0x0,8
tick,0x7ff999646dc4,29255053,0,0x0,8
tick,0x7ff999646dc4,29269423,0,0x0,8
tick,0x7ff999646dc4,29284915,0,0x0,8
tick,0x7ff999646dc4,29300490,0,0x0,8
tick,0x7ff999646dc4,29315482,0,0x0,8
tick,0x7ff999646dc4,29330933,0,0x0,8
tick,0x7ff999646dc4,29346714,0,0x0,8
tick,0x7ff999646dc4,29362369,0,0x0,8
tick,0x7ff999646dc4,29377456,0,0x0,8
tick,0x7ff999646dc4,29392430,0,0x0,8
tick,0x7ff999646dc4,29408050,0,0x0,8
tick,0x7ff999646dc4,29423699,0,0x0,8
tick,0x7ff999646dc4,29438752,0,0x0,8
tick,0x7ff999646dc4,29453833,0,0x0,8
tick,0x7ff999646dc4,29470924,0,0x0,8
tick,0x7ff999646dc4,29485503,0,0x0,8
tick,0x7ff999646dc4,29500613,0,0x0,8
tick,0x7ff999646dc4,29515908,0,0x0,8
tick,0x7ff999646dc4,29531996,0,0x0,8
tick,0x7ff999646dc4,29547516,0,0x0,8
tick,0x7ff999646dc4,29562352,0,0x0,8
tick,0x7ff999646dc4,29578791,0,0x0,8
tick,0x7ff999646dc4,29594100,0,0x0,8
tick,0x7ff999646dc4,29608280,0,0x0,8
tick,0x7ff999646dc4,29623770,0,0x0,8
tick,0x7ff999646dc4,29639188,0,0x0,8
tick,0x7ff999646dc4,29654627,0,0x0,8
tick,0x7ff999646dc4,29671078,0,0x0,8
tick,0x7ff999646dc4,29686654,0,0x0,8
tick,0x7ff999646dc4,29701819,0,0x0,8
tick,0x7ff999646dc4,29716006,0,0x0,8
tick,0x7ff999646dc4,29731781,0,0x0,8
tick,0x7ff999646dc4,29746744,0,0x0,8
tick,0x7ff999646dc4,29761882,0,0x0,8
tick,0x7ff999646dc4,29777813,0,0x0,8
tick,0x7ff999646dc4,29793689,0,0x0,8
tick,0x7ff999646dc4,29807494,0,0x0,8
tick,0x7ff999646dc4,29823238,0,0x0,8
tick,0x7ff999646dc4,29837728,0,0x0,8
tick,0x7ff999646dc4,29854039,0,0x0,8
tick,0x7ff999646dc4,29868386,0,0x0,8
tick,0x7ff999646dc4,29884123,0,0x0,8
tick,0x7ff999646dc4,29900331,0,0x0,8
tick,0x7ff999646dc4,29915351,0,0x0,8
tick,0x7ff999646dc4,29929980,0,0x0,8
tick,0x7ff999646dc4,29944905,0,0x0,8
tick,0x7ff999646dc4,29959430,0,0x0,8
tick,0x7ff999646dc4,29975744,0,0x0,8
tick,0x7ff999646dc4,29990058,0,0x0,8
tick,0x7ff999646dc4,30005979,0,0x0,8
tick,0x7ff999646dc4,30021095,0,0x0,8
tick,0x7ff999646dc4,30036716,0,0x0,8
tick,0x7ff999646dc4,30051329,0,0x0,8
tick,0x7ff999646dc4,30066746,0,0x0,8
tick,0x7ff999646dc4,30082976,0,0x0,8
tick,0x7ff999646dc4,30097992,0,0x0,8
tick,0x7ff999646dc4,30113663,0,0x0,8
tick,0x7ff999646dc4,30128321,0,0x0,8
tick,0x7ff999646dc4,30143487,0,0x0,8
tick,0x7ff999646dc4,30158513,0,0x0,8
tick,0x7ff999646dc4,30174121,0,0x0,8
tick,0x7ff999646dc4,30190485,0,0x0,8
tick,0x7ff999646dc4,30205868,0,0x0,8
tick,0x7ff999646dc4,30221708,0,0x0,8
tick,0x7ff999646dc4,30235736,0,0x0,8
tick,0x7ff999646dc4,30250917,0,0x0,8
tick,0x7ff999646dc4,30266290,0,0x0,8
tick,0x7ff999646dc4,30281552,0,0x0,8
tick,0x7ff999646dc4,30296861,0,0x0,8
tick,0x7ff999646dc4,30312007,0,0x0,8
tick,0x7ff999646dc4,30328176,0,0x0,8
tick,0x7ff999646dc4,30342635,0,0x0,8
tick,0x7ff999646dc4,30357697,0,0x0,8
tick,0x7ff999646dc4,30372869,0,0x0,8
tick,0x7ff999646dc4,30388763,0,0x0,8
tick,0x7ff999646dc4,30403872,0,0x0,8
tick,0x7ff999646dc4,30419924,0,0x0,8
tick,0x7ff999646dc4,30435066,0,0x0,8
tick,0x7ff999646dc4,30450509,0,0x0,8
tick,0x7ff999646dc4,30465818,0,0x0,8
tick,0x7ff999646dc4,30480653,0,0x0,8
tick,0x7ff999646dc4,30495948,0,0x0,8
tick,0x7ff999646dc4,30510833,0,0x0,8
tick,0x7ff999646dc4,30526098,0,0x0,8
tick,0x7ff999646dc4,30543508,0,0x0,8
tick,0x7ff999646dc4,30557213,0,0x0,8
tick,0x7ff999646dc4,30574248,0,0x0,8
tick,0x7ff999646dc4,30589603,0,0x0,8
tick,0x7ff999646dc4,30603157,0,0x0,8
tick,0x7ff999646dc4,30619954,0,0x0,8
tick,0x7ff999646dc4,30633502,0,0x0,8
tick,0x7ff999646dc4,30649399,0,0x0,8
tick,0x7ff999646dc4,30664401,0,0x0,8
tick,0x7ff999646dc4,30680172,0,0x0,8
tick,0x7ff999646dc4,30695646,0,0x0,8
tick,0x7ff999646dc4,30710679,0,0x0,8
tick,0x7ff999646dc4,30726067,0,0x0,8
tick,0x7ff999646dc4,30741508,0,0x0,8
tick,0x7ff999646dc4,30756972,0,0x0,8
tick,0x7ff999646dc4,30772354,0,0x0,8
tick,0x7ff999646dc4,30789155,0,0x0,8
tick,0x7ff999646dc4,30803791,0,0x0,8
tick,0x7ff999646dc4,30818119,0,0x0,8
tick,0x7ff999646dc4,30833708,0,0x0,8
tick,0x7ff999646dc4,30848627,0,0x0,8
tick,0x7ff999646dc4,30864009,0,0x0,8
tick,0x7ff999646dc4,30879124,0,0x0,8
tick,0x7ff999646dc4,30895047,0,0x0,8
tick,0x7ff999646dc4,30910604,0,0x0,8
tick,0x7ff999646dc4,30925212,0,0x0,8
tick,0x7ff999646dc4,30941104,0,0x0,8
tick,0x7ff999646dc4,30956153,0,0x0,8
tick,0x7ff999646dc4,30972948,0,0x0,8
tick,0x7ff999646dc4,30989121,0,0x0,8
tick,0x7ff999646dc4,31003080,0,0x0,8
tick,0x7ff999646dc4,31017122,0,0x0,8
tick,0x7ff999646dc4,31032730,0,0x0,8
tick,0x7ff999646dc4,31047880,0,0x0,8
tick,0x7ff999646dc4,31062956,0,0x0,8
tick,0x7ff999646dc4,31078193,0,0x0,8
tick,0x7ff999646dc4,31094211,0,0x0,8
tick,0x7ff999646dc4,31108925,0,0x0,8
tick,0x7ff999646dc4,31124742,0,0x0,8
tick,0x7ff999646dc4,31140093,0,0x0,8
tick,0x7ff999646dc4,31157165,0,0x0,8
tick,0x7ff999646dc4,31176461,0,0x0,8
tick,0x7ff999646dc4,31187142,0,0x0,8
tick,0x7ff999646dc4,31205550,0,0x0,8
tick,0x7ff999646dc4,31226382,0,0x0,8
tick,0x7ff999646dc4,31233485,0,0x0,8
tick,0x7ff999646dc4,31246687,0,0x0,8
tick,0x7ff999646dc4,31262830,0,0x0,8
tick,0x7ff999646dc4,31279028,0,0x0,8
tick,0x7ff999646dc4,31293329,0,0x0,8
tick,0x7ff999646dc4,31308084,0,0x0,8
tick,0x7ff999646dc4,31323221,0,0x0,8
tick,0x7ff999646dc4,31338526,0,0x0,8
tick,0x7ff999646dc4,31355642,0,0x0,8
tick,0x7ff999646dc4,31369309,0,0x0,8
tick,0x7ff999646dc4,31384223,0,0x0,8
tick,0x7ff999646dc4,31399871,0,0x0,8
tick,0x7ff999646dc4,31414878,0,0x0,8
tick,0x7ff999646dc4,31429872,0,0x0,8
tick,0x7ff999646dc4,31445293,0,0x0,8
tick,0x7ff999646dc4,31460572,0,0x0,8
tick,0x7ff999646dc4,31475955,0,0x0,8
tick,0x7ff999646dc4,31491618,0,0x0,8
tick,0x7ff999646dc4,31508183,0,0x0,8
tick,0x7ff999646dc4,31522426,0,0x0,8
tick,0x7ff999646dc4,31539440,0,0x0,8
tick,0x7ff999646dc4,31555849,0,0x0,8
tick,0x7ff999646dc4,31569580,0,0x0,8
tick,0x7ff999646dc4,31583773,0,0x0,8
tick,0x7ff999646dc4,31600061,0,0x0,8
tick,0x7ff999646dc4,31615625,0,0x0,8
tick,0x7ff999646dc4,31632028,0,0x0,8
tick,0x7ff999646dc4,31645213,0,0x0,8
tick,0x7ff999646dc4,31660351,0,0x0,8
tick,0x7ff999646dc4,31675512,0,0x0,8
tick,0x7ff999646dc4,31691264,0,0x0,8
tick,0x7ff999646dc4,31706924,0,0x0,8
tick,0x7ff999646dc4,31723079,0,0x0,8
tick,0x7ff999646dc4,31739515,0,0x0,8
tick,0x7ff999646dc4,31754064,0,0x0,8
tick,0x7ff999646dc4,31768022,0,0x0,8
tick,0x7ff999646dc4,31783013,0,0x0,8
tick,0x7ff999646dc4,31798446,0,0x0,8
tick,0x7ff999646dc4,31813877,0,0x0,8
tick,0x7ff999646dc4,31829464,0,0x0,8
tick,0x7ff999646dc4,31844532,0,0x0,8
tick,0x7ff999646dc4,31860281,0,0x0,8
tick,0x7ff999646dc4,31875418,0,0x0,8
tick,0x7ff999646dc4,31890730,0,0x0,8
tick,0x7ff999646dc4,31906031,0,0x0,8
tick,0x7ff999646dc4,31921434,0,0x0,8
tick,0x7ff999646dc4,31937889,0,0x0,8
tick,0x7ff999646dc4,31952239,0,0x0,8
tick,0x7ff999646dc4,31967152,0,0x0,8
tick,0x7ff999646dc4,31982966,0,0x0,8
tick,0x7ff999646dc4,31997958,0,0x0,8
tick,0x7ff999646dc4,32013063,0,0x0,8
tick,0x7ff999646dc4,32028064,0,0x0,8
tick,0x7ff999646dc4,32043962,0,0x0,8
tick,0x7ff999646dc4,32059440,0,0x0,8
tick,0x7ff999646dc4,32074048,0,0x0,8
tick,0x7ff999646dc4,32089899,0,0x0,8
tick,0x7ff999646dc4,32106236,0,0x0,8
tick,0x7ff999646dc4,32120236,0,0x0,8
tick,0x7ff999646dc4,32136211,0,0x0,8
tick,0x7ff999646dc4,32150147,0,0x0,8
tick,0x7ff999646dc4,32165497,0,0x0,8
tick,0x7ff999646dc4,32180500,0,0x0,8
tick,0x7ff999646dc4,32195722,0,0x0,8
tick,0x7ff999646dc4,32211673,0,0x0,8
tick,0x7ff999646dc4,32227728,0,0x0,8
tick,0x7ff999646dc4,32241979,0,0x0,8
tick,0x7ff999646dc4,32258269,0,0x0,8
tick,0x7ff999646dc4,32272789,0,0x0,8
tick,0x7ff999646dc4,32289185,0,0x0,8
tick,0x7ff999646dc4,32304216,0,0x0,8
tick,0x7ff999646dc4,32319060,0,0x0,8
tick,0x7ff999646dc4,32333830,0,0x0,8
tick,0x7ff999646dc4,32349475,0,0x0,8
tick,0x7ff999646dc4,32365449,0,0x0,8
tick,0x7ff999646dc4,32380272,0,0x0,8
tick,0x7ff999646dc4,32395421,0,0x0,8
tick,0x7ff999646dc4,32410882,0,0x0,8
tick,0x7ff999646dc4,32426640,0,0x0,8
tick,0x7ff999646dc4,32441862,0,0x0,8
tick,0x7ff999646dc4,32456571,0,0x0,8
tick,0x7ff999646dc4,32472870,0,0x0,8
tick,0x7ff999646dc4,32487399,0,0x0,8
tick,0x7ff999646dc4,32502840,0,0x0,8
tick,0x7ff999646dc4,32518397,0,0x0,8
tick,0x7ff999646dc4,32533827,0,0x0,8
tick,0x7ff999646dc4,32552092,0,0x0,8
tick,0x7ff999646dc4,32565061,0,0x0,8
tick,0x7ff999646dc4,32584094,0,0x0,8
tick,0x7ff999646dc4,32595392,0,0x0,8
tick,0x7ff999646dc4,32610462,0,0x0,8
tick,0x7ff999646dc4,32625522,0,0x0,8
tick,0x7ff999646dc4,32640978,0,0x0,8
tick,0x7ff999646dc4,32656749,0,0x0,8
tick,0x7ff999646dc4,32671818,0,0x0,8
tick,0x7ff999646dc4,32686545,0,0x0,8
tick,0x7ff999646dc4,32701915,0,0x0,8
tick,0x7ff999646dc4,32718100,0,0x0,8
tick,0x7ff999646dc4,32733053,0,0x0,8
tick,0x7ff999646dc4,32749296,0,0x0,8
tick,0x7ff999646dc4,32763609,0,0x0,8
tick,0x7ff999646dc4,32779430,0,0x0,8
tick,0x7ff999646dc4,32794329,0,0x0,8
tick,0x7ff999646dc4,32809871,0,0x0,8
tick,0x7ff999646dc4,32825285,0,0x0,8
tick,0x7ff999646dc4,32841019,0,0x0,8
tick,0x7ff999646dc4,32856181,0,0x0,8
tick,0x7ff999646dc4,32871639,0,0x0,8
tick,0x7ff999646dc4,32886691,0,0x0,8
tick,0x7ff999646dc4,32902376,0,0x0,8
tick,0x7ff999646dc4,32916725,0,0x0,8
tick,0x7ff999646dc4,32932622,0,0x0,8
tick,0x7ff999646dc4,32947844,0,0x0,8
tick,0x7ff999646dc4,32963420,0,0x0,8
tick,0x7ff999646dc4,32979027,0,0x0,8
tick,0x7ff999646dc4,32993930,0,0x0,8
tick,0x7ff999646dc4,33009610,0,0x0,8
tick,0x7ff999646dc4,33024809,0,0x0,8
tick,0x7ff999646dc4,33041657,0,0x0,8
tick,0x7ff999646dc4,33056407,0,0x0,8
tick,0x7ff999646dc4,33074371,0,0x0,8
tick,0x7ff999646dc4,33085665,0,0x0,8
tick,0x7ff999646dc4,33101402,0,0x0,8
tick,0x7ff999646dc4,33116805,0,0x0,8
tick,0x7ff999646dc4,33131821,0,0x0,8
tick,0x7ff999646dc4,33147074,0,0x0,8
tick,0x7ff999646dc4,33162168,0,0x0,8
tick,0x7ff999646dc4,33177839,0,0x0,8
tick,0x7ff999646dc4,33192978,0,0x0,8
tick,0x7ff999646dc4,33208045,0,0x0,8
tick,0x7ff999646dc4,33225476,0,0x0,8
tick,0x7ff999646dc4,33239841,0,0x0,8
tick,0x7ff999646dc4,33257022,0,0x0,8
tick,0x7ff999646dc4,33269623,0,0x0,8
tick,0x7ff999646dc4,33285694,0,0x0,8
tick,0x7ff999646dc4,33300106,0,0x0,8
tick,0x7ff999646dc4,33315670,0,0x0,8
tick,0x7ff999646dc4,33331724,0,0x0,8
tick,0x7ff999646dc4,33346739,0,0x0,8
tick,0x7ff999646dc4,33361879,0,0x0,8
tick,0x7ff999646dc4,33377201,0,0x0,8
tick,0x7ff999646dc4,33393978,0,0x0,8
tick,0x7ff999646dc4,33408009,0,0x0,8
tick,0x7ff999646dc4,33423298,0,0x0,8
tick,0x7ff999646dc4,33439419,0,0x0,8
tick,0x7ff999646dc4,33453647,0,0x0,8
tick,0x7ff999646dc4,33469036,0,0x0,8
tick,0x7ff999646dc4,33484054,0,0x0,8
tick,0x7ff999646dc4,33499480,0,0x0,8
tick,0x7ff999646dc4,33515030,0,0x0,8
tick,0x7ff999646dc4,33530541,0,0x0,8
tick,0x7ff999646dc4,33546531,0,0x0,8
tick,0x7ff999646dc4,33561143,0,0x0,8
tick,0x7ff999646dc4,33576860,0,0x0,8
tick,0x7ff999646dc4,33593452,0,0x0,8
tick,0x7ff999646dc4,33607971,0,0x0,8
tick,0x7ff999646dc4,33627562,0,0x0,8
tick,0x7ff999646dc4,33640364,0,0x0,8
tick,0x7ff999646dc4,33653459,0,0x0,8
tick,0x7ff999646dc4,33668559,0,0x0,8
tick,0x7ff999646dc4,33683558,0,0x0,8
tick,0x7ff999646dc4,33699087,0,0x0,8
tick,0x7ff999646dc4,33713965,0,0x0,8
tick,0x7ff999646dc4,33728811,0,0x0,8
tick,0x7ff999646dc4,33744598,0,0x0,8
tick,0x7ff999646dc4,33759686,0,0x0,8
tick,0x7ff999646dc4,33774674,0,0x0,8
tick,0x7ff999646dc4,33791150,0,0x0,8
tick,0x7ff999646dc4,33805698,0,0x0,8
tick,0x7ff999646dc4,33822086,0,0x0,8
tick,0x7ff999646dc4,33836560,0,0x0,8
tick,0x7ff999646dc4,33851015,0,0x0,8
tick,0x7ff999646dc4,33867122,0,0x0,8
tick,0x7ff999646dc4,33882308,0,0x0,8
tick,0x7ff999646dc4,33897611,0,0x0,8
tick,0x7ff999646dc4,33912981,0,0x0,8
tick,0x7ff999646dc4,33928945,0,0x0,8
tick,0x7ff999646dc4,33943517,0,0x0,8
tick,0x7ff999646dc4,33959075,0,0x0,8
tick,0x7ff999646dc4,33975687,0,0x0,8
tick,0x7ff999646dc4,33991646,0,0x0,8
tick,0x7ff999646dc4,34005861,0,0x0,8
tick,0x7ff999646dc4,34020487,0,0x0,8
tick,0x7ff999646dc4,34036161,0,0x0,8
tick,0x7ff999646dc4,34051526,0,0x0,8
tick,0x7ff999646dc4,34066617,0,0x0,8
tick,0x7ff999646dc4,34083967,0,0x0,8
tick,0x7ff999646dc4,34097408,0,0x0,8
tick,0x7ff999646dc4,34112740,0,0x0,8
tick,0x7ff999646dc4,34128405,0,0x0,8
tick,0x7ff999646dc4,34143592,0,0x0,8
tick,0x7ff999646dc4,34159356,0,0x0,8
tick,0x7ff999646dc4,34173849,0,0x0,8
tick,0x7ff999646dc4,34190059,0,0x0,8
tick,0x7ff999646dc4,34204496,0,0x0,8
tick,0x7ff999646dc4,34219865,0,0x0,8
tick,0x7ff999646dc4,34235560,0,0x0,8
tick,0x7ff999646dc4,34251057,0,0x0,8
tick,0x7ff999646dc4,34266279,0,0x0,8
tick,0x7ff999646dc4,34281481,0,0x0,8
tick,0x7ff999646dc4,34297384,0,0x0,8
tick,0x7ff999646dc4,34312385,0,0x0,8
tick,0x7ff999646dc4,34327525,0,0x0,8
tick,0x7ff999646dc4,34343101,0,0x0,8
tick,0x7ff999646dc4,34358086,0,0x0,8
tick,0x7ff999646dc4,34373906,0,0x0,8
tick,0x7ff999646dc4,34389080,0,0x0,8
tick,0x7ff999646dc4,34405007,0,0x0,8
tick,0x7ff999646dc4,34419637,0,0x0,8
tick,0x7ff999646dc4,34435224,0,0x0,8
tick,0x7ff999646dc4,34450216,0,0x0,8
tick,0x7ff999646dc4,34465482,0,0x0,8
tick,0x7ff999646dc4,34481038,0,0x0,8
tick,0x7ff999646dc4,34496296,0,0x0,8
tick,0x7ff999646dc4,34511914,0,0x0,8
tick,0x7ff999646dc4,34526342,0,0x0,8
tick,0x7ff999646dc4,34542171,0,0x0,8
tick,0x7ff999646dc4,34556582,0,0x0,8
tick,0x7ff999646dc4,34572149,0,0x0,8
tick,0x7ff999646dc4,34587541,0,0x0,8
tick,0x7ff999646dc4,34602965,0,0x0,8
tick,0x7ff999646dc4,34619586,0,0x0,8
tick,0x7ff999646dc4,34634716,0,0x0,8
tick,0x7ff999646dc4,34649158,0,0x0,8
tick,0x7ff999646dc4,34664909,0,0x0,8
tick,0x7ff999646dc4,34680702,0,0x0,8
tick,0x7ff999646dc4,34695635,0,0x0,8
tick,0x7ff999646dc4,34710665,0,0x0,8
tick,0x7ff999646dc4,34727193,0,0x0,8
tick,0x7ff999646dc4,34741690,0,0x0,8
tick,0x7ff999646dc4,34757006,0,0x0,8
tick,0x7ff999646dc4,34771644,0,0x0,8
tick,0x7ff999646dc4,34787580,0,0x0,8
tick,0x7ff999646dc4,34802088,0,0x0,8
tick,0x7ff999646dc4,34817556,0,0x0,8
tick,0x7ff999646dc4,34833732,0,0x0,8
tick,0x7ff999646dc4,34849064,0,0x0,8
tick,0x7ff999646dc4,34864301,0,0x0,8
tick,0x7ff999646dc4,34879958,0,0x0,8
tick,0x7ff999646dc4,34894835,0,0x0,8
tick,0x7ff999646dc4,34909642,0,0x0,8
tick,0x7ff999646dc4,34924546,0,0x0,8
tick,0x7ff999646dc4,34941700,0,0x0,8
tick,0x7ff999646dc4,34955859,0,0x0,8
tick,0x7ff999646dc4,34970807,0,0x0,8
tick,0x7ff999646dc4,34986726,0,0x0,8
tick,0x7ff999646dc4,35002301,0,0x0,8
tick,0x7ff999646dc4,35017389,0,0x0,8
tick,0x7ff999646dc4,35032227,0,0x0,8
tick,0x7ff999646dc4,35048354,0,0x0,8
tick,0x7ff999646dc4,35063274,0,0x0,8
tick,0x7ff999646dc4,35078707,0,0x0,8
tick,0x7ff999646dc4,35095171,0,0x0,8
tick,0x7ff999646dc4,35109036,0,0x0,8
tick,0x7ff999646dc4,35123611,0,0x0,8
tick,0x7ff999646dc4,35139826,0,0x0,8
tick,0x7ff999646dc4,35157828,0,0x0,8
tick,0x7ff999646dc4,35169638,0,0x0,8
tick,0x7ff999646dc4,35185149,0,0x0,8
tick,0x7ff999646dc4,35201344,0,0x0,8
tick,0x7ff999646dc4,35216448,0,0x0,8
tick,0x7ff999646dc4,35231629,0,0x0,8
tick,0x7ff999646dc4,35248146,0,0x0,8
tick,0x7ff999646dc4,35263621,0,0x0,8
tick,0x7ff999646dc4,35278233,0,0x0,8
tick,0x7ff999646dc4,35292904,0,0x0,8
tick,0x7ff999646dc4,35307711,0,0x0,8
tick,0x7ff999646dc4,35323642,0,0x0,8
tick,0x7ff999646dc4,35338706,0,0x0,8
tick,0x7ff999646dc4,35353888,0,0x0,8
tick,0x7ff999646dc4,35369355,0,0x0,8
tick,0x7ff999646dc4,35384716,0,0x0,8
tick,0x7ff999646dc4,35399964,0,0x0,8
tick,0x7ff999646dc4,35415231,0,0x0,8
tick,0x7ff999646dc4,35431071,0,0x0,8
tick,0x7ff999646dc4,35446281,0,0x0,8
tick,0x7ff999646dc4,35461682,0,0x0,8
tick,0x7ff999646dc4,35478310,0,0x0,8
tick,0x7ff999646dc4,35492760,0,0x0,8
tick,0x7ff999646dc4,35508124,0,0x0,8
tick,0x7ff999646dc4,35523530,0,0x0,8
tick,0x7ff999646dc4,35538788,0,0x0,8
tick,0x7ff999646dc4,35553908,0,0x0,8
tick,0x7ff999646dc4,35569084,0,0x0,8
tick,0x7ff999646dc4,35585222,0,0x0,8
tick,0x7ff999646dc4,35600137,0,0x0,8
tick,0x7ff999646dc4,35614947,0,0x0,8
tick,0x7ff999646dc4,35630236,0,0x0,8
tick,0x7ff999646dc4,35646890,0,0x0,8
tick,0x7ff999646dc4,35660902,0,0x0,8
tick,0x7ff999646dc4,35676649,0,0x0,8
tick,0x7ff999646dc4,35692265,0,0x0,8
tick,0x7ff999646dc4,35707420,0,0x0,8
tick,0x7ff999646dc4,35723739,0,0x0,8
tick,0x7ff999646dc4,35737655,0,0x0,8
tick,0x7ff999646dc4,35753088,0,0x0,8
tick,0x7ff999646dc4,35768085,0,0x0,8
tick,0x7ff999646dc4,35783885,0,0x0,8
tick,0x7ff999646dc4,35799954,0,0x0,8
tick,0x7ff999646dc4,35814211,0,0x0,8
tick,0x7ff999646dc4,35829475,0,0x0,8
tick,0x7ff999646dc4,35844795,0,0x0,8
tick,0x7ff999646dc4,35860289,0,0x0,8
tick,0x7ff999646dc4,35875691,0,0x0,8
tick,0x7ff999646dc4,35891192,0,0x0,8
tick,0x7ff999646dc4,35906820,0,0x0,8
tick,0x7ff999646dc4,35922563,0,0x0,8
tick,0x7ff999646dc4,35937653,0,0x0,8
tick,0x7ff999646dc4,35952405,0,0x0,8
tick,0x7ff999646dc4,35968324,0,0x0,8
tick,0x7ff999646dc4,35983398,0,0x0,8
tick,0x7ff999646dc4,35998405,0,0x0,8
tick,0x7ff999646dc4,36014767,0,0x0,8
tick,0x7ff999646dc4,36029584,0,0x0,8
tick,0x7ff999646dc4,36044981,0,0x0,8
tick,0x7ff999646dc4,36059943,0,0x0,8
tick,0x7ff999646dc4,36075185,0,0x0,8
tick,0x7ff999646dc4,36090841,0,0x0,8
tick,0x7ff999646dc4,36108455,0,0x0,8
tick,0x7ff999646dc4,36122591,0,0x0,8
tick,0x7ff999646dc4,36137183,0,0x0,8
tick,0x7ff999646dc4,36153275,0,0x0,8
tick,0x7ff999646dc4,36168294,0,0x0,8
tick,0x7ff999646dc4,36183178,0,0x0,8
tick,0x7ff999646dc4,36197915,0,0x0,8
tick,0x7ff999646dc4,36213430,0,0x0,8
tick,0x7ff999646dc4,36229245,0,0x0,8
tick,0x7ff999646dc4,36244348,0,0x0,8
tick,0x7ff999646dc4,36259860,0,0x0,8
tick,0x7ff999646dc4,36275149,0,0x0,8
tick,0x7ff999646dc4,36290568,0,0x0,8
tick,0x7ff999646dc4,36305579,0,0x0,8
tick,0x7ff999646dc4,36321060,0,0x0,8
tick,0x7ff999646dc4,36336681,0,0x0,8
tick,0x7ff999646dc4,36351318,0,0x0,8
tick,0x7ff999646dc4,36366521,0,0x0,8
tick,0x7ff999646dc4,36382410,0,0x0,8
tick,0x7ff999646dc4,36397382,0,0x0,8
tick,0x7ff999646dc4,36413088,0,0x0,8
tick,0x7ff999646dc4,36428123,0,0x0,8
tick,0x7ff999646dc4,36444597,0,0x0,8
tick,0x7ff999646dc4,36459216,0,0x0,8
tick,0x7ff999646dc4,36474465,0,0x0,8
tick,0x7ff999646dc4,36489940,0,0x0,8
tick,0x7ff999646dc4,36505401,0,0x0,8
tick,0x7ff999646dc4,36520506,0,0x0,8
tick,0x7ff999646dc4,36535249,0,0x0,8
tick,0x7ff999646dc4,36551804,0,0x0,8
tick,0x7ff999646dc4,36566266,0,0x0,8
tick,0x7ff999646dc4,36580762,0,0x0,8
tick,0x7ff999646dc4,36596199,0,0x0,8
tick,0x7ff999646dc4,36611723,0,0x0,8
tick,0x7ff999646dc4,36627050,0,0x0,8
tick,0x7ff999646dc4,36642396,0,0x0,8
tick,0x7ff999646dc4,36659045,0,0x0,8
tick,0x7ff999646dc4,36673206,0,0x0,8
tick,0x7ff999646dc4,36688000,0,0x0,8
tick,0x7ff999646dc4,36704422,0,0x0,8
tick,0x7ff999646dc4,36718749,0,0x0,8
tick,0x7ff999646dc4,36733985,0,0x0,8
tick,0x7ff999646dc4,36749370,0,0x0,8
tick,0x7ff999646dc4,36766826,0,0x0,8
tick,0x7ff999646dc4,36780537,0,0x0,8
tick,0x7ff999646dc4,36795036,0,0x0,8
tick,0x7ff999646dc4,36810880,0,0x0,8
tick,0x7ff999646dc4,36826019,0,0x0,8
tick,0x7ff999646dc4,36842164,0,0x0,8
tick,0x7ff999646dc4,36856061,0,0x0,8
tick,0x7ff999646dc4,36872516,0,0x0,8
tick,0x7ff999646dc4,36887004,0,0x0,8
tick,0x7ff999646dc4,36902154,0,0x0,8
tick,0x7ff999646dc4,36917600,0,0x0,8
tick,0x7ff999646dc4,36933599,0,0x0,8
tick,0x7ff999646dc4,36948775,0,0x0,8
tick,0x7ff999646dc4,36964362,0,0x0,8
tick,0x7ff999646dc4,36980105,0,0x0,8
tick,0x7ff999646dc4,36995040,0,0x0,8
tick,0x7ff999646dc4,37010118,0,0x0,8
tick,0x7ff999646dc4,37025737,0,0x0,8
tick,0x7ff999646dc4,37040899,0,0x0,8
tick,0x7ff999646dc4,37055899,0,0x0,8
tick,0x7ff999646dc4,37071419,0,0x0,8
tick,0x7ff999646dc4,37087758,0,0x0,8
tick,0x7ff999646dc4,37101967,0,0x0,8
tick,0x7ff999646dc4,37118140,0,0x0,8
tick,0x7ff999646dc4,37132981,0,0x0,8
tick,0x7ff999646dc4,37148561,0,0x0,8
tick,0x7ff999646dc4,37164102,0,0x0,8
tick,0x7ff999646dc4,37178893,0,0x0,8
tick,0x7ff999646dc4,37195272,0,0x0,8
tick,0x7ff999646dc4,37209448,0,0x0,8
tick,0x7ff999646dc4,37224857,0,0x0,8
tick,0x7ff999646dc4,37240440,0,0x0,8
tick,0x7ff999646dc4,37255448,0,0x0,8
tick,0x7ff999646dc4,37271151,0,0x0,8
tick,0x7ff999646dc4,37286112,0,0x0,8
tick,0x7ff999646dc4,37301534,0,0x0,8
tick,0x7ff999646dc4,37316835,0,0x0,8
tick,0x7ff999646dc4,37332393,0,0x0,8
tick,0x7ff999646dc4,37347521,0,0x0,8
tick,0x7ff999646dc4,37362367,0,0x0,8
tick,0x7ff999646dc4,37378125,0,0x0,8
tick,0x7ff999646dc4,37393304,0,0x0,8
tick,0x7ff999646dc4,37409579,0,0x0,8
tick,0x7ff999646dc4,37424066,0,0x0,8
tick,0x7ff999646dc4,37439133,0,0x0,8
tick,0x7ff999646dc4,37454437,0,0x0,8
tick,0x7ff999646dc4,37469992,0,0x0,8
tick,0x7ff999646dc4,37485161,0,0x0,8
tick,0x7ff999646dc4,37500704,0,0x0,8
tick,0x7ff999646dc4,37516744,0,0x0,8
tick,0x7ff999646dc4,37532321,0,0x0,8
tick,0x7ff999646dc4,37547098,0,0x0,8
tick,0x7ff999646dc4,37562219,0,0x0,8
tick,0x7ff999646dc4,37577609,0,0x0,8
tick,0x7ff999646dc4,37592751,0,0x0,8
tick,0x7ff999646dc4,37608273,0,0x0,8
tick,0x7ff999646dc4,37623901,0,0x0,8
tick,0x7ff999646dc4,37639205,0,0x0,8
tick,0x7ff999646dc4,37654938,0,0x0,8
tick,0x7ff999646dc4,37670420,0,0x0,8
tick,0x7ff999646dc4,37685327,0,0x0,8
tick,0x7ff999646dc4,37699765,0,0x0,8
tick,0x7ff999646dc4,37715504,0,0x0,8
tick,0x7ff999646dc4,37731249,0,0x0,8
tick,0x7ff999646dc4,37746242,0,0x0,8
tick,0x7ff999646dc4,37762179,0,0x0,8
tick,0x7ff999646dc4,37778059,0,0x0,8
tick,0x7ff999646dc4,37792613,0,0x0,8
tick,0x7ff999646dc4,37807776,0,0x0,8
tick,0x7ff999646dc4,37823312,0,0x0,8
tick,0x7ff999646dc4,37838607,0,0x0,8
tick,0x7ff999646dc4,37853773,0,0x0,8
tick,0x7ff999646dc4,37869385,0,0x0,8
tick,0x7ff999646dc4,37884898,0,0x0,8
tick,0x7ff999646dc4,37900280,0,0x0,8
tick,0x7ff999646dc4,37915718,0,0x0,8
tick,0x7ff999646dc4,37931256,0,0x0,8
tick,0x7ff999646dc4,37946656,0,0x0,8
tick,0x7ff999646dc4,37961354,0,0x0,8
tick,0x7ff999646dc4,37976433,0,0x0,8
tick,0x7ff999646dc4,37992252,0,0x0,8
tick,0x7ff999646dc4,38007626,0,0x0,8
tick,0x7ff999646dc4,38022696,0,0x0,8
tick,0x7ff999646dc4,38038079,0,0x0,8
tick,0x7ff999646dc4,38053726,0,0x0,8
tick,0x7ff999646dc4,38069065,0,0x0,8
tick,0x7ff999646dc4,38083772,0,0x0,8
tick,0x7ff999646dc4,38099416,0,0x0,8
tick,0x7ff999646dc4,38114931,0,0x0,8
tick,0x7ff999646dc4,38131527,0,0x0,8
tick,0x7ff999646dc4,38145806,0,0x0,8
tick,0x7ff999646dc4,38161714,0,0x0,8
tick,0x7ff999646dc4,38176338,0,0x0,8
tick,0x7ff999646dc4,38191736,0,0x0,8
tick,0x7ff999646dc4,38206784,0,0x0,8
tick,0x7ff999646dc4,38222517,0,0x0,8
tick,0x7ff999646dc4,38237459,0,0x0,8
tick,0x7ff999646dc4,38252944,0,0x0,8
tick,0x7ff999646dc4,38268644,0,0x0,8
tick,0x7ff999646dc4,38285275,0,0x0,8
tick,0x7ff999646dc4,38299792,0,0x0,8
tick,0x7ff999646dc4,38314711,0,0x0,8
tick,0x7ff999646dc4,38329546,0,0x0,8
tick,0x7ff999646dc4,38345200,0,0x0,8
tick,0x7ff999646dc4,38359769,0,0x0,8
tick,0x7ff999646dc4,38375351,0,0x0,8
tick,0x7ff999646dc4,38390853,0,0x0,8
tick,0x7ff999646dc4,38406658,0,0x0,8
tick,0x7ff999646dc4,38421402,0,0x0,8
tick,0x7ff999646dc4,38436761,0,0x0,8
tick,0x7ff999646dc4,38452478,0,0x0,8
tick,0x7ff999646dc4,38467798,0,0x0,8
tick,0x7ff999646dc4,38484259,0,0x0,8
tick,0x7ff999646dc4,38498924,0,0x0,8
tick,0x7ff999646dc4,38514010,0,0x0,8
tick,0x7ff999646dc4,38529998,0,0x0,8
tick,0x7ff999646dc4,38545870,0,0x0,8
tick,0x7ff999646dc4,38559495,0,0x0,8
tick,0x7ff999646dc4,38574727,0,0x0,8
tick,0x7ff999646dc4,38590811,0,0x0,8
tick,0x7ff999646dc4,38605664,0,0x0,8
tick,0x7ff999646dc4,38620939,0,0x0,8
tick,0x7ff999646dc4,38636286,0,0x0,8
tick,0x7ff999646dc4,38651669,0,0x0,8
tick,0x7ff999646dc4,38667698,0,0x0,8
tick,0x7ff999646dc4,38682803,0,0x0,8
tick,0x7ff999646dc4,38698436,0,0x0,8
tick,0x7ff999646dc4,38713489,0,0x0,8
tick,0x7ff999646dc4,38728627,0,0x0,8
tick,0x7ff999646dc4,38744247,0,0x0,8
tick,0x7ff999646dc4,38759594,0,0x0,8
tick,0x7ff999646dc4,38774493,0,0x0,8
tick,0x7ff999646dc4,38790531,0,0x0,8
tick,0x7ff999646dc4,38805625,0,0x0,8
tick,0x7ff999646dc4,38820706,0,0x0,8
tick,0x7ff999646dc4,38836169,0,0x0,8
tick,0x7ff999646dc4,38851177,0,0x0,8
tick,0x7ff999646dc4,38866618,0,0x0,8
tick,0x7ff999646dc4,38882137,0,0x0,8
tick,0x7ff999646dc4,38897531,0,0x0,8
tick,0x7ff999646dc4,38913925,0,0x0,8
tick,0x7ff999646dc4,38928783,0,0x0,8
tick,0x7ff999646dc4,38943745,0,0x0,8
tick,0x7ff999646dc4,38959146,0,0x0,8
tick,0x7ff999646dc4,38974537,0,0x0,8
tick,0x7ff999646dc4,38989824,0,0x0,8
tick,0x7ff999646dc4,39005443,0,0x0,8
tick,0x7ff999646dc4,39021990,0,0x0,8
tick,0x7ff999646dc4,39037464,0,0x0,8
tick,0x7ff999646dc4,39051923,0,0x0,8
tick,0x7ff999646dc4,39066675,0,0x0,8
tick,0x7ff999646dc4,39081980,0,0x0,8
tick,0x7ff999646dc4,39097081,0,0x0,8
tick,0x7ff999646dc4,39112629,0,0x0,8
tick,0x7ff999646dc4,39128296,0,0x0,8
tick,0x7ff999646dc4,39143575,0,0x0,8
tick,0x7ff999646dc4,39158887,0,0x0,8
tick,0x7ff999646dc4,39174239,0,0x0,8
tick,0x7ff999646dc4,39189785,0,0x0,8
tick,0x7ff999646dc4,39204664,0,0x0,8
tick,0x7ff999646dc4,39220227,0,0x0,8
tick,0x7ff999646dc4,39235708,0,0x0,8
tick,0x7ff999646dc4,39251373,0,0x0,8
tick,0x7ff999646dc4,39266463,0,0x0,8
tick,0x7ff999646dc4,39282262,0,0x0,8
tick,0x7ff999646dc4,39297443,0,0x0,8
tick,0x7ff999646dc4,39312203,0,0x0,8
tick,0x7ff999646dc4,39327608,0,0x0,8
tick,0x7ff999646dc4,39343608,0,0x0,8
tick,0x7ff999646dc4,39358705,0,0x0,8
tick,0x7ff999646dc4,39373472,0,0x0,8
tick,0x7ff999646dc4,39388693,0,0x0,8
tick,0x7ff999646dc4,39404450,0,0x0,8
tick,0x7ff999646dc4,39419410,0,0x0,8
tick,0x7ff999646dc4,39434748,0,0x0,8
tick,0x7ff999646dc4,39450522,0,0x0,8
tick,0x7ff999646dc4,39466107,0,0x0,8
tick,0x7ff999646dc4,39480645,0,0x0,8
tick,0x7ff999646dc4,39496050,0,0x0,8
tick,0x7ff999646dc4,39511637,0,0x0,8
tick,0x7ff999646dc4,39527364,0,0x0,8
tick,0x7ff999646dc4,39542918,0,0x0,8
tick,0x7ff999646dc4,39558043,0,0x0,8
tick,0x7ff999646dc4,39573878,0,0x0,8
tick,0x7ff999646dc4,39588788,0,0x0,8
tick,0x7ff999646dc4,39604961,0,0x0,8
tick,0x7ff999646dc4,39619667,0,0x0,8
tick,0x7ff999646dc4,39635100,0,0x0,8
tick,0x7ff999646dc4,39650283,0,0x0,8
tick,0x7ff999646dc4,39665794,0,0x0,8
tick,0x7ff999646dc4,39680408,0,0x0,8
tick,0x7ff999646dc4,39695558,0,0x0,8
tick,0x7ff999646dc4,39710738,0,0x0,8
tick,0x7ff999646dc4,39726191,0,0x0,8
tick,0x7ff999646dc4,39741414,0,0x0,8
tick,0x7ff999646dc4,39757214,0,0x0,8
tick,0x7ff999646dc4,39773505,0,0x0,8
tick,0x7ff999646dc4,39789032,0,0x0,8
tick,0x7ff999646dc4,39803026,0,0x0,8
tick,0x7ff999646dc4,39818658,0,0x0,8
tick,0x7ff999646dc4,39833915,0,0x0,8
tick,0x7ff999646dc4,39848905,0,0x0,8
tick,0x7ff999646dc4,39864099,0,0x0,8
tick,0x7ff999646dc4,39879430,0,0x0,8
tick,0x7ff999646dc4,39895618,0,0x0,8
tick,0x7ff999646dc4,39910647,0,0x0,8
tick,0x7ff999646dc4,39925766,0,0x0,8
tick,0x7ff999646dc4,39941120,0,0x0,8
tick,0x7ff999646dc4,39956629,0,0x0,8
tick,0x7ff999646dc4,39971527,0,0x0,8
tick,0x7ff999646dc4,39987879,0,0x0,8
tick,0x7ff999646dc4,40003055,0,0x0,8
tick,0x7ff999646dc4,40018588,0,0x0,8
tick,0x7ff999646dc4,40034756,0,0x0,8
tick,0x7ff999646dc4,40048912,0,0x0,8
tick,0x7ff999646dc4,40064185,0,0x0,8
tick,0x7ff999646dc4,40078996,0,0x0,8
tick,0x7ff999646dc4,40095246,0,0x0,8
tick,0x7ff999646dc4,40110161,0,0x0,8
tick,0x7ff999646dc4,40125317,0,0x0,8
tick,0x7ff999646dc4,40140912,0,0x0,8
tick,0x7ff999646dc4,40157608,0,0x0,8
tick,0x7ff999646dc4,40171816,0,0x0,8
tick,0x7ff999646dc4,40186494,0,0x0,8
tick,0x7ff999646dc4,40202678,0,0x0,8
tick,0x7ff999646dc4,40218066,0,0x0,8
tick,0x7ff999646dc4,40233311,0,0x0,8
tick,0x7ff999646dc4,40249203,0,0x0,8
tick,0x7ff999646dc4,40264217,0,0x0,8
tick,0x7ff999646dc4,40279613,0,0x0,8
tick,0x7ff999646dc4,40295119,0,0x0,8
tick,0x7ff999646dc4,40310871,0,0x0,8
tick,0x7ff999646dc4,40325821,0,0x0,8
tick,0x7ff999646dc4,40341269,0,0x0,8
tick,0x7ff999646dc4,40356461,0,0x0,8
tick,0x7ff999646dc4,40371879,0,0x0,8
tick,0x7ff999646dc4,40387266,0,0x0,8
tick,0x7ff999646dc4,40403123,0,0x0,8
tick,0x7ff999646dc4,40418647,0,0x0,8
tick,0x7ff999646dc4,40433471,0,0x0,8
tick,0x7ff999646dc4,40448521,0,0x0,8
tick,0x7ff999646dc4,40464133,0,0x0,8
tick,0x7ff999646dc4,40479966,0,0x0,8
tick,0x7ff999646dc4,40494602,0,0x0,8
tick,0x7ff999646dc4,40509591,0,0x0,8
tick,0x7ff999646dc4,40525763,0,0x0,8
tick,0x7ff999646dc4,40541132,0,0x0,8
tick,0x7ff999646dc4,40555955,0,0x0,8
tick,0x7ff999646dc4,40570973,0,0x0,8
tick,0x7ff999646dc4,40586319,0,0x0,8
tick,0x7ff999646dc4,40601575,0,0x0,8
tick,0x7ff999646dc4,40617087,0,0x0,8
tick,0x7ff999646dc4,40632539,0,0x0,8
tick,0x7ff999646dc4,40647851,0,0x0,8
tick,0x7ff999646dc4,40663041,0,0x0,8
tick,0x7ff999646dc4,40678710,0,0x0,8
tick,0x7ff999646dc4,40693930,0,0x0,8
tick,0x7ff999646dc4,40709355,0,0x0,8
tick,0x7ff999646dc4,40724713,0,0x0,8
tick,0x7ff999646dc4,40741015,0,0x0,8
tick,0x7ff999646dc4,40755596,0,0x0,8
tick,0x7ff999646dc4,40771234,0,0x0,8
tick,0x7ff999646dc4,40787519,0,0x0,8
tick,0x7ff999646dc4,40802045,0,0x0,8
tick,0x7ff999646dc4,40817351,0,0x0,8
tick,0x7ff999646dc4,40833109,0,0x0,8
tick,0x7ff999646dc4,40848132,0,0x0,8
tick,0x7ff999646dc4,40863490,0,0x0,8
tick,0x7ff999646dc4,40878254,0,0x0,8
tick,0x7ff999646dc4,40894177,0,0x0,8
tick,0x7ff999646dc4,40908990,0,0x0,8
tick,0x7ff999646dc4,40924422,0,0x0,8
tick,0x7ff999646dc4,40940112,0,0x0,8
tick,0x7ff999646dc4,40956050,0,0x0,8
tick,0x7ff999646dc4,40970459,0,0x0,8
tick,0x7ff999646dc4,40985586,0,0x0,8
tick,0x7ff999646dc4,41001187,0,0x0,8
tick,0x7ff999646dc4,41016310,0,0x0,8
tick,0x7ff999646dc4,41032633,0,0x0,8
tick,0x7ff999646dc4,41047202,0,0x0,8
tick,0x7ff999646dc4,41062975,0,0x0,8
tick,0x7ff999646dc4,41078127,0,0x0,8
tick,0x7ff999646dc4,41092773,0,0x0,8
tick,0x7ff999646dc4,41108385,0,0x0,8
tick,0x7ff999646dc4,41123887,0,0x0,8
tick,0x7ff999646dc4,41139417,0,0x0,8
tick,0x7ff999646dc4,41154909,0,0x0,8
tick,0x7ff999646dc4,41170255,0,0x0,8
tick,0x7ff999646dc4,41184016,0,0x0,8
tick,0x7ff999646dc4,41199315,0,0x0,8
tick,0x7ff999646dc4,41216299,0,0x0,8
tick,0x7ff999646dc4,41230073,0,0x0,8
tick,0x7ff999646dc4,41245794,0,0x0,8
tick,0x7ff999646dc4,41261717,0,0x0,8
tick,0x7ff999646dc4,41276801,0,0x0,8
tick,0x7ff999646dc4,41291574,0,0x0,8
tick,0x7ff999646dc4,41307056,0,0x0,8
tick,0x7ff999646dc4,41322498,0,0x0,8
tick,0x7ff999646dc4,41337444,0,0x0,8
tick,0x7ff999646dc4,41353457,0,0x0,8
tick,0x7ff999646dc4,41367725,0,0x0,8
tick,0x7ff999646dc4,41383503,0,0x0,8
tick,0x7ff999646dc4,41398932,0,0x0,8
tick,0x7ff999646dc4,41413495,0,0x0,8
tick,0x7ff999646dc4,41428869,0,0x0,8
tick,0x7ff999646dc4,41443755,0,0x0,8
tick,0x7ff999646dc4,41458402,0,0x0,8
tick,0x7ff999646dc4,41473510,0,0x0,8
tick,0x7ff999646dc4,41489353,0,0x0,8
tick,0x7ff999646dc4,41504598,0,0x0,8
tick,0x7ff999646dc4,41519947,0,0x0,8
tick,0x7ff999646dc4,41535268,0,0x0,8
tick,0x7ff999646dc4,41550909,0,0x0,8
tick,0x7ff999646dc4,41566052,0,0x0,8
tick,0x7ff999646dc4,41581319,0,0x0,8
tick,0x7ff999646dc4,41597465,0,0x0,8
tick,0x7ff999646dc4,41612457,0,0x0,8
tick,0x7ff999646dc4,41627313,0,0x0,8
tick,0x7ff999646dc4,41642363,0,0x0,8
tick,0x7ff999646dc4,41658141,0,0x0,8
tick,0x7ff999646dc4,41673520,0,0x0,8
tick,0x7ff999646dc4,41688591,0,0x0,8
tick,0x7ff999646dc4,41704156,0,0x0,8
tick,0x7ff999646dc4,41719842,0,0x0,8
tick,0x7ff999646dc4,41734698,0,0x0,8
tick,0x7ff999646dc4,41750670,0,0x0,8
tick,0x7ff999646dc4,41765320,0,0x0,8
tick,0x7ff999646dc4,41781032,0,0x0,8
tick,0x7ff999646dc4,41796326,0,0x0,8
tick,0x7ff999646dc4,41811435,0,0x0,8
tick,0x7ff999646dc4,41826588,0,0x0,8
tick,0x7ff999646dc4,41842102,0,0x0,8
tick,0x7ff999646dc4,41857586,0,0x0,8
tick,0x7ff999646dc4,41873075,0,0x0,8
tick,0x7ff999646dc4,41888252,0,0x0,8
tick,0x7ff999646dc4,41903236,0,0x0,8
tick,0x7ff999646dc4,41919182,0,0x0,8
tick,0x7ff999646dc4,41934335,0,0x0,8
tick,0x7ff999646dc4,41949613,0,0x0,8
tick,0x7ff999646dc4,41964552,0,0x0,8
tick,0x7ff999646dc4,41979778,0,0x0,8
tick,0x7ff999646dc4,41994883,0,0x0,8
tick,0x7ff999646dc4,42010502,0,0x0,8
tick,0x7ff999646dc4,42026468,0,0x0,8
tick,0x7ff999646dc4,42041677,0,0x0,8
tick,0x7ff999646dc4,42056513,0,0x0,8
tick,0x7ff999646dc4,42071770,0,0x0,8
tick,0x7ff999646dc4,42087119,0,0x0,8
tick,0x7ff999646dc4,42102495,0,0x0,8
tick,0x7ff999646dc4,42118298,0,0x0,8
tick,0x7ff999646dc4,42133805,0,0x0,8
tick,0x7ff999646dc4,42148890,0,0x0,8
tick,0x7ff999646dc4,42165046,0,0x0,8
tick,0x7ff999646dc4,42180484,0,0x0,8
tick,0x7ff999646dc4,42194740,0,0x0,8
tick,0x7ff999646dc4,42209897,0,0x0,8
tick,0x7ff999646dc4,42225913,0,0x0,8
tick,0x7ff999646dc4,42241343,0,0x0,8
tick,0x7ff999646dc4,42256402,0,0x0,8
tick,0x7ff999646dc4,42271986,0,0x0,8
tick,0x7ff999646dc4,42287289,0,0x0,8
tick,0x7ff999646dc4,42303313,0,0x0,8
tick,0x7ff999646dc4,42318401,0,0x0,8
tick,0x7ff999646dc4,42334082,0,0x0,8
tick,0x7ff999646dc4,42349785,0,0x0,8
tick,0x7ff999646dc4,42364792,0,0x0,8
tick,0x7ff999646dc4,42379281,0,0x0,8
tick,0x7ff999646dc4,42395017,0,0x0,8
tick,0x7ff999646dc4,42409839,0,0x0,8
tick,0x7ff999646dc4,42425239,0,0x0,8
tick,0x7ff999646dc4,42441122,0,0x0,8
tick,0x7ff999646dc4,42456702,0,0x0,8
tick,0x7ff999646dc4,42471486,0,0x0,8
tick,0x7ff999646dc4,42487115,0,0x0,8
tick,0x7ff999646dc4,42502316,0,0x0,8
tick,0x7ff999646dc4,42517825,0,0x0,8
tick,0x7ff999646dc4,42533500,0,0x0,8
tick,0x7ff999646dc4,42548590,0,0x0,8
tick,0x7ff999646dc4,42565298,0,0x0,8
tick,0x7ff999646dc4,42580004,0,0x0,8
tick,0x7ff999646dc4,42594565,0,0x0,8
tick,0x7ff999646dc4,42610520,0,0x0,8
tick,0x7ff999646dc4,42625884,0,0x0,8
tick,0x7ff999646dc4,42641149,0,0x0,8
tick,0x7ff999646dc4,42656841,0,0x0,8
tick,0x7ff999646dc4,42672723,0,0x0,8
tick,0x7ff999646dc4,42687468,0,0x0,8
tick,0x7ff999646dc4,42702674,0,0x0,8
tick,0x7ff999646dc4,42718527,0,0x0,8
tick,0x7ff999646dc4,42733821,0,0x0,8
tick,0x7ff999646dc4,42748467,0,0x0,8
tick,0x7ff999646dc4,42764274,0,0x0,8
tick,0x7ff999646dc4,42780719,0,0x0,8
tick,0x7ff999646dc4,42795369,0,0x0,8
tick,0x7ff999646dc4,42810335,0,0x0,8
tick,0x7ff999646dc4,42825067,0,0x0,8
tick,0x7ff999646dc4,42840521,0,0x0,8
tick,0x7ff999646dc4,42856875,0,0x0,8
tick,0x7ff999646dc4,42870825,0,0x0,8
tick,0x7ff999646dc4,42887267,0,0x0,8
tick,0x7ff999646dc4,42901767,0,0x0,8
tick,0x7ff999646dc4,42918083,0,0x0,8
tick,0x7ff999646dc4,42932867,0,0x0,8
tick,0x7ff999646dc4,42948519,0,0x0,8
tick,0x7ff999646dc4,42963679,0,0x0,8
tick,0x7ff999646dc4,42979952,0,0x0,8
tick,0x7ff999646dc4,42994655,0,0x0,8
tick,0x7ff999646dc4,43009781,0,0x0,8
tick,0x7ff999646dc4,43025320,0,0x0,8
tick,0x7ff999646dc4,43040056,0,0x0,8
tick,0x7ff999646dc4,43055465,0,0x0,8
tick,0x7ff999646dc4,43070310,0,0x0,8
tick,0x7ff999646dc4,43086817,0,0x0,8
tick,0x7ff999646dc4,43101965,0,0x0,8
tick,0x7ff999646dc4,43116963,0,0x0,8
tick,0x7ff999646dc4,43131733,0,0x0,8
tick,0x7ff999646dc4,43146833,0,0x0,8
tick,0x7ff999646dc4,43162599,0,0x0,8
tick,0x7ff999646dc4,43177643,0,0x0,8
tick,0x7ff999646dc4,43194074,0,0x0,8
tick,0x7ff999646dc4,43209575,0,0x0,8
tick,0x7ff999646dc4,43225166,0,0x0,8
tick,0x7ff999646dc4,43240840,0,0x0,8
tick,0x7ff999646dc4,43255017,0,0x0,8
tick,0x7ff999646dc4,43270434,0,0x0,8
tick,0x7ff999646dc4,43285987,0,0x0,8
tick,0x7ff999646dc4,43300965,0,0x0,8
tick,0x7ff999646dc4,43316828,0,0x0,8
tick,0x7ff999646dc4,43331496,0,0x0,8
tick,0x7ff999646dc4,43347248,0,0x0,8
tick,0x7ff999646dc4,43361671,0,0x0,8
tick,0x7ff999646dc4,43377474,0,0x0,8
tick,0x7ff999646dc4,43392878,0,0x0,8
tick,0x7ff999646dc4,43408094,0,0x0,8
tick,0x7ff999646dc4,43424144,0,0x0,8
tick,0x7ff999646dc4,43438435,0,0x0,8
tick,0x7ff999646dc4,43454226,0,0x0,8
tick,0x7ff999646dc4,43469319,0,0x0,8
tick,0x7ff999646dc4,43484815,0,0x0,8
tick,0x7ff999646dc4,43499803,0,0x0,8
tick,0x7ff999646dc4,43515439,0,0x0,8
tick,0x7ff999646dc4,43531427,0,0x0,8
tick,0x7ff999646dc4,43546960,0,0x0,8
tick,0x7ff999646dc4,43561117,0,0x0,8
tick,0x7ff999646dc4,43576572,0,0x0,8
tick,0x7ff999646dc4,43592147,0,0x0,8
tick,0x7ff999646dc4,43607197,0,0x0,8
tick,0x7ff999646dc4,43622831,0,0x0,8
tick,0x7ff999646dc4,43638577,0,0x0,8
tick,0x7ff999646dc4,43653919,0,0x0,8
tick,0x7ff999646dc4,43669174,0,0x0,8
tick,0x7ff999646dc4,43684236,0,0x0,8
tick,0x7ff999646dc4,43699537,0,0x0,8
tick,0x7ff999646dc4,43715214,0,0x0,8
tick,0x7ff999646dc4,43730390,0,0x0,8
tick,0x7ff999646dc4,43745686,0,0x0,8
tick,0x7ff999646dc4,43760449,0,0x0,8
tick,0x7ff999646dc4,43776021,0,0x0,8
tick,0x7ff999646dc4,43791865,0,0x0,8
tick,0x7ff999646dc4,43807678,0,0x0,8
tick,0x7ff999646dc4,43823589,0,0x0,8
tick,0x7ff999646dc4,43838688,0,0x0,8
tick,0x7ff999646dc4,43854876,0,0x0,8
tick,0x7ff999646dc4,43869857,0,0x0,8
tick,0x7ff999646dc4,43885060,0,0x0,8
tick,0x7ff999646dc4,43900776,0,0x0,8
tick,0x7ff999646dc4,43916058,0,0x0,8
tick,0x7ff999646dc4,43931100,0,0x0,8
tick,0x7ff999646dc4,43947012,0,0x0,8
tick,0x7ff999646dc4,43962966,0,0x0,8
tick,0x7ff999646dc4,43978217,0,0x0,8
tick,0x7ff999646dc4,43993553,0,0x0,8
tick,0x7ff999646dc4,44008777,0,0x0,8
tick,0x7ff999646dc4,44024380,0,0x0,8
tick,0x7ff999646dc4,44038758,0,0x0,8
tick,0x7ff999646dc4,44053959,0,0x0,8
tick,0x7ff999646dc4,44071194,0,0x0,8
tick,0x7ff999646dc4,44085097,0,0x0,8
tick,0x7ff999646dc4,44100338,0,0x0,8
tick,0x7ff999646dc4,44115786,0,0x0,8
tick,0x7ff999646dc4,44131470,0,0x0,8
tick,0x7ff999646dc4,44146895,0,0x0,8
tick,0x7ff999646dc4,44161673,0,0x0,8
tick,0x7ff999646dc4,44177931,0,0x0,8
tick,0x7ff999646dc4,44192776,0,0x0,8
tick,0x7ff999646dc4,44208682,0,0x0,8
tick,0x7ff999646dc4,44222998,0,0x0,8
tick,0x7ff999646dc4,44238644,0,0x0,8
tick,0x7ff999646dc4,44254310,0,0x0,8
tick,0x7ff999646dc4,44269000,0,0x0,8
tick,0x7ff999646dc4,44284666,0,0x0,8
tick,0x7ff999646dc4,44299611,0,0x0,8
tick,0x7ff999646dc4,44315053,0,0x0,8
tick,0x7ff999646dc4,44330481,0,0x0,8
tick,0x7ff999646dc4,44345842,0,0x0,8
tick,0x7ff999646dc4,44361972,0,0x0,8
tick,0x7ff999646dc4,44376884,0,0x0,8
tick,0x7ff999646dc4,44392818,0,0x0,8
tick,0x7ff999646dc4,44407545,0,0x0,8
tick,0x7ff999646dc4,44422868,0,0x0,8
tick,0x7ff999646dc4,44438124,0,0x0,8
tick,0x7ff999646dc4,44453907,0,0x0,8
tick,0x7ff999646dc4,44468689,0,0x0,8
tick,0x7ff999646dc4,44484107,0,0x0,8
tick,0x7ff999646dc4,44499517,0,0x0,8
tick,0x7ff999646dc4,44514247,0,0x0,8
tick,0x7ff999646dc4,44529770,0,0x0,8
tick,0x7ff999646dc4,44545446,0,0x0,8
tick,0x7ff999646dc4,44561046,0,0x0,8
tick,0x7ff999646dc4,44575860,0,0x0,8
tick,0x7ff999646dc4,44591377,0,0x0,8
tick,0x7ff999646dc4,44608268,0,0x0,8
tick,0x7ff999646dc4,44621639,0,0x0,8
tick,0x7ff999646dc4,44637374,0,0x0,8
tick,0x7ff999646dc4,44652115,0,0x0,8
tick,0x7ff999646dc4,44667041,0,0x0,8
tick,0x7ff999646dc4,44682674,0,0x0,8
tick,0x7ff999646dc4,44698603,0,0x0,8
tick,0x7ff999646dc4,44715252,0,0x0,8
tick,0x7ff999646dc4,44729196,0,0x0,8
tick,0x7ff999646dc4,44744577,0,0x0,8
tick,0x7ff999646dc4,44760221,0,0x0,8
tick,0x7ff999646dc4,44775082,0,0x0,8
tick,0x7ff999646dc4,44790936,0,0x0,8
tick,0x7ff999646dc4,44806499,0,0x0,8
tick,0x7ff999646dc4,44821973,0,0x0,8
tick,0x7ff999646dc4,44836472,0,0x0,8
tick,0x7ff999646dc4,44852108,0,0x0,8
tick,0x7ff999646dc4,44866673,0,0x0,8
tick,0x7ff999646dc4,44882125,0,0x0,8
tick,0x7ff999646dc4,44897438,0,0x0,8
tick,0x7ff999646dc4,44913410,0,0x0,8
tick,0x7ff999646dc4,44929394,0,0x0,8
tick,0x7ff999646dc4,44943951,0,0x0,8
tick,0x7ff999646dc4,44959258,0,0x0,8
tick,0x7ff999646dc4,44974158,0,0x0,8
tick,0x7ff999646dc4,44990351,0,0x0,8
tick,0x7ff999646dc4,45005402,0,0x0,8
tick,0x7ff999646dc4,45020036,0,0x0,8
tick,0x7ff999646dc4,45036069,0,0x0,8
tick,0x7ff999646dc4,45051379,0,0x0,8
tick,0x7ff999646dc4,45066108,0,0x0,8
tick,0x7ff999646dc4,45081394,0,0x0,8
tick,0x7ff999646dc4,45096471,0,0x0,8
tick,0x7ff999646dc4,45111784,0,0x0,8
tick,0x7ff999646dc4,45127233,0,0x0,8
tick,0x7ff999646dc4,45143330,0,0x0,8
tick,0x7ff999646dc4,45157639,0,0x0,8
tick,0x7ff999646dc4,45173094,0,0x0,8
tick,0x7ff999646dc4,45188703,0,0x0,8
tick,0x7ff999646dc4,45204156,0,0x0,8
tick,0x7ff999646dc4,45220235,0,0x0,8
tick,0x7ff999646dc4,45234429,0,0x0,8
tick,0x7ff999646dc4,45250955,0,0x0,8
tick,0x7ff999646dc4,45266241,0,0x0,8
tick,0x7ff999646dc4,45280727,0,0x0,8
tick,0x7ff999646dc4,45296538,0,0x0,8
tick,0x7ff999646dc4,45312411,0,0x0,8
tick,0x7ff999646dc4,45326939,0,0x0,8
tick,0x7ff999646dc4,45342166,0,0x0,8
tick,0x7ff999646dc4,45358208,0,0x0,8
tick,0x7ff999646dc4,45373751,0,0x0,8
tick,0x7ff999646dc4,45388333,0,0x0,8
tick,0x7ff999646dc4,45403663,0,0x0,8
tick,0x7ff999646dc4,45419119,0,0x0,8
tick,0x7ff999646dc4,45434486,0,0x0,8
tick,0x7ff999646dc4,45449781,0,0x0,8
tick,0x7ff999646dc4,45466111,0,0x0,8
tick,0x7ff999646dc4,45481303,0,0x0,8
tick,0x7ff999646dc4,45496486,0,0x0,8
tick,0x7ff999646dc4,45511487,0,0x0,8
tick,0x7ff999646dc4,45526968,0,0x0,8
tick,0x7ff999646dc4,45542105,0,0x0,8
tick,0x7ff999646dc4,45557604,0,0x0,8
tick,0x7ff999646dc4,45573301,0,0x0,8
tick,0x7ff999646dc4,45588351,0,0x0,8
tick,0x7ff999646dc4,45603649,0,0x0,8
tick,0x7ff999646dc4,45618539,0,0x0,8
tick,0x7ff999646dc4,45634223,0,0x0,8
tick,0x7ff999646dc4,45649472,0,0x0,8
tick,0x7ff999646dc4,45665072,0,0x0,8
tick,0x7ff999646dc4,45681028,0,0x0,8
tick,0x7ff999646dc4,45695787,0,0x0,8
tick,0x7ff999646dc4,45710752,0,0x0,8
tick,0x7ff999646dc4,45726003,0,0x0,8
tick,0x7ff999646dc4,45741548,0,0x0,8
tick,0x7ff999646dc4,45756446,0,0x0,8
tick,0x7ff999646dc4,45772539,0,0x0,8
tick,0x7ff999646dc4,45788215,0,0x0,8
tick,0x7ff999646dc4,45803150,0,0x0,8
tick,0x7ff999646dc4,45818558,0,0x0,8
tick,0x7ff999646dc4,45833710,0,0x0,8
tick,0x7ff999646dc4,45848807,0,0x0,8
tick,0x7ff999646dc4,45864936,0,0x0,8
tick,0x7ff999646dc4,45879199,0,0x0,8
tick,0x7ff999646dc4,45895447,0,0x0,8
tick,0x7ff999646dc4,45909895,0,0x0,8
tick,0x7ff999646dc4,45926458,0,0x0,8
tick,0x7ff999646dc4,45940244,0,0x0,8
tick,0x7ff999646dc4,45956088,0,0x0,8
tick,0x7ff999646dc4,45971346,0,0x0,8
tick,0x7ff999646dc4,45986488,0,0x0,8
tick,0x7ff999646dc4,46002810,0,0x0,8
tick,0x7ff999646dc4,46017293,0,0x0,8
tick,0x7ff999646dc4,46032594,0,0x0,8
tick,0x7ff999646dc4,46049128,0,0x0,8
tick,0x7ff999646dc4,46063567,0,0x0,8
tick,0x7ff999646dc4,46078961,0,0x0,8
tick,0x7ff999646dc4,46095074,0,0x0,8
tick,0x7ff999646dc4,46111198,0,0x0,8
tick,0x7ff999646dc4,46124897,0,0x0,8
tick,0x7ff999646dc4,46140541,0,0x0,8
tick,0x7ff999646dc4,46155559,0,0x0,8
tick,0x7ff999646dc4,46171957,0,0x0,8
tick,0x7ff999646dc4,46185186,0,0x0,8
tick,0x7ff999646dc4,46200531,0,0x0,8
tick,0x7ff999646dc4,46217045,0,0x0,8
tick,0x7ff999646dc4,46232937,0,0x0,8
tick,0x7ff999646dc4,46246434,0,0x0,8
tick,0x7ff999646dc4,46261605,0,0x0,8
tick,0x7ff999646dc4,46277834,0,0x0,8
tick,0x7ff999646dc4,46291955,0,0x0,8
tick,0x7ff999646dc4,46307334,0,0x0,8
tick,0x7ff999646dc4,46323387,0,0x0,8
tick,0x7ff999646dc4,46337967,0,0x0,8
tick,0x7ff999646dc4,46353478,0,0x0,8
tick,0x7ff999646dc4,46368979,0,0x0,8
tick,0x7ff999646dc4,46384192,0,0x0,8
tick,0x7ff999646dc4,46399211,0,0x0,8
tick,0x7ff999646dc4,46414756,0,0x0,8
tick,0x7ff999646dc4,46430982,0,0x0,8
tick,0x7ff999646dc4,46445545,0,0x0,8
tick,0x7ff999646dc4,46460659,0,0x0,8
tick,0x7ff999646dc4,46476286,0,0x0,8
tick,0x7ff999646dc4,46491856,0,0x0,8
tick,0x7ff999646dc4,46507024,0,0x0,8
tick,0x7ff999646dc4,46522084,0,0x0,8
tick,0x7ff999646dc4,46538489,0,0x0,8
tick,0x7ff999646dc4,46553038,0,0x0,8
tick,0x7ff999646dc4,46568145,0,0x0,8
tick,0x7ff999646dc4,46583778,0,0x0,8
tick,0x7ff999646dc4,46599195,0,0x0,8
tick,0x7ff999646dc4,46614426,0,0x0,8
tick,0x7ff999646dc4,46630375,0,0x0,8
tick,0x7ff999646dc4,46646668,0,0x0,8
tick,0x7ff999646dc4,46661283,0,0x0,8
tick,0x7ff999646dc4,46676262,0,0x0,8
tick,0x7ff999646dc4,46691751,0,0x0,8
tick,0x7ff999646dc4,46706941,0,0x0,8
tick,0x7ff999646dc4,46722321,0,0x0,8
tick,0x7ff999646dc4,46737458,0,0x0,8
tick,0x7ff999646dc4,46753495,0,0x0,8
tick,0x7ff999646dc4,46768295,0,0x0,8
tick,0x7ff999646dc4,46784342,0,0x0,8
tick,0x7ff999646dc4,46798811,0,0x0,8
tick,0x7ff999646dc4,46815091,0,0x0,8
tick,0x7ff999646dc4,46829733,0,0x0,8
tick,0x7ff999646dc4,46845758,0,0x0,8
tick,0x7ff999646dc4,46861307,0,0x0,8
tick,0x7ff999646dc4,46875665,0,0x0,8
tick,0x7ff999646dc4,46890238,0,0x0,8
tick,0x7ff999646dc4,46905856,0,0x0,8
tick,0x7ff999646dc4,46921152,0,0x0,8
tick,0x7ff999646dc4,46936989,0,0x0,8
tick,0x7ff999646dc4,46952152,0,0x0,8
tick,0x7ff999646dc4,46968400,0,0x0,8
tick,0x7ff999646dc4,46982772,0,0x0,8
tick,0x7ff999646dc4,46997951,0,0x0,8
tick,0x7ff999646dc4,47013387,0,0x0,8
tick,0x7ff999646dc4,47028790,0,0x0,8
tick,0x7ff999646dc4,47043585,0,0x0,8
tick,0x7ff999646dc4,47058888,0,0x0,8
tick,0x7ff999646dc4,47075836,0,0x0,8
tick,0x7ff999646dc4,47090310,0,0x0,8
tick,0x7ff999646dc4,47105751,0,0x0,8
tick,0x7ff999646dc4,47120694,0,0x0,8
tick,0x7ff999646dc4,47135903,0,0x0,8
tick,0x7ff999646dc4,47151516,0,0x0,8
tick,0x7ff999646dc4,47166452,0,0x0,8
tick,0x7ff999646dc4,47183297,0,0x0,8
tick,0x7ff999646dc4,47197486,0,0x0,8
tick,0x7ff999646dc4,47212453,0,0x0,8
tick,0x7ff999646dc4,47227828,0,0x0,8
tick,0x7ff999646dc4,47244686,0,0x0,8
tick,0x7ff999646dc4,47258883,0,0x0,8
tick,0x7ff999646dc4,47274284,0,0x0,8
tick,0x7ff999646dc4,47290474,0,0x0,8
tick,0x7ff999646dc4,47304979,0,0x0,8
tick,0x7ff999646dc4,47319540,0,0x0,8
tick,0x7ff999646dc4,47335900,0,0x0,8
tick,0x7ff999646dc4,47350288,0,0x0,8
tick,0x7ff999646dc4,47365715,0,0x0,8
tick,0x7ff999646dc4,47381329,0,0x0,8
tick,0x7ff999646dc4,47397906,0,0x0,8
tick,0x7ff999646dc4,47412031,0,0x0,8
tick,0x7ff999646dc4,47427127,0,0x0,8
tick,0x7ff999646dc4,47442765,0,0x0,8
tick,0x7ff999646dc4,47458365,0,0x0,8
tick,0x7ff999646dc4,47474307,0,0x0,8
tick,0x7ff999646dc4,47489089,0,0x0,8
tick,0x7ff999646dc4,47505489,0,0x0,8
tick,0x7ff999646dc4,47520479,0,0x0,8
tick,0x7ff999646dc4,47535126,0,0x0,8
tick,0x7ff999646dc4,47550436,0,0x0,8
tick,0x7ff999646dc4,47565688,0,0x0,8
tick,0x7ff999646dc4,47581052,0,0x0,8
tick,0x7ff999646dc4,47595991,0,0x0,8
tick,0x7ff999646dc4,47611926,0,0x0,8
tick,0x7ff999646dc4,47627080,0,0x0,8
tick,0x7ff999646dc4,47642427,0,0x0,8
tick,0x7ff999646dc4,47657433,0,0x0,8
tick,0x7ff999646dc4,47672644,0,0x0,8
tick,0x7ff999646dc4,47687864,0,0x0,8
tick,0x7ff999646dc4,47703659,0,0x0,8
tick,0x7ff999646dc4,47719088,0,0x0,8
tick,0x7ff999646dc4,47734259,0,0x0,8
tick,0x7ff999646dc4,47749358,0,0x0,8
tick,0x7ff999646dc4,47764841,0,0x0,8
tick,0x7ff999646dc4,47780519,0,0x0,8
tick,0x7ff999646dc4,47795513,0,0x0,8
tick,0x7ff999646dc4,47810811,0,0x0,8
tick,0x7ff999646dc4,47826192,0,0x0,8
tick,0x7ff999646dc4,47841508,0,0x0,8
tick,0x7ff999646dc4,47857076,0,0x0,8
tick,0x7ff999646dc4,47872779,0,0x0,8
tick,0x7ff999646dc4,47888442,0,0x0,8
tick,0x7ff999646dc4,47903653,0,0x0,8
tick,0x7ff999646dc4,47918853,0,0x0,8
tick,0x7ff999646dc4,47934316,0,0x0,8
tick,0x7ff999646dc4,47950007,0,0x0,8
tick,0x7ff999646dc4,47965311,0,0x0,8
tick,0x7ff999646dc4,47980631,0,0x0,8
tick,0x7ff999646dc4,47996440,0,0x0,8
tick,0x7ff999646dc4,48011889,0,0x0,8
tick,0x7ff999646dc4,48026977,0,0x0,8
tick,0x7ff999646dc4,48042669,0,0x0,8
tick,0x7ff999646dc4,48057415,0,0x0,8
tick,0x7ff999646dc4,48073022,0,0x0,8
tick,0x7ff999646dc4,48088335,0,0x0,8
tick,0x7ff999646dc4,48104031,0,0x0,8
tick,0x7ff999646dc4,48119330,0,0x0,8
tick,0x7ff999646dc4,48134564,0,0x0,8
tick,0x7ff999646dc4,48149621,0,0x0,8
tick,0x7ff999646dc4,48165076,0,0x0,8
tick,0x7ff999646dc4,48180813,0,0x0,8
tick,0x7ff999646dc4,48195468,0,0x0,8
tick,0x7ff999646dc4,48210699,0,0x0,8
tick,0x7ff999646dc4,48226169,0,0x0,8
tick,0x7ff999646dc4,48241583,0,0x0,8
tick,0x7ff999646dc4,48257168,0,0x0,8
tick,0x7ff999646dc4,48272375,0,0x0,8
tick,0x7ff999646dc4,48288124,0,0x0,8
tick,0x7ff999646dc4,48303432,0,0x0,8
tick,0x7ff999646dc4,48318623,0,0x0,8
tick,0x7ff999646dc4,48333975,0,0x0,8
tick,0x7ff999646dc4,48349513,0,0x0,8
tick,0x7ff999646dc4,48365452,0,0x0,8
tick,0x7ff999646dc4,48380379,0,0x0,8
tick,0x7ff999646dc4,48395820,0,0x0,8
tick,0x7ff999646dc4,48411641,0,0x0,8
tick,0x7ff999646dc4,48426684,0,0x0,8
tick,0x7ff999646dc4,48441683,0,0x0,8
tick,0x7ff999646dc4,48457091,0,0x0,8
tick,0x7ff999646dc4,48472535,0,0x0,8
tick,0x7ff999646dc4,48487717,0,0x0,8
tick,0x7ff999646dc4,48503243,0,0x0,8
tick,0x7ff999646dc4,48518276,0,0x0,8
tick,0x7ff999646dc4,48533651,0,0x0,8
tick,0x7ff999646dc4,48548880,0,0x0,8
tick,0x7ff999646dc4,48564226,0,0x0,8
tick,0x7ff999646dc4,48579710,0,0x0,8
tick,0x7ff999646dc4,48595043,0,0x0,8
tick,0x7ff999646dc4,48609363,0,0x0,8
tick,0x7ff999646dc4,48625027,0,0x0,8
tick,0x7ff999646dc4,48640752,0,0x0,8
tick,0x7ff999646dc4,48655896,0,0x0,8
tick,0x7ff999646dc4,48671157,0,0x0,8
tick,0x7ff999646dc4,48686935,0,0x0,8
tick,0x7ff999646dc4,48702339,0,0x0,8
tick,0x7ff999646dc4,48717201,0,0x0,8
tick,0x7ff999646dc4,48732419,0,0x0,8
tick,0x7ff999646dc4,48747966,0,0x0,8
tick,0x7ff999646dc4,48763450,0,0x0,8
tick,0x7ff999646dc4,48778810,0,0x0,8
tick,0x7ff999646dc4,48794352,0,0x0,8
tick,0x7ff999646dc4,48809590,0,0x0,8
tick,0x7ff999646dc4,48824893,0,0x0,8
tick,0x7ff999646dc4,48840011,0,0x0,8
tick,0x7ff999646dc4,48855731,0,0x0,8
tick,0x7ff999646dc4,48870492,0,0x0,8
tick,0x7ff999646dc4,48885922,0,0x0,8
tick,0x7ff999646dc4,48901016,0,0x0,8
tick,0x7ff999646dc4,48916457,0,0x0,8
tick,0x7ff999646dc4,48931805,0,0x0,8
tick,0x7ff999646dc4,48947214,0,0x0,8
tick,0x7ff999646dc4,48962807,0,0x0,8
tick,0x7ff999646dc4,48978002,0,0x0,8
tick,0x7ff999646dc4,48993223,0,0x0,8
tick,0x7ff999646dc4,49008715,0,0x0,8
tick,0x7ff999646dc4,49024427,0,0x0,8
tick,0x7ff999646dc4,49039696,0,0x0,8
tick,0x7ff999646dc4,49055333,0,0x0,8
tick,0x7ff999646dc4,49070283,0,0x0,8
tick,0x7ff999646dc4,49086137,0,0x0,8
tick,0x7ff999646dc4,49100861,0,0x0,8
tick,0x7ff999646dc4,49116090,0,0x0,8
tick,0x7ff999646dc4,49131673,0,0x0,8
tick,0x7ff999646dc4,49146506,0,0x0,8
tick,0x7ff999646dc4,49161919,0,0x0,8
tick,0x7ff999646dc4,49177087,0,0x0,8
tick,0x7ff999646dc4,49192598,0,0x0,8
tick,0x7ff999646dc4,49207828,0,0x0,8
tick,0x7ff999646dc4,49223333,0,0x0,8
tick,0x7ff999646dc4,49238978,0,0x0,8
tick,0x7ff999646dc4,49254115,0,0x0,8
tick,0x7ff999646dc4,49269683,0,0x0,8
tick,0x7ff999646dc4,49285077,0,0x0,8
tick,0x7ff999646dc4,49300151,0,0x0,8
tick,0x7ff999646dc4,49315470,0,0x0,8
tick,0x7ff999646dc4,49331130,0,0x0,8
tick,0x7ff999646dc4,49346550,0,0x0,8
tick,0x7ff999646dc4,49361870,0,0x0,8
tick,0x7ff999646dc4,49377039,0,0x0,8
tick,0x7ff999646dc4,49392482,0,0x0,8
tick,0x7ff999646dc4,49407718,0,0x0,8
tick,0x7ff999646dc4,49423770,0,0x0,8
tick,0x7ff999646dc4,49438756,0,0x0,8
tick,0x7ff999646dc4,49454143,0,0x0,8
tick,0x7ff999646dc4,49469724,0,0x0,8
tick,0x7ff999646dc4,49485091,0,0x0,8
tick,0x7ff999646dc4,49500558,0,0x0,8
tick,0x7ff999646dc4,49515829,0,0x0,8
tick,0x7ff999646dc4,49531327,0,0x0,8
tick,0x7ff999646dc4,49546646,0,0x0,8
tick,0x7ff999646dc4,49562136,0,0x0,8
tick,0x7ff999646dc4,49577242,0,0x0,8
tick,0x7ff999646dc4,49592722,0,0x0,8
tick,0x7ff999646dc4,49608828,0,0x0,8
tick,0x7ff999646dc4,49623738,0,0x0,8
tick,0x7ff999646dc4,49638950,0,0x0,8
tick,0x7ff999646dc4,49654448,0,0x0,8
tick,0x7ff999646dc4,49670465,0,0x0,8
tick,0x7ff999646dc4,49685021,0,0x0,8
tick,0x7ff999646dc4,49700387,0,0x0,8
tick,0x7ff999646dc4,49715382,0,0x0,8
tick,0x7ff999646dc4,49730724,0,0x0,8
tick,0x7ff999646dc4,49746734,0,0x0,8
tick,0x7ff999646dc4,49761722,0,0x0,8
tick,0x7ff999646dc4,49776528,0,0x0,8
tick,0x7ff999646dc4,49791879,0,0x0,8
tick,0x7ff999646dc4,49807648,0,0x0,8
tick,0x7ff999646dc4,49822696,0,0x0,8
tick,0x7ff999646dc4,49838089,0,0x0,8
tick,0x7ff999646dc4,49853609,0,0x0,8
tick,0x7ff999646dc4,49869380,0,0x0,8
tick,0x7ff999646dc4,49884135,0,0x0,8
tick,0x7ff999646dc4,49899586,0,0x0,8
tick,0x7ff999646dc4,49915153,0,0x0,8
tick,0x7ff999646dc4,49930414,0,0x0,8
tick,0x7ff999646dc4,49945792,0,0x0,8
tick,0x7ff999646dc4,49960928,0,0x0,8
tick,0x7ff999646dc4,49976153,0,0x0,8
tick,0x7ff999646dc4,49991516,0,0x0,8
tick,0x7ff999646dc4,50007062,0,0x0,8
tick,0x7ff999646dc4,50022202,0,0x0,8
tick,0x7ff999646dc4,50037077,0,0x0,8
tick,0x7ff999646dc4,50052794,0,0x0,8
tick,0x7ff999646dc4,50068425,0,0x0,8
tick,0x7ff999646dc4,50083867,0,0x0,8
tick,0x7ff999646dc4,50099034,0,0x0,8
tick,0x7ff999646dc4,50114674,0,0x0,8
tick,0x7ff999646dc4,50130266,0,0x0,8
tick,0x7ff999646dc4,50145655,0,0x0,8
tick,0x7ff999646dc4,50160681,0,0x0,8
tick,0x7ff999646dc4,50176101,0,0x0,8
tick,0x7ff999646dc4,50191489,0,0x0,8
tick,0x7ff999646dc4,50206747,0,0x0,8
tick,0x7ff999646dc4,50222303,0,0x0,8
tick,0x7ff999646dc4,50237759,0,0x0,8
tick,0x7ff999646dc4,50253044,0,0x0,8
tick,0x7ff999646dc4,50268809,0,0x0,8
tick,0x7ff999646dc4,50283563,0,0x0,8
tick,0x7ff999646dc4,50299665,0,0x0,8
tick,0x7ff999646dc4,50314658,0,0x0,8
tick,0x7ff999646dc4,50329652,0,0x0,8
tick,0x7ff999646dc4,50344988,0,0x0,8
tick,0x7ff999646dc4,50360539,0,0x0,8
tick,0x7ff999646dc4,50375330,0,0x0,8
tick,0x7ff999646dc4,50390624,0,0x0,8
tick,0x7ff999646dc4,50405395,0,0x0,8
tick,0x7ff999646dc4,50420601,0,0x0,8
tick,0x7ff999646dc4,50436454,0,0x0,8
tick,0x7ff999646dc4,50451639,0,0x0,8
tick,0x7ff999646dc4,50466963,0,0x0,8
tick,0x7ff999646dc4,50482598,0,0x0,8
tick,0x7ff999646dc4,50498310,0,0x0,8
tick,0x7ff999646dc4,50513837,0,0x0,8
tick,0x7ff999646dc4,50529323,0,0x0,8
tick,0x7ff999646dc4,50544774,0,0x0,8
tick,0x7ff999646dc4,50559949,0,0x0,8
tick,0x7ff999646dc4,50575466,0,0x0,8
tick,0x7ff999646dc4,50590639,0,0x0,8
tick,0x7ff999646dc4,50605958,0,0x0,8
tick,0x7ff999646dc4,50621298,0,0x0,8
tick,0x7ff999646dc4,50635961,0,0x0,8
tick,0x7ff999646dc4,50651339,0,0x0,8
tick,0x7ff999646dc4,50666620,0,0x0,8
tick,0x7ff999646dc4,50681966,0,0x0,8
tick,0x7ff999646dc4,50697456,0,0x0,8
tick,0x7ff999646dc4,50712809,0,0x0,8
tick,0x7ff999646dc4,50728240,0,0x0,8
tick,0x7ff999646dc4,50743688,0,0x0,8
tick,0x7ff999646dc4,50759062,0,0x0,8
tick,0x7ff999646dc4,50774570,0,0x0,8
tick,0x7ff999646dc4,50789824,0,0x0,8
tick,0x7ff999646dc4,50805104,0,0x0,8
tick,0x7ff999646dc4,50820477,0,0x0,8
tick,0x7ff999646dc4,50835765,0,0x0,8
tick,0x7ff999646dc4,50851186,0,0x0,8
tick,0x7ff999646dc4,50866478,0,0x0,8
tick,0x7ff999646dc4,50881614,0,0x0,8
tick,0x7ff999646dc4,50896797,0,0x0,8
tick,0x7ff999646dc4,50912032,0,0x0,8
tick,0x7ff999646dc4,50927666,0,0x0,8
tick,0x7ff999646dc4,50943339,0,0x0,8
tick,0x7ff999646dc4,50958733,0,0x0,8
tick,0x7ff999646dc4,50974174,0,0x0,8
tick,0x7ff999646dc4,50989438,0,0x0,8
tick,0x7ff999646dc4,51005228,0,0x0,8
tick,0x7ff999646dc4,51020553,0,0x0,8
tick,0x7ff999646dc4,51035524,0,0x0,8
tick,0x7ff999646dc4,51050884,0,0x0,8
tick,0x7ff999646dc4,51066068,0,0x0,8
tick,0x7ff999646dc4,51081209,0,0x0,8
tick,0x7ff999646dc4,51095869,0,0x0,8
tick,0x7ff999646dc4,51111037,0,0x0,8
tick,0x7ff999646dc4,51126263,0,0x0,8
tick,0x7ff999646dc4,51141006,0,0x0,8
tick,0x7ff999646dc4,51156743,0,0x0,8
tick,0x7ff999646dc4,51172484,0,0x0,8
tick,0x7ff999646dc4,51187164,0,0x0,8
tick,0x7ff999646dc4,51202460,0,0x0,8
tick,0x7ff999646dc4,51217970,0,0x0,8
tick,0x7ff999646dc4,51233246,0,0x0,8
tick,0x7ff999646dc4,51248882,0,0x0,8
tick,0x7ff999646dc4,51264226,0,0x0,8
tick,0x7ff999646dc4,51279839,0,0x0,8
tick,0x7ff999646dc4,51295145,0,0x0,8
tick,0x7ff999646dc4,51310248,0,0x0,8
tick,0x7ff999646dc4,51325601,0,0x0,8
tick,0x7ff999646dc4,51341292,0,0x0,8
tick,0x7ff999646dc4,51356626,0,0x0,8
tick,0x7ff999646dc4,51372089,0,0x0,8
tick,0x7ff999646dc4,51387713,0,0x0,8
tick,0x7ff999646dc4,51402977,0,0x0,8
tick,0x7ff999646dc4,51418356,0,0x0,8
tick,0x7ff999646dc4,51433708,0,0x0,8
tick,0x7ff999646dc4,51449685,0,0x0,8
tick,0x7ff999646dc4,51464798,0,0x0,8
tick,0x7ff999646dc4,51480071,0,0x0,8
tick,0x7ff999646dc4,51495230,0,0x0,8
tick,0x7ff999646dc4,51510435,0,0x0,8
tick,0x7ff999646dc4,51526028,0,0x0,8
tick,0x7ff999646dc4,51541151,0,0x0,8
tick,0x7ff999646dc4,51556178,0,0x0,8
tick,0x7ff999646dc4,51571562,0,0x0,8
tick,0x7ff999646dc4,51586707,0,0x0,8
tick,0x7ff999646dc4,51602095,0,0x0,8
tick,0x7ff999646dc4,51617235,0,0x0,8
tick,0x7ff999646dc4,51632655,0,0x0,8
tick,0x7ff999646dc4,51647934,0,0x0,8
tick,0x7ff999646dc4,51663175,0,0x0,8
tick,0x7ff999646dc4,51678422,0,0x0,8
tick,0x7ff999646dc4,51693480,0,0x0,8
tick,0x7ff999646dc4,51708627,0,0x0,8
tick,0x7ff999646dc4,51724270,0,0x0,8
tick,0x7ff999646dc4,51739707,0,0x0,8
tick,0x7ff999646dc4,51755078,0,0x0,8
tick,0x7ff999646dc4,51770328,0,0x0,8
tick,0x7ff999646dc4,51785835,0,0x0,8
tick,0x7ff999646dc4,51801310,0,0x0,8
tick,0x7ff999646dc4,51816537,0,0x0,8
tick,0x7ff999646dc4,51831993,0,0x0,8
tick,0x7ff999646dc4,51847126,0,0x0,8
tick,0x7ff999646dc4,51862739,0,0x0,8
tick,0x7ff999646dc4,51878156,0,0x0,8
tick,0x7ff999646dc4,51893887,0,0x0,8
tick,0x7ff999646dc4,51909038,0,0x0,8
tick,0x7ff999646dc4,51924402,0,0x0,8
tick,0x7ff999646dc4,51939253,0,0x0,8
tick,0x7ff999646dc4,51954730,0,0x0,8
tick,0x7ff999646dc4,51970074,0,0x0,8
tick,0x7ff999646dc4,51985497,0,0x0,8
tick,0x7ff999646dc4,52000629,0,0x0,8
tick,0x7ff999646dc4,52015930,0,0x0,8
tick,0x7ff999646dc4,52031208,0,0x0,8
tick,0x7ff999646dc4,52046380,0,0x0,8
tick,0x7ff999646dc4,52061569,0,0x0,8
tick,0x7ff999646dc4,52076833,0,0x0,8
tick,0x7ff999646dc4,52092174,0,0x0,8
tick,0x7ff999646dc4,52107675,0,0x0,8
tick,0x7ff999646dc4,52123268,0,0x0,8
tick,0x7ff999646dc4,52138516,0,0x0,8
tick,0x7ff999646dc4,52153995,0,0x0,8
tick,0x7ff999646dc4,52169942,0,0x0,8
tick,0x7ff999646dc4,52184971,0,0x0,8
tick,0x7ff999646dc4,52199661,0,0x0,8
tick,0x7ff999646dc4,52215107,0,0x0,8
tick,0x7ff999646dc4,52230362,0,0x0,8
tick,0x7ff999646dc4,52245616,0,0x0,8
tick,0x7ff999646dc4,52260758,0,0x0,8
tick,0x7ff999646dc4,52276012,0,0x0,8
tick,0x7ff999646dc4,52291503,0,0x0,8
tick,0x7ff999646dc4,52306753,0,0x0,8
tick,0x7ff999646dc4,52322266,0,0x0,8
tick,0x7ff999646dc4,52337464,0,0x0,8
tick,0x7ff999646dc4,52352906,0,0x0,8
tick,0x7ff999646dc4,52367931,0,0x0,8
tick,0x7ff999646dc4,52383438,0,0x0,8
tick,0x7ff999646dc4,52399080,0,0x0,8
tick,0x7ff999646dc4,52414383,0,0x0,8
tick,0x7ff999646dc4,52429952,0,0x0,8
tick,0x7ff999646dc4,52445535,0,0x0,8
tick,0x7ff999646dc4,52460464,0,0x0,8
tick,0x7ff999646dc4,52475509,0,0x0,8
tick,0x7ff999646dc4,52491200,0,0x0,8
tick,0x7ff999646dc4,52506540,0,0x0,8
tick,0x7ff999646dc4,52521854,0,0x0,8
tick,0x7ff999646dc4,52537417,0,0x0,8
tick,0x7ff999646dc4,52552519,0,0x0,8
tick,0x7ff999646dc4,52568093,0,0x0,8
tick,0x7ff999646dc4,52583274,0,0x0,8
tick,0x7ff999646dc4,52598572,0,0x0,8
tick,0x7ff999646dc4,52613969,0,0x0,8
tick,0x7ff999646dc4,52629222,0,0x0,8
tick,0x7ff999646dc4,52644521,0,0x0,8
tick,0x7ff999646dc4,52659833,0,0x0,8
tick,0x7ff999646dc4,52675621,0,0x0,8
tick,0x7ff999646dc4,52690739,0,0x0,8
tick,0x7ff999646dc4,52706183,0,0x0,8
tick,0x7ff999646dc4,52721699,0,0x0,8
tick,0x7ff999646dc4,52737208,0,0x0,8
tick,0x7ff999646dc4,52752396,0,0x0,8
tick,0x7ff999646dc4,52767872,0,0x0,8
tick,0x7ff999646dc4,52783216,0,0x0,8
tick,0x7ff999646dc4,52798912,0,0x0,8
tick,0x7ff999646dc4,52813685,0,0x0,8
tick,0x7ff999646dc4,52829287,0,0x0,8
tick,0x7ff999646dc4,52844575,0,0x0,8
tick,0x7ff999646dc4,52859949,0,0x0,8
tick,0x7ff999646dc4,52875603,0,0x0,8
tick,0x7ff999646dc4,52890860,0,0x0,8
tick,0x7ff999646dc4,52906217,0,0x0,8
tick,0x7ff999646dc4,52921506,0,0x0,8
tick,0x7ff999646dc4,52937197,0,0x0,8
tick,0x7ff999646dc4,52952278,0,0x0,8
tick,0x7ff999646dc4,52967297,0,0x0,8
tick,0x7ff999646dc4,52982566,0,0x0,8
tick,0x7ff999646dc4,52998138,0,0x0,8
tick,0x7ff999646dc4,53013530,0,0x0,8
tick,0x7ff999646dc4,53029049,0,0x0,8
tick,0x7ff999646dc4,53044306,0,0x0,8
tick,0x7ff999646dc4,53059458,0,0x0,8
tick,0x7ff999646dc4,53074946,0,0x0,8
tick,0x7ff999646dc4,53090334,0,0x0,8
tick,0x7ff999646dc4,53105654,0,0x0,8
tick,0x7ff999646dc4,53120860,0,0x0,8
tick,0x7ff999646dc4,53136181,0,0x0,8
tick,0x7ff999646dc4,53151911,0,0x0,8
tick,0x7ff999646dc4,53166778,0,0x0,8
tick,0x7ff999646dc4,53182539,0,0x0,8
tick,0x7ff999646dc4,53197790,0,0x0,8
tick,0x7ff999646dc4,53213224,0,0x0,8
tick,0x7ff999646dc4,53228477,0,0x0,8
tick,0x7ff999646dc4,53243865,0,0x0,8
tick,0x7ff999646dc4,53259226,0,0x0,8
tick,0x7ff999646dc4,53274820,0,0x0,8
tick,0x7ff999646dc4,53290296,0,0x0,8
tick,0x7ff999646dc4,53305329,0,0x0,8
tick,0x7ff999646dc4,53321110,0,0x0,8
tick,0x7ff999646dc4,53336445,0,0x0,8
tick,0x7ff999646dc4,53351688,0,0x0,8
tick,0x7ff999646dc4,53367309,0,0x0,8
tick,0x7ff999646dc4,53382619,0,0x0,8
tick,0x7ff999646dc4,53398412,0,0x0,8
tick,0x7ff999646dc4,53413262,0,0x0,8
tick,0x7ff999646dc4,53428538,0,0x0,8
tick,0x7ff999646dc4,53443824,0,0x0,8
tick,0x7ff999646dc4,53459452,0,0x0,8
tick,0x7ff999646dc4,53475153,0,0x0,8
tick,0x7ff999646dc4,53489802,0,0x0,8
tick,0x7ff999646dc4,53504984,0,0x0,8
tick,0x7ff999646dc4,53520533,0,0x0,8
tick,0x7ff999646dc4,53535419,0,0x0,8
tick,0x7ff999646dc4,53550902,0,0x0,8
tick,0x7ff999646dc4,53566277,0,0x0,8
tick,0x7ff999646dc4,53581485,0,0x0,8
tick,0x7ff999646dc4,53597068,0,0x0,8
tick,0x7ff999646dc4,53612379,0,0x0,8
tick,0x7ff999646dc4,53627770,0,0x0,8
tick,0x7ff999646dc4,53643236,0,0x0,8
tick,0x7ff999646dc4,53658453,0,0x0,8
tick,0x7ff999646dc4,53673924,0,0x0,8
tick,0x7ff999646dc4,53689036,0,0x0,8
tick,0x7ff999646dc4,53704211,0,0x0,8
tick,0x7ff999646dc4,53719816,0,0x0,8
tick,0x7ff999646dc4,53734981,0,0x0,8
tick,0x7ff999646dc4,53750539,0,0x0,8
tick,0x7ff999646dc4,53765434,0,0x0,8
tick,0x7ff999646dc4,53780763,0,0x0,8
tick,0x7ff999646dc4,53796207,0,0x0,8
tick,0x7ff999646dc4,53811661,0,0x0,8
tick,0x7ff999646dc4,53826735,0,0x0,8
tick,0x7ff999646dc4,53842402,0,0x0,8
tick,0x7ff999646dc4,53857520,0,0x0,8
tick,0x7ff999646dc4,53872866,0,0x0,8
tick,0x7ff999646dc4,53888078,0,0x0,8
tick,0x7ff999646dc4,53903188,0,0x0,8
tick,0x7ff999646dc4,53918832,0,0x0,8
tick,0x7ff999646dc4,53934380,0,0x0,8
tick,0x7ff999646dc4,53950022,0,0x0,8
tick,0x7ff999646dc4,53965384,0,0x0,8
tick,0x7ff999646dc4,53980852,0,0x0,8
tick,0x7ff999646dc4,53995901,0,0x0,8
tick,0x7ff999646dc4,54011364,0,0x0,8
tick,0x7ff999646dc4,54026542,0,0x0,8
tick,0x7ff999646dc4,54042141,0,0x0,8
tick,0x7ff999646dc4,54057150,0,0x0,8
tick,0x7ff999646dc4,54072540,0,0x0,8
tick,0x7ff999646dc4,54087657,0,0x0,8
tick,0x7ff999646dc4,54103542,0,0x0,8
tick,0x7ff999646dc4,54118657,0,0x0,8
tick,0x7ff999646dc4,54133874,0,0x0,8
tick,0x7ff999646dc4,54149324,0,0x0,8
tick,0x7ff999646dc4,54164525,0,0x0,8
tick,0x7ff999646dc4,54180451,0,0x0,8
tick,0x7ff999646dc4,54195978,0,0x0,8
tick,0x7ff999646dc4,54210838,0,0x0,8
tick,0x7ff999646dc4,54226063,0,0x0,8
tick,0x7ff999646dc4,54241567,0,0x0,8
tick,0x7ff999646dc4,54257202,0,0x0,8
tick,0x7ff999646dc4,54272221,0,0x0,8
tick,0x7ff999646dc4,54287332,0,0x0,8
tick,0x7ff999646dc4,54303785,0,0x0,8
tick,0x7ff999646dc4,54318235,0,0x0,8
tick,0x7ff999646dc4,54333429,0,0x0,8
tick,0x7ff999646dc4,54348999,0,0x0,8
tick,0x7ff999646dc4,54364168,0,0x0,8
tick,0x7ff999646dc4,54380265,0,0x0,8
tick,0x7ff999646dc4,54395178,0,0x0,8
tick,0x7ff999646dc4,54409947,0,0x0,8
tick,0x7ff999646dc4,54425359,0,0x0,8
tick,0x7ff999646dc4,54440693,0,0x0,8
tick,0x7ff999646dc4,54456031,0,0x0,8
tick,0x7ff999646dc4,54471363,0,0x0,8
tick,0x7ff999646dc4,54487332,0,0x0,8
tick,0x7ff999646dc4,54501888,0,0x0,8
tick,0x7ff999646dc4,54516848,0,0x0,8
tick,0x7ff999646dc4,54532188,0,0x0,8
tick,0x7ff999646dc4,54547551,0,0x0,8
tick,0x7ff999646dc4,54562760,0,0x0,8
tick,0x7ff999646dc4,54577632,0,0x0,8
tick,0x7ff999646dc4,54592991,0,0x0,8
tick,0x7ff999646dc4,54608753,0,0x0,8
tick,0x7ff999646dc4,54623741,0,0x0,8
tick,0x7ff999646dc4,54638823,0,0x0,8
tick,0x7ff999646dc4,54654125,0,0x0,8
tick,0x7ff999646dc4,54669299,0,0x0,8
tick,0x7ff999646dc4,54684990,0,0x0,8
tick,0x7ff999646dc4,54700741,0,0x0,8
tick,0x7ff999646dc4,54716018,0,0x0,8
tick,0x7ff999646dc4,54731460,0,0x0,8
tick,0x7ff999646dc4,54747098,0,0x0,8
tick,0x7ff999646dc4,54762558,0,0x0,8
tick,0x7ff999646dc4,54777653,0,0x0,8
tick,0x7ff999646dc4,54792680,0,0x0,8
tick,0x7ff999646dc4,54807971,0,0x0,8
tick,0x7ff999646dc4,54823212,0,0x0,8
tick,0x7ff999646dc4,54838675,0,0x0,8
tick,0x7ff999646dc4,54853943,0,0x0,8
tick,0x7ff999646dc4,54869037,0,0x0,8
tick,0x7ff999646dc4,54884212,0,0x0,8
tick,0x7ff999646dc4,54899725,0,0x0,8
tick,0x7ff999646dc4,54915103,0,0x0,8
tick,0x7ff999646dc4,54929814,0,0x0,8
tick,0x7ff999646dc4,54944976,0,0x0,8
tick,0x7ff999646dc4,54960155,0,0x0,8
tick,0x7ff999646dc4,54975096,0,0x0,8
tick,0x7ff999646dc4,54990390,0,0x0,8
tick,0x7ff999646dc4,55006087,0,0x0,8
tick,0x7ff999646dc4,55021281,0,0x0,8
tick,0x7ff999646dc4,55036419,0,0x0,8
tick,0x7ff999646dc4,55051852,0,0x0,8
tick,0x7ff999646dc4,55067073,0,0x0,8
tick,0x7ff999646dc4,55082470,0,0x0,8
tick,0x7ff999646dc4,55097718,0,0x0,8
tick,0x7ff999646dc4,55113026,0,0x0,8
tick,0x7ff999646dc4,55128447,0,0x0,8
tick,0x7ff999646dc4,55143736,0,0x0,8
tick,0x7ff999646dc4,55158798,0,0x0,8
tick,0x7ff999646dc4,55174114,0,0x0,8
tick,0x7ff999646dc4,55189594,0,0x0,8
tick,0x7ff999646dc4,55205121,0,0x0,8
tick,0x7ff999646dc4,55220625,0,0x0,8
tick,0x7ff999646dc4,55235925,0,0x0,8
tick,0x7ff999646dc4,55251203,0,0x0,8
tick,0x7ff999646dc4,55266496,0,0x0,8
tick,0x7ff999646dc4,55282329,0,0x0,8
tick,0x7ff999646dc4,55297582,0,0x0,8
tick,0x7ff999646dc4,55312686,0,0x0,8
tick,0x7ff999646dc4,55328111,0,0x0,8
tick,0x7ff999646dc4,55343681,0,0x0,8
tick,0x7ff999646dc4,55358657,0,0x0,8
tick,0x7ff999646dc4,55373905,0,0x0,8
tick,0x7ff999646dc4,55389257,0,0x0,8
tick,0x7ff999646dc4,55404717,0,0x0,8
tick,0x7ff999646dc4,55420191,0,0x0,8
tick,0x7ff999646dc4,55435689,0,0x0,8
tick,0x7ff999646dc4,55451083,0,0x0,8
tick,0x7ff999646dc4,55466206,0,0x0,8
tick,0x7ff999646dc4,55481420,0,0x0,8
tick,0x7ff999646dc4,55496983,0,0x0,8
tick,0x7ff999646dc4,55511837,0,0x0,8
tick,0x7ff999646dc4,55527330,0,0x0,8
tick,0x7ff999646dc4,55542826,0,0x0,8
tick,0x7ff999646dc4,55558154,0,0x0,8
tick,0x7ff999646dc4,55573565,0,0x0,8
tick,0x7ff999646dc4,55589146,0,0x0,8
tick,0x7ff999646dc4,55604141,0,0x0,8
tick,0x7ff999646dc4,55619626,0,0x0,8
tick,0x7ff999646dc4,55634872,0,0x0,8
tick,0x7ff999646dc4,55650180,0,0x0,8
tick,0x7ff999646dc4,55665465,0,0x0,8
tick,0x7ff999646dc4,55680271,0,0x0,8
tick,0x7ff999646dc4,55695431,0,0x0,8
tick,0x7ff999646dc4,55710815,0,0x0,8
tick,0x7ff999646dc4,55725991,0,0x0,8
tick,0x7ff999646dc4,55741437,0,0x0,8
tick,0x7ff999646dc4,55757107,0,0x0,8
tick,0x7ff999646dc4,55772770,0,0x0,8
tick,0x7ff999646dc4,55788079,0,0x0,8
tick,0x7ff999646dc4,55803564,0,0x0,8
tick,0x7ff999646dc4,55818684,0,0x0,8
tick,0x7ff999646dc4,55834063,0,0x0,8
tick,0x7ff999646dc4,55849244,0,0x0,8
tick,0x7ff999646dc4,55864545,0,0x0,8
tick,0x7ff999646dc4,55879688,0,0x0,8
tick,0x7ff999646dc4,55895547,0,0x0,8
tick,0x7ff999646dc4,55910536,0,0x0,8
tick,0x7ff999646dc4,55925962,0,0x0,8
tick,0x7ff999646dc4,55941099,0,0x0,8
tick,0x7ff999646dc4,55956519,0,0x0,8
tick,0x7ff999646dc4,55971913,0,0x0,8
tick,0x7ff999646dc4,55987297,0,0x0,8
tick,0x7ff999646dc4,56002296,0,0x0,8
tick,0x7ff999646dc4,56017642,0,0x0,8
tick,0x7ff999646dc4,56032823,0,0x0,8
tick,0x7ff999646dc4,56048326,0,0x0,8
tick,0x7ff999646dc4,56063656,0,0x0,8
tick,0x7ff999646dc4,56079063,0,0x0,8
tick,0x7ff999646dc4,56094389,0,0x0,8
tick,0x7ff999646dc4,56109680,0,0x0,8
tick,0x7ff999646dc4,56124945,0,0x0,8
tick,0x7ff999646dc4,56140270,0,0x0,8
tick,0x7ff999646dc4,56155713,0,0x0,8
tick,0x7ff999646dc4,56171337,0,0x0,8
tick,0x7ff999646dc4,56186537,0,0x0,8
tick,0x7ff999646dc4,56201933,0,0x0,8
tick,0x7ff999646dc4,56217392,0,0x0,8
tick,0x7ff999646dc4,56232381,0,0x0,8
tick,0x7ff999646dc4,56247598,0,0x0,8
tick,0x7ff999646dc4,56262910,0,0x0,8
tick,0x7ff999646dc4,56278257,0,0x0,8
tick,0x7ff999646dc4,56293760,0,0x0,8
tick,0x7ff999646dc4,56309381,0,0x0,8
tick,0x7ff999646dc4,56324481,0,0x0,8
tick,0x7ff999646dc4,56339517,0,0x0,8
tick,0x7ff999646dc4,56354867,0,0x0,8
tick,0x7ff999646dc4,56370527,0,0x0,8
tick,0x7ff999646dc4,56385788,0,0x0,8
tick,0x7ff999646dc4,56401117,0,0x0,8
tick,0x7ff999646dc4,56416605,0,0x0,8
tick,0x7ff999646dc4,56432097,0,0x0,8
tick,0x7ff999646dc4,56447500,0,0x0,8
tick,0x7ff999646dc4,56462724,0,0x0,8
tick,0x7ff999646dc4,56478072,0,0x0,8
tick,0x7ff999646dc4,56493478,0,0x0,8
tick,0x7ff999646dc4,56508894,0,0x0,8
tick,0x7ff999646dc4,56524267,0,0x0,8
tick,0x7ff999646dc4,56539562,0,0x0,8
tick,0x7ff999646dc4,56554697,0,0x0,8
tick,0x7ff999646dc4,56569820,0,0x0,8
tick,0x7ff999646dc4,56585501,0,0x0,8
tick,0x7ff999646dc4,56601046,0,0x0,8
tick,0x7ff999646dc4,56616315,0,0x0,8
tick,0x7ff999646dc4,56631933,0,0x0,8
tick,0x7ff999646dc4,56647254,0,0x0,8
tick,0x7ff999646dc4,56662509,0,0x0,8
tick,0x7ff999646dc4,56677929,0,0x0,8
tick,0x7ff999646dc4,56693599,0,0x0,8
tick,0x7ff999646dc4,56708946,0,0x0,8
tick,0x7ff999646dc4,56724368,0,0x0,8
tick,0x7ff999646dc4,56739724,0,0x0,8
tick,0x7ff999646dc4,56755038,0,0x0,8
tick,0x7ff999646dc4,56770630,0,0x0,8
tick,0x7ff999646dc4,56786137,0,0x0,8
tick,0x7ff999646dc4,56801213,0,0x0,8
tick,0x7ff999646dc4,56816641,0,0x0,8
tick,0x7ff999646dc4,56832052,0,0x0,8
tick,0x7ff999646dc4,56847789,0,0x0,8
tick,0x7ff999646dc4,56863385,0,0x0,8
tick,0x7ff999646dc4,56878891,0,0x0,8
tick,0x7ff999646dc4,56893775,0,0x0,8
tick,0x7ff999646dc4,56908667,0,0x0,8
tick,0x7ff999646dc4,56924000,0,0x0,8
tick,0x7ff999646dc4,56939663,0,0x0,8
tick,0x7ff999646dc4,56955093,0,0x0,8
tick,0x7ff999646dc4,56970577,0,0x0,8
tick,0x7ff999646dc4,56985913,0,0x0,8
tick,0x7ff999646dc4,57000984,0,0x0,8
tick,0x7ff999646dc4,57016360,0,0x0,8
tick,0x7ff999646dc4,57031728,0,0x0,8
tick,0x7ff999646dc4,57047314,0,0x0,8
tick,0x7ff999646dc4,57062789,0,0x0,8
tick,0x7ff999646dc4,57078110,0,0x0,8
tick,0x7ff999646dc4,57093476,0,0x0,8
tick,0x7ff999646dc4,57109112,0,0x0,8
tick,0x7ff999646dc4,57124118,0,0x0,8
tick,0x7ff999646dc4,57139326,0,0x0,8
tick,0x7ff999646dc4,57237128,0,0x0,8
tick,0x7ff999646dc4,57237169,0,0x0,8
tick,0x7ff999646dc4,57237183,0,0x0,8
tick,0x7ff999646dc4,57237221,0,0x0,8
tick,0x7ff999646dc4,57237234,0,0x0,8
tick,0x7ff999646dc4,57237248,0,0x0,8
tick,0x7ff999646dc4,57246538,0,0x0,8
tick,0x7ff999646dc4,57261662,0,0x0,8
tick,0x7ff999646dc4,57276730,0,0x0,8
tick,0x7ff999646dc4,57291869,0,0x0,8
tick,0x7ff999646dc4,57307239,0,0x0,8
tick,0x7ff999646dc4,57322760,0,0x0,8
tick,0x7ff999646dc4,57337832,0,0x0,8
tick,0x7ff999646dc4,57353180,0,0x0,8
tick,0x7ff999646dc4,57368671,0,0x0,8
tick,0x7ff999646dc4,57383867,0,0x0,8
tick,0x7ff999646dc4,57399285,0,0x0,8
tick,0x7ff999646dc4,57414720,0,0x0,8
tick,0x7ff999646dc4,57430116,0,0x0,8
tick,0x7ff999646dc4,57445542,0,0x0,8
tick,0x7ff999646dc4,57461219,0,0x0,8
tick,0x7ff999646dc4,57476597,0,0x0,8
tick,0x7ff999646dc4,57492326,0,0x0,8
tick,0x7ff999646dc4,57507556,0,0x0,8
tick,0x7ff999646dc4,57523012,0,0x0,8
tick,0x7ff999646dc4,57538180,0,0x0,8
tick,0x7ff999646dc4,57553293,0,0x0,8
tick,0x7ff999646dc4,57568538,0,0x0,8
tick,0x7ff999646dc4,57584066,0,0x0,8
tick,0x7ff999646dc4,57599422,0,0x0,8
tick,0x7ff999646dc4,57614827,0,0x0,8
tick,0x7ff999646dc4,57630638,0,0x0,8
tick,0x7ff999646dc4,57645860,0,0x0,8
tick,0x7ff999646dc4,57661120,0,0x0,8
tick,0x7ff999646dc4,57676652,0,0x0,8
tick,0x7ff999646dc4,57691927,0,0x0,8
tick,0x7ff999646dc4,57707191,0,0x0,8
tick,0x7ff999646dc4,57722520,0,0x0,8
tick,0x7ff999646dc4,57738050,0,0x0,8
tick,0x7ff999646dc4,57753875,0,0x0,8
tick,0x7ff999646dc4,57769007,0,0x0,8
tick,0x7ff999646dc4,57784077,0,0x0,8
tick,0x7ff999646dc4,57798978,0,0x0,8
tick,0x7ff999646dc4,57814077,0,0x0,8
tick,0x7ff999646dc4,57829513,0,0x0,8
tick,0x7ff999646dc4,57844725,0,0x0,8
tick,0x7ff999646dc4,57860099,0,0x0,8
tick,0x7ff999646dc4,57875075,0,0x0,8
tick,0x7ff999646dc4,57890560,0,0x0,8
tick,0x7ff999646dc4,57905419,0,0x0,8
tick,0x7ff999646dc4,57920740,0,0x0,8
tick,0x7ff999646dc4,57935809,0,0x0,8
tick,0x7ff999646dc4,57951835,0,0x0,8
tick,0x7ff999646dc4,57966870,0,0x0,8
tick,0x7ff999646dc4,57982466,0,0x0,8
tick,0x7ff999646dc4,57998087,0,0x0,8
tick,0x7ff999646dc4,58012548,0,0x0,8
tick,0x7ff999646dc4,58027903,0,0x0,8
tick,0x7ff999646dc4,58043243,0,0x0,8
tick,0x7ff999646dc4,58058690,0,0x0,8
tick,0x7ff999646dc4,58073546,0,0x0,8
tick,0x7ff999646dc4,58088780,0,0x0,8
tick,0x7ff999646dc4,58104065,0,0x0,8
tick,0x7ff999646dc4,58119310,0,0x0,8
tick,0x7ff999646dc4,58134470,0,0x0,8
tick,0x7ff999646dc4,58150373,0,0x0,8
tick,0x7ff999646dc4,58165318,0,0x0,8
tick,0x7ff999646dc4,58180461,0,0x0,8
tick,0x7ff999646dc4,58195710,0,0x0,8
tick,0x7ff999646dc4,58211831,0,0x0,8
tick,0x7ff999646dc4,58226384,0,0x0,8
tick,0x7ff999646dc4,58242048,0,0x0,8
tick,0x7ff999646dc4,58257588,0,0x0,8
tick,0x7ff999646dc4,58272486,0,0x0,8
tick,0x7ff999646dc4,58287778,0,0x0,8
tick,0x7ff999646dc4,58303195,0,0x0,8
tick,0x7ff999646dc4,58318561,0,0x0,8
tick,0x7ff999646dc4,58333486,0,0x0,8
tick,0x7ff999646dc4,58349554,0,0x0,8
tick,0x7ff999646dc4,58364443,0,0x0,8
tick,0x7ff999646dc4,58379745,0,0x0,8
tick,0x7ff999646dc4,58395232,0,0x0,8
tick,0x7ff999646dc4,58410976,0,0x0,8
tick,0x7ff999646dc4,58425982,0,0x0,8
tick,0x7ff999646dc4,58441241,0,0x0,8
tick,0x7ff999646dc4,58456507,0,0x0,8
tick,0x7ff999646dc4,58471889,0,0x0,8
tick,0x7ff999646dc4,58487110,0,0x0,8
tick,0x7ff999646dc4,58502315,0,0x0,8
tick,0x7ff999646dc4,58517702,0,0x0,8
tick,0x7ff999646dc4,58533224,0,0x0,8
tick,0x7ff999646dc4,58548596,0,0x0,8
tick,0x7ff999646dc4,58563416,0,0x0,8
tick,0x7ff999646dc4,58578900,0,0x0,8
tick,0x7ff999646dc4,58594496,0,0x0,8
tick,0x7ff999646dc4,58609798,0,0x0,8
tick,0x7ff999646dc4,58625930,0,0x0,8
tick,0x7ff999646dc4,58640640,0,0x0,8
tick,0x7ff999646dc4,58655924,0,0x0,8
tick,0x7ff999646dc4,58671676,0,0x0,8
tick,0x7ff999646dc4,58686909,0,0x0,8
tick,0x7ff999646dc4,58702179,0,0x0,8
tick,0x7ff999646dc4,58716829,0,0x0,8
tick,0x7ff999646dc4,58732432,0,0x0,8
tick,0x7ff999646dc4,58747602,0,0x0,8
tick,0x7ff999646dc4,58762910,0,0x0,8
tick,0x7ff999646dc4,58778316,0,0x0,8
tick,0x7ff999646dc4,58793769,0,0x0,8
tick,0x7ff999646dc4,58809227,0,0x0,8
tick,0x7ff999646dc4,58824544,0,0x0,8
tick,0x7ff999646dc4,58840137,0,0x0,8
tick,0x7ff999646dc4,58856070,0,0x0,8
tick,0x7ff999646dc4,58870234,0,0x0,8
tick,0x7ff999646dc4,58885760,0,0x0,8
tick,0x7ff999646dc4,58900437,0,0x0,8
tick,0x7ff999646dc4,58915563,0,0x0,8
tick,0x7ff999646dc4,58931390,0,0x0,8
tick,0x7ff999646dc4,58946704,0,0x0,8
tick,0x7ff999646dc4,58961801,0,0x0,8
tick,0x7ff999646dc4,58977135,0,0x0,8
tick,0x7ff999646dc4,58992643,0,0x0,8
tick,0x7ff999646dc4,59007817,0,0x0,8
tick,0x7ff999646dc4,59023057,0,0x0,8
tick,0x7ff999646dc4,59038574,0,0x0,8
tick,0x7ff999646dc4,59053821,0,0x0,8
tick,0x7ff999646dc4,59069380,0,0x0,8
tick,0x7ff999646dc4,59084627,0,0x0,8
tick,0x7ff999646dc4,59099868,0,0x0,8
tick,0x7ff999646dc4,59115372,0,0x0,8
tick,0x7ff999646dc4,59130825,0,0x0,8
tick,0x7ff999646dc4,59146080,0,0x0,8
tick,0x7ff999646dc4,59161860,0,0x0,8
tick,0x7ff999646dc4,59179125,0,0x0,8
tick,0x7ff999646dc4,59192848,0,0x0,8
tick,0x7ff999646dc4,59208189,0,0x0,8
tick,0x7ff999646dc4,59223735,0,0x0,8
tick,0x7ff999646dc4,59239102,0,0x0,8
tick,0x7ff999646dc4,59255064,0,0x0,8
tick,0x7ff999646dc4,59269376,0,0x0,8
tick,0x7ff999646dc4,59284100,0,0x0,8
tick,0x7ff999646dc4,59299625,0,0x0,8
tick,0x7ff999646dc4,59315090,0,0x0,8
tick,0x7ff999646dc4,59330596,0,0x0,8
tick,0x7ff999646dc4,59345536,0,0x0,8
tick,0x7ff999646dc4,59360990,0,0x0,8
tick,0x7ff999646dc4,59376359,0,0x0,8
tick,0x7ff999646dc4,59391678,0,0x0,8
tick,0x7ff999646dc4,59407207,0,0x0,8
tick,0x7ff999646dc4,59422629,0,0x0,8
tick,0x7ff999646dc4,59437616,0,0x0,8
tick,0x7ff999646dc4,59453112,0,0x0,8
tick,0x7ff999646dc4,59468085,0,0x0,8
tick,0x7ff999646dc4,59483723,0,0x0,8
tick,0x7ff999646dc4,59499642,0,0x0,8
tick,0x7ff999646dc4,59515344,0,0x0,8
tick,0x7ff999646dc4,59529443,0,0x0,8
tick,0x7ff999646dc4,59545778,0,0x0,8
tick,0x7ff999646dc4,59560316,0,0x0,8
tick,0x7ff999646dc4,59575364,0,0x0,8
tick,0x7ff999646dc4,59590771,0,0x0,8
tick,0x7ff999646dc4,59607699,0,0x0,8
tick,0x7ff999646dc4,59622077,0,0x0,8
tick,0x7ff999646dc4,59637247,0,0x0,8
tick,0x7ff999646dc4,59653899,0,0x0,8
tick,0x7ff999646dc4,59667543,0,0x0,8
tick,0x7ff999646dc4,59683512,0,0x0,8
tick,0x7ff999646dc4,59698164,0,0x0,8
tick,0x7ff999646dc4,59713570,0,0x0,8
tick,0x7ff999646dc4,59728898,0,0x0,8
tick,0x7ff999646dc4,59744483,0,0x0,8
tick,0x7ff999646dc4,59759826,0,0x0,8
tick,0x7ff999646dc4,59775453,0,0x0,8
tick,0x7ff999646dc4,59791608,0,0x0,8
tick,0x7ff999646dc4,59805953,0,0x0,8
tick,0x7ff999646dc4,59821592,0,0x0,8
tick,0x7ff999646dc4,59836397,0,0x0,8
tick,0x7ff999646dc4,59851957,0,0x0,8
tick,0x7ff999646dc4,59868004,0,0x0,8
tick,0x7ff999646dc4,59882733,0,0x0,8
tick,0x7ff999646dc4,59898317,0,0x0,8
tick,0x7ff999646dc4,59913275,0,0x0,8
tick,0x7ff999646dc4,59928474,0,0x0,8
tick,0x7ff999646dc4,59943966,0,0x0,8
tick,0x7ff999646dc4,59959626,0,0x0,8
tick,0x7ff999646dc4,59974792,0,0x0,8
tick,0x7ff999646dc4,59990878,0,0x0,8
tick,0x7ff999646dc4,60005468,0,0x0,8
tick,0x7ff999646dc4,60021216,0,0x0,8
tick,0x7ff999646dc4,60036380,0,0x0,8
tick,0x7ff999646dc4,60051661,0,0x0,8
tick,0x7ff999646dc4,60067413,0,0x0,8
tick,0x7ff999646dc4,60082166,0,0x0,8
tick,0x7ff999646dc4,60097155,0,0x0,8
tick,0x7ff999646dc4,60113386,0,0x0,8
tick,0x7ff999646dc4,60128330,0,0x0,8
tick,0x7ff999646dc4,60142838,0,0x0,8
tick,0x7ff999646dc4,60158480,0,0x0,8
tick,0x7ff999646dc4,60174860,0,0x0,8
tick,0x7ff999646dc4,60189833,0,0x0,8
tick,0x7ff999646dc4,60205089,0,0x0,8
tick,0x7ff999646dc4,60219992,0,0x0,8
tick,0x7ff999646dc4,60235472,0,0x0,8
tick,0x7ff999646dc4,60251042,0,0x0,8
tick,0x7ff999646dc4,60266333,0,0x0,8
tick,0x7ff999646dc4,60282026,0,0x0,8
tick,0x7ff999646dc4,60297563,0,0x0,8
tick,0x7ff999646dc4,60312526,0,0x0,8
tick,0x7ff999646dc4,60327578,0,0x0,8
tick,0x7ff999646dc4,60342728,0,0x0,8
tick,0x7ff999646dc4,60357962,0,0x0,8
tick,0x7ff999646dc4,60373295,0,0x0,8
tick,0x7ff999646dc4,60389045,0,0x0,8
tick,0x7ff999646dc4,60404312,0,0x0,8
tick,0x7ff999646dc4,60419271,0,0x0,8
tick,0x7ff999646dc4,60434630,0,0x0,8
tick,0x7ff999646dc4,60450035,0,0x0,8
tick,0x7ff999646dc4,60465398,0,0x0,8
tick,0x7ff999646dc4,60480612,0,0x0,8
tick,0x7ff999646dc4,60495859,0,0x0,8
tick,0x7ff999646dc4,60511481,0,0x0,8
tick,0x7ff999646dc4,60527140,0,0x0,8
tick,0x7ff999646dc4,60542790,0,0x0,8
tick,0x7ff999646dc4,60558765,0,0x0,8
tick,0x7ff999646dc4,60573407,0,0x0,8
tick,0x7ff999646dc4,60588996,0,0x0,8
tick,0x7ff999646dc4,60604150,0,0x0,8
tick,0x7ff999646dc4,60619392,0,0x0,8
tick,0x7ff999646dc4,60634577,0,0x0,8
tick,0x7ff999646dc4,60649876,0,0x0,8
tick,0x7ff999646dc4,60665383,0,0x0,8
tick,0x7ff999646dc4,60680326,0,0x0,8
tick,0x7ff999646dc4,60695948,0,0x0,8
tick,0x7ff999646dc4,60710969,0,0x0,8
tick,0x7ff999646dc4,60726425,0,0x0,8
tick,0x7ff999646dc4,60741828,0,0x0,8
tick,0x7ff999646dc4,60757245,0,0x0,8
tick,0x7ff999646dc4,60772482,0,0x0,8
tick,0x7ff999646dc4,60787993,0,0x0,8
tick,0x7ff999646dc4,60803507,0,0x0,8
tick,0x7ff999646dc4,60819112,0,0x0,8
tick,0x7ff999646dc4,60834415,0,0x0,8
tick,0x7ff999646dc4,60850044,0,0x0,8
tick,0x7ff999646dc4,60865064,0,0x0,8
tick,0x7ff999646dc4,60880792,0,0x0,8
tick,0x7ff999646dc4,60896228,0,0x0,8
tick,0x7ff999646dc4,60911761,0,0x0,8
tick,0x7ff999646dc4,60926679,0,0x0,8
tick,0x7ff999646dc4,60942009,0,0x0,8
tick,0x7ff999646dc4,60957386,0,0x0,8
tick,0x7ff999646dc4,60972323,0,0x0,8
tick,0x7ff999646dc4,60987281,0,0x0,8
tick,0x7ff999646dc4,61002587,0,0x0,8
tick,0x7ff999646dc4,61018279,0,0x0,8
tick,0x7ff999646dc4,61033613,0,0x0,8
tick,0x7ff999646dc4,61048839,0,0x0,8
tick,0x7ff999646dc4,61064008,0,0x0,8
tick,0x7ff999646dc4,61079768,0,0x0,8
tick,0x7ff999646dc4,61094478,0,0x0,8
tick,0x7ff999646dc4,61109955,0,0x0,8
tick,0x7ff999646dc4,61125540,0,0x0,8
tick,0x7ff999646dc4,61140161,0,0x0,8
tick,0x7ff999646dc4,61155666,0,0x0,8
tick,0x7ff999646dc4,61170422,0,0x0,8
tick,0x7ff999646dc4,61185271,0,0x0,8
tick,0x7ff999646dc4,61200686,0,0x0,8
tick,0x7ff999646dc4,61216048,0,0x0,8
tick,0x7ff999646dc4,61231233,0,0x0,8
tick,0x7ff999646dc4,61246726,0,0x0,8
tick,0x7ff999646dc4,61262013,0,0x0,8
tick,0x7ff999646dc4,61277580,0,0x0,8
tick,0x7ff999646dc4,61292676,0,0x0,8
tick,0x7ff999646dc4,61308035,0,0x0,8
tick,0x7ff999646dc4,61323336,0,0x0,8
tick,0x7ff999646dc4,61338552,0,0x0,8
tick,0x7ff999646dc4,61353254,0,0x0,8
tick,0x7ff999646dc4,61368480,0,0x0,8
tick,0x7ff999646dc4,61384116,0,0x0,8
tick,0x7ff999646dc4,61399470,0,0x0,8
tick,0x7ff999646dc4,61414696,0,0x0,8
tick,0x7ff999646dc4,61430050,0,0x0,8
tick,0x7ff999646dc4,61445623,0,0x0,8
tick,0x7ff999646dc4,61460974,0,0x0,8
tick,0x7ff999646dc4,61476050,0,0x0,8
tick,0x7ff999646dc4,61491074,0,0x0,8
tick,0x7ff999646dc4,61506862,0,0x0,8
tick,0x7ff999646dc4,61521648,0,0x0,8
tick,0x7ff999646dc4,61537148,0,0x0,8
tick,0x7ff999646dc4,61552238,0,0x0,8
tick,0x7ff999646dc4,61568041,0,0x0,8
tick,0x7ff999646dc4,61583118,0,0x0,8
tick,0x7ff999646dc4,61598347,0,0x0,8
tick,0x7ff999646dc4,61613737,0,0x0,8
tick,0x7ff999646dc4,61629244,0,0x0,8
tick,0x7ff999646dc4,61644670,0,0x0,8
tick,0x7ff999646dc4,61659607,0,0x0,8
tick,0x7ff999646dc4,61675100,0,0x0,8
tick,0x7ff999646dc4,61691223,0,0x0,8
tick,0x7ff999646dc4,61705605,0,0x0,8
tick,0x7ff999646dc4,61721029,0,0x0,8
tick,0x7ff999646dc4,61736440,0,0x0,8
tick,0x7ff999646dc4,61751768,0,0x0,8
tick,0x7ff999646dc4,61766998,0,0x0,8
tick,0x7ff999646dc4,61782539,0,0x0,8
tick,0x7ff999646dc4,61798011,0,0x0,8
tick,0x7ff999646dc4,61813212,0,0x0,8
tick,0x7ff999646dc4,61828647,0,0x0,8
tick,0x7ff999646dc4,61844255,0,0x0,8
tick,0x7ff999646dc4,61859329,0,0x0,8
tick,0x7ff999646dc4,61874954,0,0x0,8
tick,0x7ff999646dc4,61890251,0,0x0,8
tick,0x7ff999646dc4,61905812,0,0x0,8
tick,0x7ff999646dc4,61920989,0,0x0,8
tick,0x7ff999646dc4,61936304,0,0x0,8
tick,0x7ff999646dc4,61951643,0,0x0,8
tick,0x7ff999646dc4,61966969,0,0x0,8
tick,0x7ff999646dc4,61981758,0,0x0,8
tick,0x7ff999646dc4,61997613,0,0x0,8
tick,0x7ff999646dc4,62012502,0,0x0,8
tick,0x7ff999646dc4,62027814,0,0x0,8
tick,0x7ff999646dc4,62042615,0,0x0,8
tick,0x7ff999646dc4,62057824,0,0x0,8
tick,0x7ff999646dc4,62073411,0,0x0,8
tick,0x7ff999646dc4,62088475,0,0x0,8
tick,0x7ff999646dc4,62103950,0,0x0,8
tick,0x7ff999646dc4,62119449,0,0x0,8
tick,0x7ff999646dc4,62134777,0,0x0,8
tick,0x7ff999646dc4,62150056,0,0x0,8
tick,0x7ff999646dc4,62165401,0,0x0,8
tick,0x7ff999646dc4,62181102,0,0x0,8
tick,0x7ff999646dc4,62196533,0,0x0,8
tick,0x7ff999646dc4,62211448,0,0x0,8
tick,0x7ff999646dc4,62226866,0,0x0,8
tick,0x7ff999646dc4,62242470,0,0x0,8
tick,0x7ff999646dc4,62257906,0,0x0,8
tick,0x7ff999646dc4,62273011,0,0x0,8
tick,0x7ff999646dc4,62288523,0,0x0,8
tick,0x7ff999646dc4,62304084,0,0x0,8
tick,0x7ff999646dc4,62319693,0,0x0,8
tick,0x7ff999646dc4,62334810,0,0x0,8
tick,0x7ff999646dc4,62349967,0,0x0,8
tick,0x7ff999646dc4,62365593,0,0x0,8
tick,0x7ff999646dc4,62380906,0,0x0,8
tick,0x7ff999646dc4,62396348,0,0x0,8
tick,0x7ff999646dc4,62411363,0,0x0,8
tick,0x7ff999646dc4,62426624,0,0x0,8
tick,0x7ff999646dc4,62441688,0,0x0,8
tick,0x7ff999646dc4,62457094,0,0x0,8
tick,0x7ff999646dc4,62472712,0,0x0,8
tick,0x7ff999646dc4,62487744,0,0x0,8
tick,0x7ff999646dc4,62503084,0,0x0,8
tick,0x7ff999646dc4,62518633,0,0x0,8
tick,0x7ff999646dc4,62533777,0,0x0,8
tick,0x7ff999646dc4,62549254,0,0x0,8
tick,0x7ff999646dc4,62564600,0,0x0,8
tick,0x7ff999646dc4,62581155,0,0x0,8
tick,0x7ff999646dc4,62595120,0,0x0,8
tick,0x7ff999646dc4,62610558,0,0x0,8
tick,0x7ff999646dc4,62626291,0,0x0,8
tick,0x7ff999646dc4,62641771,0,0x0,8
tick,0x7ff999646dc4,62656794,0,0x0,8
tick,0x7ff999646dc4,62671964,0,0x0,8
tick,0x7ff999646dc4,62687226,0,0x0,8
tick,0x7ff999646dc4,62702695,0,0x0,8
tick,0x7ff999646dc4,62718270,0,0x0,8
tick,0x7ff999646dc4,62733822,0,0x0,8
tick,0x7ff999646dc4,62749464,0,0x0,8
tick,0x7ff999646dc4,62764784,0,0x0,8
tick,0x7ff999646dc4,62780325,0,0x0,8
tick,0x7ff999646dc4,62795547,0,0x0,8
tick,0x7ff999646dc4,62810682,0,0x0,8
tick,0x7ff999646dc4,62826073,0,0x0,8
tick,0x7ff999646dc4,62841476,0,0x0,8
tick,0x7ff999646dc4,62856780,0,0x0,8
tick,0x7ff999646dc4,62872955,0,0x0,8
tick,0x7ff999646dc4,62887642,0,0x0,8
tick,0x7ff999646dc4,62903513,0,0x0,8
tick,0x7ff999646dc4,62917927,0,0x0,8
tick,0x7ff999646dc4,62933181,0,0x0,8
tick,0x7ff999646dc4,62948445,0,0x0,8
tick,0x7ff999646dc4,62963644,0,0x0,8
tick,0x7ff999646dc4,62979085,0,0x0,8
tick,0x7ff999646dc4,62994490,0,0x0,8
tick,0x7ff999646dc4,63010326,0,0x0,8
tick,0x7ff999646dc4,63025502,0,0x0,8
tick,0x7ff999646dc4,63040841,0,0x0,8
tick,0x7ff999646dc4,63056291,0,0x0,8
tick,0x7ff999646dc4,63071429,0,0x0,8
tick,0x7ff999646dc4,63086739,0,0x0,8
tick,0x7ff999646dc4,63102224,0,0x0,8
tick,0x7ff999646dc4,63117411,0,0x0,8
tick,0x7ff999646dc4,63133236,0,0x0,8
tick,0x7ff999646dc4,63147940,0,0x0,8
tick,0x7ff999646dc4,63163517,0,0x0,8
tick,0x7ff999646dc4,63178652,0,0x0,8
tick,0x7ff999646dc4,63194546,0,0x0,8
tick,0x7ff999646dc4,63209649,0,0x0,8
tick,0x7ff999646dc4,63224945,0,0x0,8
tick,0x7ff999646dc4,63240149,0,0x0,8
tick,0x7ff999646dc4,63255650,0,0x0,8
tick,0x7ff999646dc4,63271118,0,0x0,8
tick,0x7ff999646dc4,63286908,0,0x0,8
tick,0x7ff999646dc4,63301972,0,0x0,8
tick,0x7ff999646dc4,63316640,0,0x0,8
tick,0x7ff999646dc4,63332074,0,0x0,8
tick,0x7ff999646dc4,63347446,0,0x0,8
tick,0x7ff999646dc4,63363114,0,0x0,8
tick,0x7ff999646dc4,63378158,0,0x0,8
tick,0x7ff999646dc4,63394257,0,0x0,8
tick,0x7ff999646dc4,63408635,0,0x0,8
tick,0x7ff999646dc4,63424220,0,0x0,8
tick,0x7ff999646dc4,63439381,0,0x0,8
tick,0x7ff999646dc4,63454504,0,0x0,8
tick,0x7ff999646dc4,63470198,0,0x0,8
tick,0x7ff999646dc4,63485531,0,0x0,8
tick,0x7ff999646dc4,63500596,0,0x0,8
tick,0x7ff999646dc4,63516089,0,0x0,8
tick,0x7ff999646dc4,63531458,0,0x0,8
tick,0x7ff999646dc4,63546978,0,0x0,8
tick,0x7ff999646dc4,63562112,0,0x0,8
tick,0x7ff999646dc4,63577659,0,0x0,8
tick,0x7ff999646dc4,63594503,0,0x0,8
tick,0x7ff999646dc4,63609512,0,0x0,8
tick,0x7ff999646dc4,63624173,0,0x0,8
tick,0x7ff999646dc4,63639457,0,0x0,8
tick,0x7ff999646dc4,63654387,0,0x0,8
tick,0x7ff999646dc4,63669697,0,0x0,8
tick,0x7ff999646dc4,63684979,0,0x0,8
tick,0x7ff999646dc4,63700106,0,0x0,8
tick,0x7ff999646dc4,63715741,0,0x0,8
tick,0x7ff999646dc4,63730866,0,0x0,8
tick,0x7ff999646dc4,63746334,0,0x0,8
tick,0x7ff999646dc4,63761284,0,0x0,8
tick,0x7ff999646dc4,63776612,0,0x0,8
tick,0x7ff999646dc4,63791721,0,0x0,8
tick,0x7ff999646dc4,63807408,0,0x0,8
tick,0x7ff999646dc4,63822952,0,0x0,8
tick,0x7ff999646dc4,63838480,0,0x0,8
tick,0x7ff999646dc4,63854069,0,0x0,8
tick,0x7ff999646dc4,63868886,0,0x0,8
tick,0x7ff999646dc4,63884407,0,0x0,8
tick,0x7ff999646dc4,63899420,0,0x0,8
tick,0x7ff999646dc4,63915027,0,0x0,8
tick,0x7ff999646dc4,63930634,0,0x0,8
tick,0x7ff999646dc4,63945893,0,0x0,8
tick,0x7ff999646dc4,63961146,0,0x0,8
tick,0x7ff999646dc4,63977040,0,0x0,8
tick,0x7ff999646dc4,63991925,0,0x0,8
tick,0x7ff999646dc4,64007152,0,0x0,8
tick,0x7ff999646dc4,64022239,0,0x0,8
tick,0x7ff999646dc4,64037844,0,0x0,8
tick,0x7ff999646dc4,64095136,0,0x0,8
tick,0x7ff999646dc4,64095185,0,0x0,8
tick,0x7ff999646dc4,64095196,0,0x0,8
tick,0x7ff999646dc4,64099059,0,0x0,8
tick,0x7ff999646dc4,64114355,0,0x0,8
tick,0x7ff999646dc4,64130184,0,0x0,8
tick,0x7ff999646dc4,64145913,0,0x0,8
tick,0x7ff999646dc4,64159524,0,0x0,8
tick,0x7ff999646dc4,64175300,0,0x0,8
tick,0x7ff999646dc4,64189894,0,0x0,8
tick,0x7ff999646dc4,64205448,0,0x0,8
tick,0x7ff999646dc4,64220223,0,0x0,8
tick,0x7ff999646dc4,64235566,0,0x0,8
tick,0x7ff999646dc4,64250903,0,0x0,8
tick,0x7ff999646dc4,64266074,0,0x0,8
tick,0x7ff999646dc4,64281163,0,0x0,8
tick,0x7ff999646dc4,64297081,0,0x0,8
tick,0x7ff999646dc4,64312406,0,0x0,8
tick,0x7ff999646dc4,64327473,0,0x0,8
tick,0x7ff999646dc4,64343073,0,0x0,8
tick,0x7ff999646dc4,64358847,0,0x0,8
tick,0x7ff999646dc4,64373772,0,0x0,8
tick,0x7ff999646dc4,64388742,0,0x0,8
tick,0x7ff999646dc4,64405263,0,0x0,8
tick,0x7ff999646dc4,64424109,0,0x0,8
tick,0x7ff999646dc4,64435312,0,0x0,8
tick,0x7ff999646dc4,64450567,0,0x0,8
tick,0x7ff999646dc4,64465983,0,0x0,8
tick,0x7ff999646dc4,64481095,0,0x0,8
tick,0x7ff999646dc4,64497119,0,0x0,8
tick,0x7ff999646dc4,64512110,0,0x0,8
tick,0x7ff999646dc4,64530735,0,0x0,8
tick,0x7ff999646dc4,64542009,0,0x0,8
tick,0x7ff999646dc4,64558032,0,0x0,8
tick,0x7ff999646dc4,64572675,0,0x0,8
tick,0x7ff999646dc4,64588507,0,0x0,8
tick,0x7ff999646dc4,64607724,0,0x0,8
tick,0x7ff999646dc4,64619310,0,0x0,8
tick,0x7ff999646dc4,64634110,0,0x0,8
tick,0x7ff999646dc4,64649443,0,0x0,8
tick,0x7ff999646dc4,64666428,0,0x0,8
tick,0x7ff999646dc4,64679719,0,0x0,8
tick,0x7ff999646dc4,64694821,0,0x0,8
tick,0x7ff999646dc4,64709884,0,0x0,8
tick,0x7ff999646dc4,64725644,0,0x0,8
tick,0x7ff999646dc4,64741258,0,0x0,8
tick,0x7ff999646dc4,64756282,0,0x0,8
tick,0x7ff999646dc4,64771374,0,0x0,8
tick,0x7ff999646dc4,64786572,0,0x0,8
tick,0x7ff999646dc4,64802149,0,0x0,8
tick,0x7ff999646dc4,64817489,0,0x0,8
tick,0x7ff999646dc4,64832481,0,0x0,8
tick,0x7ff999646dc4,64847974,0,0x0,8
tick,0x7ff999646dc4,64863230,0,0x0,8
tick,0x7ff999646dc4,64878689,0,0x0,8
tick,0x7ff999646dc4,64894160,0,0x0,8
tick,0x7ff999646dc4,64909274,0,0x0,8
tick,0x7ff999646dc4,64924473,0,0x0,8
tick,0x7ff999646dc4,64941074,0,0x0,8
tick,0x7ff999646dc4,64955892,0,0x0,8
tick,0x7ff999646dc4,64970490,0,0x0,8
tick,0x7ff999646dc4,64986115,0,0x0,8
tick,0x7ff999646dc4,65001466,0,0x0,8
tick,0x7ff999646dc4,65016752,0,0x0,8
tick,0x7ff999646dc4,65032266,0,0x0,8
tick,0x7ff999646dc4,65047696,0,0x0,8
tick,0x7ff999646dc4,65063228,0,0x0,8
tick,0x7ff999646dc4,65078995,0,0x0,8
tick,0x7ff999646dc4,65094097,0,0x0,8
tick,0x7ff999646dc4,65109327,0,0x0,8
tick,0x7ff999646dc4,65126366,0,0x0,8
tick,0x7ff999646dc4,65140798,0,0x0,8
tick,0x7ff999646dc4,65156008,0,0x0,8
tick,0x7ff999646dc4,65170721,0,0x0,8
tick,0x7ff999646dc4,65186115,0,0x0,8
tick,0x7ff999646dc4,65201403,0,0x0,8
tick,0x7ff999646dc4,65216961,0,0x0,8
tick,0x7ff999646dc4,65232270,0,0x0,8
tick,0x7ff999646dc4,65248073,0,0x0,8
tick,0x7ff999646dc4,65262426,0,0x0,8
tick,0x7ff999646dc4,65277946,0,0x0,8
tick,0x7ff999646dc4,65295997,0,0x0,8
tick,0x7ff999646dc4,65309607,0,0x0,8
tick,0x7ff999646dc4,65324541,0,0x0,8
tick,0x7ff999646dc4,65340101,0,0x0,8
tick,0x7ff999646dc4,65355215,0,0x0,8
tick,0x7ff999646dc4,65370315,0,0x0,8
tick,0x7ff999646dc4,65385475,0,0x0,8
tick,0x7ff999646dc4,65401035,0,0x0,8
tick,0x7ff999646dc4,65416375,0,0x0,8
tick,0x7ff999646dc4,65433162,0,0x0,8
tick,0x7ff999646dc4,65447856,0,0x0,8
tick,0x7ff999646dc4,65463506,0,0x0,8
tick,0x7ff999646dc4,65477924,0,0x0,8
tick,0x7ff999646dc4,65493164,0,0x0,8
tick,0x7ff999646dc4,65508811,0,0x0,8
tick,0x7ff999646dc4,65524521,0,0x0,8
tick,0x7ff999646dc4,65540311,0,0x0,8
tick,0x7ff999646dc4,65554686,0,0x0,8
tick,0x7ff999646dc4,65570101,0,0x0,8
tick,0x7ff999646dc4,65585588,0,0x0,8
tick,0x7ff999646dc4,65600402,0,0x0,8
tick,0x7ff999646dc4,65617451,0,0x0,8
tick,0x7ff999646dc4,65631304,0,0x0,8
tick,0x7ff999646dc4,65646685,0,0x0,8
tick,0x7ff999646dc4,65661957,0,0x0,8
tick,0x7ff999646dc4,65677305,0,0x0,8
tick,0x7ff999646dc4,65692261,0,0x0,8
tick,0x7ff999646dc4,65707748,0,0x0,8
tick,0x7ff999646dc4,65723533,0,0x0,8
tick,0x7ff999646dc4,65738896,0,0x0,8
tick,0x7ff999646dc4,65754139,0,0x0,8
tick,0x7ff999646dc4,65769454,0,0x0,8
tick,0x7ff999646dc4,65784965,0,0x0,8
tick,0x7ff999646dc4,65800464,0,0x0,8
tick,0x7ff999646dc4,65815542,0,0x0,8
tick,0x7ff999646dc4,65830675,0,0x0,8
tick,0x7ff999646dc4,65845708,0,0x0,8
tick,0x7ff999646dc4,65861168,0,0x0,8
tick,0x7ff999646dc4,65876606,0,0x0,8
tick,0x7ff999646dc4,65891482,0,0x0,8
tick,0x7ff999646dc4,65906724,0,0x0,8
tick,0x7ff999646dc4,65922262,0,0x0,8
tick,0x7ff999646dc4,65937802,0,0x0,8
tick,0x7ff999646dc4,65953385,0,0x0,8
tick,0x7ff999646dc4,65968864,0,0x0,8
tick,0x7ff999646dc4,65983959,0,0x0,8
tick,0x7ff999646dc4,65999596,0,0x0,8
tick,0x7ff999646dc4,66014864,0,0x0,8
tick,0x7ff999646dc4,66030297,0,0x0,8
tick,0x7ff999646dc4,66045642,0,0x0,8
tick,0x7ff999646dc4,66061119,0,0x0,8
tick,0x7ff999646dc4,66075884,0,0x0,8
tick,0x7ff999646dc4,66091515,0,0x0,8
tick,0x7ff999646dc4,66106332,0,0x0,8
tick,0x7ff999646dc4,66121725,0,0x0,8
tick,0x7ff999646dc4,66136877,0,0x0,8
tick,0x7ff999646dc4,66151764,0,0x0,8
tick,0x7ff999646dc4,66167372,0,0x0,8
tick,0x7ff999646dc4,66182871,0,0x0,8
tick,0x7ff999646dc4,66198463,0,0x0,8
tick,0x7ff999646dc4,66213209,0,0x0,8
tick,0x7ff999646dc4,66228776,0,0x0,8
tick,0x7ff999646dc4,66244022,0,0x0,8
tick,0x7ff999646dc4,66259442,0,0x0,8
tick,0x7ff999646dc4,66274827,0,0x0,8
tick,0x7ff999646dc4,66291089,0,0x0,8
tick,0x7ff999646dc4,66305070,0,0x0,8
tick,0x7ff999646dc4,66320828,0,0x0,8
tick,0x7ff999646dc4,66336073,0,0x0,8
tick,0x7ff999646dc4,66351261,0,0x0,8
tick,0x7ff999646dc4,66366521,0,0x0,8
tick,0x7ff999646dc4,66381735,0,0x0,8
tick,0x7ff999646dc4,66397069,0,0x0,8
tick,0x7ff999646dc4,66412887,0,0x0,8
tick,0x7ff999646dc4,66427805,0,0x0,8
tick,0x7ff999646dc4,66442907,0,0x0,8
tick,0x7ff999646dc4,66458224,0,0x0,8
tick,0x7ff999646dc4,66473767,0,0x0,8
tick,0x7ff999646dc4,66488952,0,0x0,8
tick,0x7ff999646dc4,66504577,0,0x0,8
tick,0x7ff999646dc4,66519989,0,0x0,8
tick,0x7ff999646dc4,66535004,0,0x0,8
tick,0x7ff999646dc4,66550398,0,0x0,8
tick,0x7ff999646dc4,66565452,0,0x0,8
tick,0x7ff999646dc4,66580759,0,0x0,8
tick,0x7ff999646dc4,66596035,0,0x0,8
tick,0x7ff999646dc4,66611711,0,0x0,8
tick,0x7ff999646dc4,66627990,0,0x0,8
tick,0x7ff999646dc4,66642503,0,0x0,8
tick,0x7ff999646dc4,66657879,0,0x0,8
tick,0x7ff999646dc4,66672991,0,0x0,8
tick,0x7ff999646dc4,66688051,0,0x0,8
tick,0x7ff999646dc4,66703307,0,0x0,8
tick,0x7ff999646dc4,66718388,0,0x0,8
tick,0x7ff999646dc4,66733855,0,0x0,8
tick,0x7ff999646dc4,66749160,0,0x0,8
tick,0x7ff999646dc4,66764597,0,0x0,8
tick,0x7ff999646dc4,66780146,0,0x0,8
tick,0x7ff999646dc4,66795624,0,0x0,8
tick,0x7ff999646dc4,66810659,0,0x0,8
tick,0x7ff999646dc4,66826200,0,0x0,8
tick,0x7ff999646dc4,66841470,0,0x0,8
tick,0x7ff999646dc4,66856921,0,0x0,8
tick,0x7ff999646dc4,66872520,0,0x0,8
tick,0x7ff999646dc4,66887653,0,0x0,8
tick,0x7ff999646dc4,66902994,0,0x0,8
tick,0x7ff999646dc4,66918203,0,0x0,8
tick,0x7ff999646dc4,66933651,0,0x0,8
tick,0x7ff999646dc4,66948989,0,0x0,8
tick,0x7ff999646dc4,66964082,0,0x0,8
tick,0x7ff999646dc4,66979484,0,0x0,8
tick,0x7ff999646dc4,66994766,0,0x0,8
tick,0x7ff999646dc4,67010187,0,0x0,8
tick,0x7ff999646dc4,67025908,0,0x0,8
tick,0x7ff999646dc4,67041115,0,0x0,8
tick,0x7ff999646dc4,67056279,0,0x0,8
tick,0x7ff999646dc4,67071821,0,0x0,8
tick,0x7ff999646dc4,67087228,0,0x0,8
tick,0x7ff999646dc4,67102492,0,0x0,8
tick,0x7ff999646dc4,67118119,0,0x0,8
tick,0x7ff999646dc4,67133270,0,0x0,8
tick,0x7ff999646dc4,67148491,0,0x0,8
tick,0x7ff999646dc4,67163879,0,0x0,8
tick,0x7ff999646dc4,67178866,0,0x0,8
tick,0x7ff999646dc4,67194152,0,0x0,8
tick,0x7ff999646dc4,67209577,0,0x0,8
tick,0x7ff999646dc4,67225309,0,0x0,8
tick,0x7ff999646dc4,67240549,0,0x0,8
tick,0x7ff999646dc4,67256235,0,0x0,8
tick,0x7ff999646dc4,67270991,0,0x0,8
tick,0x7ff999646dc4,67286468,0,0x0,8
tick,0x7ff999646dc4,67301656,0,0x0,8
tick,0x7ff999646dc4,67317577,0,0x0,8
tick,0x7ff999646dc4,67332506,0,0x0,8
tick,0x7ff999646dc4,67348487,0,0x0,8
tick,0x7ff999646dc4,67362687,0,0x0,8
tick,0x7ff999646dc4,67377850,0,0x0,8
tick,0x7ff999646dc4,67393250,0,0x0,8
tick,0x7ff999646dc4,67408667,0,0x0,8
tick,0x7ff999646dc4,67423932,0,0x0,8
tick,0x7ff999646dc4,67439220,0,0x0,8
tick,0x7ff999646dc4,67454250,0,0x0,8
tick,0x7ff999646dc4,67469641,0,0x0,8
tick,0x7ff999646dc4,67484976,0,0x0,8
tick,0x7ff999646dc4,67500193,0,0x0,8
tick,0x7ff999646dc4,67515499,0,0x0,8
tick,0x7ff999646dc4,67530767,0,0x0,8
tick,0x7ff999646dc4,67546328,0,0x0,8
tick,0x7ff999646dc4,67561824,0,0x0,8
tick,0x7ff999646dc4,67577027,0,0x0,8
tick,0x7ff999646dc4,67592289,0,0x0,8
tick,0x7ff999646dc4,67607730,0,0x0,8
tick,0x7ff999646dc4,67623138,0,0x0,8
tick,0x7ff999646dc4,67638851,0,0x0,8
tick,0x7ff999646dc4,67653914,0,0x0,8
tick,0x7ff999646dc4,67669222,0,0x0,8
tick,0x7ff999646dc4,67684876,0,0x0,8
tick,0x7ff999646dc4,67700158,0,0x0,8
tick,0x7ff999646dc4,67715731,0,0x0,8
tick,0x7ff999646dc4,67730979,0,0x0,8
tick,0x7ff999646dc4,67746146,0,0x0,8
tick,0x7ff999646dc4,67761191,0,0x0,8
tick,0x7ff999646dc4,67777128,0,0x0,8
tick,0x7ff999646dc4,67791991,0,0x0,8
tick,0x7ff999646dc4,67807315,0,0x0,8
tick,0x7ff999646dc4,67822565,0,0x0,8
tick,0x7ff999646dc4,67838146,0,0x0,8
tick,0x7ff999646dc4,67853391,0,0x0,8
tick,0x7ff999646dc4,67868654,0,0x0,8
tick,0x7ff999646dc4,67884429,0,0x0,8
tick,0x7ff999646dc4,67899658,0,0x0,8
tick,0x7ff999646dc4,67915028,0,0x0,8
tick,0x7ff999646dc4,67930211,0,0x0,8
tick,0x7ff999646dc4,67945508,0,0x0,8
tick,0x7ff999646dc4,67960946,0,0x0,8
tick,0x7ff999646dc4,67975884,0,0x0,8
tick,0x7ff999646dc4,67992518,0,0x0,8
tick,0x7ff999646dc4,68006660,0,0x0,8
tick,0x7ff999646dc4,68022178,0,0x0,8
tick,0x7ff999646dc4,68037357,0,0x0,8
tick,0x7ff999646dc4,68053084,0,0x0,8
tick,0x7ff999646dc4,68068592,0,0x0,8
tick,0x7ff999646dc4,68083779,0,0x0,8
tick,0x7ff999646dc4,68098913,0,0x0,8
tick,0x7ff999646dc4,68114253,0,0x0,8
tick,0x7ff999646dc4,68130134,0,0x0,8
tick,0x7ff999646dc4,68146119,0,0x0,8
tick,0x7ff999646dc4,68160355,0,0x0,8
tick,0x7ff999646dc4,68176096,0,0x0,8
tick,0x7ff999646dc4,68191099,0,0x0,8
tick,0x7ff999646dc4,68206926,0,0x0,8
tick,0x7ff999646dc4,68221558,0,0x0,8
tick,0x7ff999646dc4,68236889,0,0x0,8
tick,0x7ff999646dc4,68253105,0,0x0,8
tick,0x7ff999646dc4,68267556,0,0x0,8
tick,0x7ff999646dc4,68282770,0,0x0,8
tick,0x7ff999646dc4,68298518,0,0x0,8
tick,0x7ff999646dc4,68314312,0,0x0,8
tick,0x7ff999646dc4,68328768,0,0x0,8
tick,0x7ff999646dc4,68344033,0,0x0,8
tick,0x7ff999646dc4,68359505,0,0x0,8
tick,0x7ff999646dc4,68375006,0,0x0,8
tick,0x7ff999646dc4,68390568,0,0x0,8
tick,0x7ff999646dc4,68405779,0,0x0,8
tick,0x7ff999646dc4,68421214,0,0x0,8
tick,0x7ff999646dc4,68436325,0,0x0,8
tick,0x7ff999646dc4,68451628,0,0x0,8
tick,0x7ff999646dc4,68467092,0,0x0,8
tick,0x7ff999646dc4,68482482,0,0x0,8
tick,0x7ff999646dc4,68497900,0,0x0,8
tick,0x7ff999646dc4,68513492,0,0x0,8
tick,0x7ff999646dc4,68529588,0,0x0,8
tick,0x7ff999646dc4,68544087,0,0x0,8
tick,0x7ff999646dc4,68559516,0,0x0,8
tick,0x7ff999646dc4,68574189,0,0x0,8
tick,0x7ff999646dc4,68589821,0,0x0,8
tick,0x7ff999646dc4,68605585,0,0x0,8
tick,0x7ff999646dc4,68620488,0,0x0,8
tick,0x7ff999646dc4,68636032,0,0x0,8
tick,0x7ff999646dc4,68651381,0,0x0,8
tick,0x7ff999646dc4,68667001,0,0x0,8
tick,0x7ff999646dc4,68681753,0,0x0,8
tick,0x7ff999646dc4,68696940,0,0x0,8
tick,0x7ff999646dc4,68712056,0,0x0,8
tick,0x7ff999646dc4,68727648,0,0x0,8
tick,0x7ff999646dc4,68742891,0,0x0,8
tick,0x7ff999646dc4,68758595,0,0x0,8
tick,0x7ff999646dc4,68774027,0,0x0,8
tick,0x7ff999646dc4,68789415,0,0x0,8
tick,0x7ff999646dc4,68805173,0,0x0,8
tick,0x7ff999646dc4,68820481,0,0x0,8
tick,0x7ff999646dc4,68835716,0,0x0,8
tick,0x7ff999646dc4,68850786,0,0x0,8
tick,0x7ff999646dc4,68866168,0,0x0,8
tick,0x7ff999646dc4,68881052,0,0x0,8
tick,0x7ff999646dc4,68897513,0,0x0,8
tick,0x7ff999646dc4,68912167,0,0x0,8
tick,0x7ff999646dc4,68927505,0,0x0,8
tick,0x7ff999646dc4,68942637,0,0x0,8
tick,0x7ff999646dc4,68958417,0,0x0,8
tick,0x7ff999646dc4,68973932,0,0x0,8
tick,0x7ff999646dc4,68989239,0,0x0,8
tick,0x7ff999646dc4,69004490,0,0x0,8
tick,0x7ff999646dc4,69019691,0,0x0,8
tick,0x7ff999646dc4,69035000,0,0x0,8
tick,0x7ff999646dc4,69050250,0,0x0,8
tick,0x7ff999646dc4,69065859,0,0x0,8
tick,0x7ff999646dc4,69081028,0,0x0,8
tick,0x7ff999646dc4,69096507,0,0x0,8
tick,0x7ff999646dc4,69111363,0,0x0,8
tick,0x7ff999646dc4,69128021,0,0x0,8
tick,0x7ff999646dc4,69142363,0,0x0,8
tick,0x7ff999646dc4,69157517,0,0x0,8
tick,0x7ff999646dc4,69173273,0,0x0,8
tick,0x7ff999646dc4,69187600,0,0x0,8
tick,0x7ff999646dc4,69203384,0,0x0,8
tick,0x7ff999646dc4,69218933,0,0x0,8
tick,0x7ff999646dc4,69234302,0,0x0,8
tick,0x7ff999646dc4,69249493,0,0x0,8
tick,0x7ff999646dc4,69265126,0,0x0,8
tick,0x7ff999646dc4,69279939,0,0x0,8
tick,0x7ff999646dc4,69297025,0,0x0,8
tick,0x7ff999646dc4,69310867,0,0x0,8
tick,0x7ff999646dc4,69325893,0,0x0,8
tick,0x7ff999646dc4,69341582,0,0x0,8
tick,0x7ff999646dc4,69357300,0,0x0,8
tick,0x7ff999646dc4,69372453,0,0x0,8
tick,0x7ff999646dc4,69387820,0,0x0,8
tick,0x7ff999646dc4,69402939,0,0x0,8
tick,0x7ff999646dc4,69418473,0,0x0,8
tick,0x7ff999646dc4,69434232,0,0x0,8
tick,0x7ff999646dc4,69449638,0,0x0,8
tick,0x7ff999646dc4,69465224,0,0x0,8
tick,0x7ff999646dc4,69480294,0,0x0,8
tick,0x7ff999646dc4,69495705,0,0x0,8
tick,0x7ff999646dc4,69511819,0,0x0,8
tick,0x7ff999646dc4,69526515,0,0x0,8
tick,0x7ff999646dc4,69541629,0,0x0,8
tick,0x7ff999646dc4,69557801,0,0x0,8
tick,0x7ff999646dc4,69572045,0,0x0,8
tick,0x7ff999646dc4,69587320,0,0x0,8
tick,0x7ff999646dc4,69603000,0,0x0,8
tick,0x7ff999646dc4,69618031,0,0x0,8
tick,0x7ff999646dc4,69633682,0,0x0,8
tick,0x7ff999646dc4,69648491,0,0x0,8
tick,0x7ff999646dc4,69664130,0,0x0,8
tick,0x7ff999646dc4,69679704,0,0x0,8
tick,0x7ff999646dc4,69694262,0,0x0,8
tick,0x7ff999646dc4,69709587,0,0x0,8
tick,0x7ff999646dc4,69724808,0,0x0,8
tick,0x7ff999646dc4,69740042,0,0x0,8
tick,0x7ff999646dc4,69755361,0,0x0,8
tick,0x7ff999646dc4,69770800,0,0x0,8
tick,0x7ff999646dc4,69785951,0,0x0,8
tick,0x7ff999646dc4,69801518,0,0x0,8
tick,0x7ff999646dc4,69816951,0,0x0,8
tick,0x7ff999646dc4,69832560,0,0x0,8
tick,0x7ff999646dc4,69847796,0,0x0,8
tick,0x7ff999646dc4,69863533,0,0x0,8
tick,0x7ff999646dc4,69878619,0,0x0,8
tick,0x7ff999646dc4,69893636,0,0x0,8
tick,0x7ff999646dc4,69908985,0,0x0,8
tick,0x7ff999646dc4,69924084,0,0x0,8
tick,0x7ff999646dc4,69939742,0,0x0,8
tick,0x7ff999646dc4,69954836,0,0x0,8
tick,0x7ff999646dc4,69970203,0,0x0,8
tick,0x7ff999646dc4,69986031,0,0x0,8
tick,0x7ff999646dc4,70001198,0,0x0,8
tick,0x7ff999646dc4,70016384,0,0x0,8
tick,0x7ff999646dc4,70032231,0,0x0,8
tick,0x7ff999646dc4,70047280,0,0x0,8
tick,0x7ff999646dc4,70062550,0,0x0,8
tick,0x7ff999646dc4,70079503,0,0x0,8
tick,0x7ff999646dc4,70093578,0,0x0,8
tick,0x7ff999646dc4,70108417,0,0x0,8
tick,0x7ff999646dc4,70123535,0,0x0,8
tick,0x7ff999646dc4,70139183,0,0x0,8
tick,0x7ff999646dc4,70154457,0,0x0,8
tick,0x7ff999646dc4,70169946,0,0x0,8
tick,0x7ff999646dc4,70185206,0,0x0,8
tick,0x7ff999646dc4,70200404,0,0x0,8
tick,0x7ff999646dc4,70215931,0,0x0,8
tick,0x7ff999646dc4,70231553,0,0x0,8
tick,0x7ff999646dc4,70247068,0,0x0,8
tick,0x7ff999646dc4,70262004,0,0x0,8
tick,0x7ff999646dc4,70277096,0,0x0,8
tick,0x7ff999646dc4,70292766,0,0x0,8
tick,0x7ff999646dc4,70308214,0,0x0,8
tick,0x7ff999646dc4,70323607,0,0x0,8
tick,0x7ff999646dc4,70338944,0,0x0,8
tick,0x7ff999646dc4,70353702,0,0x0,8
tick,0x7ff999646dc4,70369261,0,0x0,8
tick,0x7ff999646dc4,70385086,0,0x0,8
tick,0x7ff999646dc4,70400281,0,0x0,8
tick,0x7ff999646dc4,70415698,0,0x0,8
tick,0x7ff999646dc4,70431015,0,0x0,8
tick,0x7ff999646dc4,70446696,0,0x0,8
tick,0x7ff999646dc4,70461471,0,0x0,8
tick,0x7ff999646dc4,70476833,0,0x0,8
tick,0x7ff999646dc4,70492083,0,0x0,8
tick,0x7ff999646dc4,70507486,0,0x0,8
tick,0x7ff999646dc4,70522935,0,0x0,8
tick,0x7ff999646dc4,70538232,0,0x0,8
tick,0x7ff999646dc4,70553514,0,0x0,8
tick,0x7ff999646dc4,70568246,0,0x0,8
tick,0x7ff999646dc4,70583715,0,0x0,8
tick,0x7ff999646dc4,70599017,0,0x0,8
tick,0x7ff999646dc4,70614654,0,0x0,8
tick,0x7ff999646dc4,70630373,0,0x0,8
tick,0x7ff999646dc4,70645484,0,0x0,8
tick,0x7ff999646dc4,70660998,0,0x0,8
tick,0x7ff999646dc4,70676004,0,0x0,8
tick,0x7ff999646dc4,70690650,0,0x0,8
tick,0x7ff999646dc4,70705815,0,0x0,8
tick,0x7ff999646dc4,70721766,0,0x0,8
tick,0x7ff999646dc4,70737105,0,0x0,8
tick,0x7ff999646dc4,70752079,0,0x0,8
tick,0x7ff999646dc4,70767434,0,0x0,8
tick,0x7ff999646dc4,70782942,0,0x0,8
tick,0x7ff999646dc4,70798202,0,0x0,8
tick,0x7ff999646dc4,70813813,0,0x0,8
tick,0x7ff999646dc4,70829008,0,0x0,8
tick,0x7ff999646dc4,70844581,0,0x0,8
tick,0x7ff999646dc4,70859930,0,0x0,8
tick,0x7ff999646dc4,70875297,0,0x0,8
tick,0x7ff999646dc4,70890715,0,0x0,8
tick,0x7ff999646dc4,70906309,0,0x0,8
tick,0x7ff999646dc4,70921744,0,0x0,8
tick,0x7ff999646dc4,70936652,0,0x0,8
tick,0x7ff999646dc4,70951911,0,0x0,8
tick,0x7ff999646dc4,70967077,0,0x0,8
tick,0x7ff999646dc4,70982234,0,0x0,8
tick,0x7ff999646dc4,70997401,0,0x0,8
tick,0x7ff999646dc4,71013035,0,0x0,8
tick,0x7ff999646dc4,71028359,0,0x0,8
tick,0x7ff999646dc4,71043607,0,0x0,8
tick,0x7ff999646dc4,71058977,0,0x0,8
tick,0x7ff999646dc4,71073859,0,0x0,8
tick,0x7ff999646dc4,71089279,0,0x0,8
tick,0x7ff999646dc4,71104355,0,0x0,8
tick,0x7ff999646dc4,71120865,0,0x0,8
tick,0x7ff999646dc4,71133877,0,0x0,8
tick,0x7ff999646dc4,71149108,0,0x0,8
tick,0x7ff999646dc4,71165271,0,0x0,8
tick,0x7ff999646dc4,71179594,0,0x0,8
tick,0x7ff999646dc4,71194730,0,0x0,8
tick,0x7ff999646dc4,71210403,0,0x0,8
tick,0x7ff999646dc4,71225637,0,0x0,8
tick,0x7ff999646dc4,71241411,0,0x0,8
tick,0x7ff999646dc4,71256710,0,0x0,8
tick,0x7ff999646dc4,71271945,0,0x0,8
tick,0x7ff999646dc4,71287440,0,0x0,8
tick,0x7ff999646dc4,71303083,0,0x0,8
tick,0x7ff999646dc4,71318558,0,0x0,8
tick,0x7ff999646dc4,71333817,0,0x0,8
tick,0x7ff999646dc4,71349289,0,0x0,8
tick,0x7ff999646dc4,71364811,0,0x0,8
tick,0x7ff999646dc4,71380095,0,0x0,8
tick,0x7ff999646dc4,71395572,0,0x0,8
tick,0x7ff999646dc4,71410810,0,0x0,8
tick,0x7ff999646dc4,71426076,0,0x0,8
tick,0x7ff999646dc4,71441165,0,0x0,8
tick,0x7ff999646dc4,71456598,0,0x0,8
tick,0x7ff999646dc4,71471991,0,0x0,8
tick,0x7ff999646dc4,71487364,0,0x0,8
tick,0x7ff999646dc4,71502695,0,0x0,8
tick,0x7ff999646dc4,71518199,0,0x0,8
tick,0x7ff999646dc4,71533391,0,0x0,8
tick,0x7ff999646dc4,71549085,0,0x0,8
tick,0x7ff999646dc4,71564050,0,0x0,8
tick,0x7ff999646dc4,71579798,0,0x0,8
tick,0x7ff999646dc4,71595119,0,0x0,8
tick,0x7ff999646dc4,71610694,0,0x0,8
tick,0x7ff999646dc4,71625588,0,0x0,8
tick,0x7ff999646dc4,71640813,0,0x0,8
tick,0x7ff999646dc4,71656390,0,0x0,8
tick,0x7ff999646dc4,71671450,0,0x0,8
tick,0x7ff999646dc4,71687049,0,0x0,8
tick,0x7ff999646dc4,71701811,0,0x0,8
tick,0x7ff999646dc4,71717062,0,0x0,8
tick,0x7ff999646dc4,71732487,0,0x0,8
tick,0x7ff999646dc4,71748184,0,0x0,8
tick,0x7ff999646dc4,71763652,0,0x0,8
tick,0x7ff999646dc4,71779020,0,0x0,8
tick,0x7ff999646dc4,71794306,0,0x0,8
tick,0x7ff999646dc4,71809534,0,0x0,8
tick,0x7ff999646dc4,71824308,0,0x0,8
tick,0x7ff999646dc4,71839767,0,0x0,8
tick,0x7ff999646dc4,71855172,0,0x0,8
tick,0x7ff999646dc4,71870188,0,0x0,8
tick,0x7ff999646dc4,71885737,0,0x0,8
tick,0x7ff999646dc4,71901453,0,0x0,8
tick,0x7ff999646dc4,71916699,0,0x0,8
tick,0x7ff999646dc4,71932088,0,0x0,8
tick,0x7ff999646dc4,71947551,0,0x0,8
tick,0x7ff999646dc4,71963059,0,0x0,8
tick,0x7ff999646dc4,71978442,0,0x0,8
tick,0x7ff999646dc4,71993877,0,0x0,8
tick,0x7ff999646dc4,72009154,0,0x0,8
tick,0x7ff999646dc4,72024655,0,0x0,8
tick,0x7ff999646dc4,72040040,0,0x0,8
tick,0x7ff999646dc4,72055126,0,0x0,8
tick,0x7ff999646dc4,72070819,0,0x0,8
tick,0x7ff999646dc4,72086511,0,0x0,8
tick,0x7ff999646dc4,72102139,0,0x0,8
tick,0x7ff999646dc4,72117464,0,0x0,8
tick,0x7ff999646dc4,72133938,0,0x0,8
tick,0x7ff999646dc4,72148657,0,0x0,8
tick,0x7ff999646dc4,72163619,0,0x0,8
tick,0x7ff999646dc4,72178559,0,0x0,8
tick,0x7ff999646dc4,72193980,0,0x0,8
tick,0x7ff999646dc4,72209407,0,0x0,8
tick,0x7ff999646dc4,72224999,0,0x0,8
tick,0x7ff999646dc4,72240344,0,0x0,8
tick,0x7ff999646dc4,72255878,0,0x0,8
tick,0x7ff999646dc4,72271221,0,0x0,8
tick,0x7ff999646dc4,72287202,0,0x0,8
tick,0x7ff999646dc4,72302079,0,0x0,8
tick,0x7ff999646dc4,72317448,0,0x0,8
tick,0x7ff999646dc4,72332719,0,0x0,8
tick,0x7ff999646dc4,72348119,0,0x0,8
tick,0x7ff999646dc4,72363342,0,0x0,8
tick,0x7ff999646dc4,72378523,0,0x0,8
tick,0x7ff999646dc4,72393652,0,0x0,8
tick,0x7ff999646dc4,72408985,0,0x0,8
tick,0x7ff999646dc4,72424261,0,0x0,8
tick,0x7ff999646dc4,72439433,0,0x0,8
tick,0x7ff999646dc4,72454637,0,0x0,8
tick,0x7ff999646dc4,72469897,0,0x0,8
tick,0x7ff999646dc4,72485222,0,0x0,8
tick,0x7ff999646dc4,72500471,0,0x0,8
tick,0x7ff999646dc4,72515847,0,0x0,8
tick,0x7ff999646dc4,72532286,0,0x0,8
tick,0x7ff999646dc4,72546584,0,0x0,8
tick,0x7ff999646dc4,72561564,0,0x0,8
tick,0x7ff999646dc4,72576924,0,0x0,8
tick,0x7ff999646dc4,72592131,0,0x0,8
tick,0x7ff999646dc4,72607435,0,0x0,8
tick,0x7ff999646dc4,72622961,0,0x0,8
tick,0x7ff999646dc4,72638324,0,0x0,8
tick,0x7ff999646dc4,72654155,0,0x0,8
tick,0x7ff999646dc4,72669775,0,0x0,8
tick,0x7ff999646dc4,72685345,0,0x0,8
tick,0x7ff999646dc4,72701481,0,0x0,8
tick,0x7ff999646dc4,72716111,0,0x0,8
tick,0x7ff999646dc4,72731477,0,0x0,8
tick,0x7ff999646dc4,72746699,0,0x0,8
tick,0x7ff999646dc4,72762160,0,0x0,8
tick,0x7ff999646dc4,72777400,0,0x0,8
tick,0x7ff999646dc4,72792180,0,0x0,8
tick,0x7ff999646dc4,72807488,0,0x0,8
tick,0x7ff999646dc4,72822741,0,0x0,8
tick,0x7ff999646dc4,72838030,0,0x0,8
tick,0x7ff999646dc4,72853429,0,0x0,8
tick,0x7ff999646dc4,72868792,0,0x0,8
tick,0x7ff999646dc4,72884442,0,0x0,8
tick,0x7ff999646dc4,72899447,0,0x0,8
tick,0x7ff999646dc4,72914955,0,0x0,8
tick,0x7ff999646dc4,72930015,0,0x0,8
tick,0x7ff999646dc4,72945953,0,0x0,8
tick,0x7ff999646dc4,72960894,0,0x0,8
tick,0x7ff999646dc4,72976252,0,0x0,8
tick,0x7ff999646dc4,72991489,0,0x0,8
tick,0x7ff999646dc4,73006808,0,0x0,8
tick,0x7ff999646dc4,73022277,0,0x0,8
tick,0x7ff999646dc4,73037379,0,0x0,8
tick,0x7ff999646dc4,73052584,0,0x0,8
tick,0x7ff999646dc4,73067670,0,0x0,8
tick,0x7ff999646dc4,73083067,0,0x0,8
tick,0x7ff999646dc4,73098343,0,0x0,8
tick,0x7ff999646dc4,73113571,0,0x0,8
tick,0x7ff999646dc4,73129525,0,0x0,8
tick,0x7ff999646dc4,73144242,0,0x0,8
tick,0x7ff999646dc4,73159438,0,0x0,8
tick,0x7ff999646dc4,73174948,0,0x0,8
tick,0x7ff999646dc4,73190806,0,0x0,8
tick,0x7ff999646dc4,73206184,0,0x0,8
tick,0x7ff999646dc4,73220935,0,0x0,8
tick,0x7ff999646dc4,73236275,0,0x0,8
tick,0x7ff999646dc4,73251846,0,0x0,8
tick,0x7ff999646dc4,73267337,0,0x0,8
tick,0x7ff999646dc4,73283885,0,0x0,8
tick,0x7ff999646dc4,73298187,0,0x0,8
tick,0x7ff999646dc4,73313165,0,0x0,8
tick,0x7ff999646dc4,73328522,0,0x0,8
tick,0x7ff999646dc4,73344047,0,0x0,8
tick,0x7ff999646dc4,73359049,0,0x0,8
tick,0x7ff999646dc4,73373920,0,0x0,8
tick,0x7ff999646dc4,73389502,0,0x0,8
tick,0x7ff999646dc4,73404889,0,0x0,8
tick,0x7ff999646dc4,73420623,0,0x0,8
tick,0x7ff999646dc4,73435592,0,0x0,8
tick,0x7ff999646dc4,73450927,0,0x0,8
tick,0x7ff999646dc4,73466140,0,0x0,8
tick,0x7ff999646dc4,73481479,0,0x0,8
tick,0x7ff999646dc4,73497136,0,0x0,8
tick,0x7ff999646dc4,73512203,0,0x0,8
tick,0x7ff999646dc4,73528243,0,0x0,8
tick,0x7ff999646dc4,73543626,0,0x0,8
tick,0x7ff999646dc4,73558533,0,0x0,8
tick,0x7ff999646dc4,73573957,0,0x0,8
tick,0x7ff999646dc4,73589061,0,0x0,8
tick,0x7ff999646dc4,73604296,0,0x0,8
tick,0x7ff999646dc4,73619621,0,0x0,8
tick,0x7ff999646dc4,73635008,0,0x0,8
tick,0x7ff999646dc4,73650574,0,0x0,8
tick,0x7ff999646dc4,73666762,0,0x0,8
tick,0x7ff999646dc4,73681592,0,0x0,8
tick,0x7ff999646dc4,73696186,0,0x0,8
tick,0x7ff999646dc4,73712002,0,0x0,8
tick,0x7ff999646dc4,73726906,0,0x0,8
tick,0x7ff999646dc4,73742442,0,0x0,8
tick,0x7ff999646dc4,73757953,0,0x0,8
tick,0x7ff999646dc4,73773364,0,0x0,8
tick,0x7ff999646dc4,73788571,0,0x0,8
tick,0x7ff999646dc4,73803519,0,0x0,8
tick,0x7ff999646dc4,73819432,0,0x0,8
tick,0x7ff999646dc4,73834495,0,0x0,8
tick,0x7ff999646dc4,73849912,0,0x0,8
tick,0x7ff999646dc4,73865115,0,0x0,8
tick,0x7ff999646dc4,73880247,0,0x0,8
tick,0x7ff999646dc4,73895525,0,0x0,8
tick,0x7ff999646dc4,73910636,0,0x0,8
tick,0x7ff999646dc4,73926389,0,0x0,8
tick,0x7ff999646dc4,73941509,0,0x0,8
tick,0x7ff999646dc4,73957080,0,0x0,8
tick,0x7ff999646dc4,73972434,0,0x0,8
tick,0x7ff999646dc4,73988072,0,0x0,8
tick,0x7ff999646dc4,74003005,0,0x0,8
tick,0x7ff999646dc4,74019182,0,0x0,8
tick,0x7ff999646dc4,74033987,0,0x0,8
tick,0x7ff999646dc4,74049530,0,0x0,8
tick,0x7ff999646dc4,74064047,0,0x0,8
tick,0x7ff999646dc4,74079456,0,0x0,8
tick,0x7ff999646dc4,74094755,0,0x0,8
tick,0x7ff999646dc4,74110890,0,0x0,8
tick,0x7ff999646dc4,74127040,0,0x0,8
tick,0x7ff999646dc4,74141222,0,0x0,8
tick,0x7ff999646dc4,74156954,0,0x0,8
tick,0x7ff999646dc4,74173080,0,0x0,8
tick,0x7ff999646dc4,74187390,0,0x0,8
tick,0x7ff999646dc4,74203505,0,0x0,8
tick,0x7ff999646dc4,74218230,0,0x0,8
tick,0x7ff999646dc4,74233768,0,0x0,8
tick,0x7ff999646dc4,74249154,0,0x0,8
tick,0x7ff999646dc4,74264404,0,0x0,8
tick,0x7ff999646dc4,74280168,0,0x0,8
tick,0x7ff999646dc4,74295675,0,0x0,8
tick,0x7ff999646dc4,74311193,0,0x0,8
tick,0x7ff999646dc4,74326118,0,0x0,8
tick,0x7ff999646dc4,74341371,0,0x0,8
tick,0x7ff999646dc4,74356937,0,0x0,8
tick,0x7ff999646dc4,74372669,0,0x0,8
tick,0x7ff999646dc4,74388025,0,0x0,8
tick,0x7ff999646dc4,74403498,0,0x0,8
tick,0x7ff999646dc4,74418837,0,0x0,8
tick,0x7ff999646dc4,74434046,0,0x0,8
tick,0x7ff999646dc4,74450031,0,0x0,8
tick,0x7ff999646dc4,74464805,0,0x0,8
tick,0x7ff999646dc4,74480604,0,0x0,8
tick,0x7ff999646dc4,74495622,0,0x0,8
tick,0x7ff999646dc4,74510713,0,0x0,8
tick,0x7ff999646dc4,74526067,0,0x0,8
tick,0x7ff999646dc4,74541255,0,0x0,8
tick,0x7ff999646dc4,74556939,0,0x0,8
tick,0x7ff999646dc4,74572020,0,0x0,8
tick,0x7ff999646dc4,74587201,0,0x0,8
tick,0x7ff999646dc4,74602794,0,0x0,8
tick,0x7ff999646dc4,74619046,0,0x0,8
tick,0x7ff999646dc4,74634528,0,0x0,8
tick,0x7ff999646dc4,74649618,0,0x0,8
tick,0x7ff999646dc4,74674731,0,0x0,8
tick,0x7ff999646dc4,74679310,0,0x0,8
tick,0x7ff999646dc4,74694715,0,0x0,8
tick,0x7ff999646dc4,74710162,0,0x0,8
tick,0x7ff999646dc4,74726374,0,0x0,8
tick,0x7ff999646dc4,74741270,0,0x0,8
tick,0x7ff999646dc4,74756859,0,0x0,8
tick,0x7ff999646dc4,74772075,0,0x0,8
tick,0x7ff999646dc4,74786707,0,0x0,8
tick,0x7ff999646dc4,74802083,0,0x0,8
tick,0x7ff999646dc4,74817196,0,0x0,8
tick,0x7ff999646dc4,74832965,0,0x0,8
tick,0x7ff999646dc4,74848080,0,0x0,8
tick,0x7ff999646dc4,74863457,0,0x0,8
tick,0x7ff999646dc4,74878613,0,0x0,8
tick,0x7ff999646dc4,74893900,0,0x0,8
tick,0x7ff999646dc4,74909097,0,0x0,8
tick,0x7ff999646dc4,74924374,0,0x0,8
tick,0x7ff999646dc4,74939725,0,0x0,8
tick,0x7ff999646dc4,74955090,0,0x0,8
tick,0x7ff999646dc4,74970189,0,0x0,8
tick,0x7ff999646dc4,74985914,0,0x0,8
tick,0x7ff999646dc4,75001269,0,0x0,8
tick,0x7ff999646dc4,75017389,0,0x0,8
tick,0x7ff999646dc4,75032169,0,0x0,8
tick,0x7ff999646dc4,75047409,0,0x0,8
tick,0x7ff999646dc4,75062949,0,0x0,8
tick,0x7ff999646dc4,75078189,0,0x0,8
tick,0x7ff999646dc4,75094066,0,0x0,8
tick,0x7ff999646dc4,75108856,0,0x0,8
tick,0x7ff999646dc4,75125706,0,0x0,8
tick,0x7ff999646dc4,75139821,0,0x0,8
tick,0x7ff999646dc4,75155087,0,0x0,8
tick,0x7ff999646dc4,75172563,0,0x0,8
tick,0x7ff999646dc4,75186221,0,0x0,8
tick,0x7ff999646dc4,75200279,0,0x0,8
tick,0x7ff999646dc4,75215868,0,0x0,8
tick,0x7ff999646dc4,75231360,0,0x0,8
tick,0x7ff999646dc4,75246812,0,0x0,8
tick,0x7ff999646dc4,75261988,0,0x0,8
tick,0x7ff999646dc4,75277606,0,0x0,8
tick,0x7ff999646dc4,75293535,0,0x0,8
tick,0x7ff999646dc4,75309146,0,0x0,8
tick,0x7ff999646dc4,75324168,0,0x0,8
tick,0x7ff999646dc4,75339697,0,0x0,8
tick,0x7ff999646dc4,75354784,0,0x0,8
tick,0x7ff999646dc4,75370257,0,0x0,8
tick,0x7ff999646dc4,75385725,0,0x0,8
tick,0x7ff999646dc4,75400593,0,0x0,8
tick,0x7ff999646dc4,75415808,0,0x0,8
tick,0x7ff999646dc4,75431300,0,0x0,8
tick,0x7ff999646dc4,75446575,0,0x0,8
tick,0x7ff999646dc4,75461752,0,0x0,8
tick,0x7ff999646dc4,75477194,0,0x0,8
tick,0x7ff999646dc4,75492903,0,0x0,8
tick,0x7ff999646dc4,75508337,0,0x0,8
tick,0x7ff999646dc4,75523649,0,0x0,8
tick,0x7ff999646dc4,75538715,0,0x0,8
tick,0x7ff999646dc4,75554561,0,0x0,8
tick,0x7ff999646dc4,75569397,0,0x0,8
tick,0x7ff999646dc4,75584914,0,0x0,8
tick,0x7ff999646dc4,75600251,0,0x0,8
tick,0x7ff999646dc4,75615634,0,0x0,8
tick,0x7ff999646dc4,75630935,0,0x0,8
tick,0x7ff999646dc4,75646305,0,0x0,8
tick,0x7ff999646dc4,75661284,0,0x0,8
tick,0x7ff999646dc4,75676568,0,0x0,8
tick,0x7ff999646dc4,75692199,0,0x0,8
tick,0x7ff999646dc4,75707905,0,0x0,8
tick,0x7ff999646dc4,75723411,0,0x0,8
tick,0x7ff999646dc4,75738963,0,0x0,8
tick,0x7ff999646dc4,75753561,0,0x0,8
tick,0x7ff999646dc4,75768811,0,0x0,8
tick,0x7ff999646dc4,75784397,0,0x0,8
tick,0x7ff999646dc4,75799900,0,0x0,8
tick,0x7ff999646dc4,75815112,0,0x0,8
tick,0x7ff999646dc4,75830337,0,0x0,8
tick,0x7ff999646dc4,75845625,0,0x0,8
tick,0x7ff999646dc4,75861122,0,0x0,8
tick,0x7ff999646dc4,75876160,0,0x0,8
tick,0x7ff999646dc4,75891589,0,0x0,8
tick,0x7ff999646dc4,75906851,0,0x0,8
tick,0x7ff999646dc4,75922232,0,0x0,8
tick,0x7ff999646dc4,75937824,0,0x0,8
tick,0x7ff999646dc4,75953461,0,0x0,8
tick,0x7ff999646dc4,75969109,0,0x0,8
tick,0x7ff999646dc4,75984416,0,0x0,8
tick,0x7ff999646dc4,76000000,0,0x0,8
tick,0x7ff999646dc4,76015012,0,0x0,8
tick,0x7ff999646dc4,76030076,0,0x0,8
tick,0x7ff999646dc4,76045919,0,0x0,8
tick,0x7ff999646dc4,76061035,0,0x0,8
tick,0x7ff999646dc4,76076385,0,0x0,8
tick,0x7ff999646dc4,76091725,0,0x0,8
tick,0x7ff999646dc4,76107178,0,0x0,8
tick,0x7ff999646dc4,76123543,0,0x0,8
tick,0x7ff999646dc4,76137803,0,0x0,8
tick,0x7ff999646dc4,76153361,0,0x0,8
tick,0x7ff999646dc4,76168299,0,0x0,8
tick,0x7ff999646dc4,76183728,0,0x0,8
tick,0x7ff999646dc4,76199085,0,0x0,8
tick,0x7ff999646dc4,76214437,0,0x0,8
tick,0x7ff999646dc4,76230223,0,0x0,8
tick,0x7ff999646dc4,76245239,0,0x0,8
tick,0x7ff999646dc4,76260573,0,0x0,8
tick,0x7ff999646dc4,76276293,0,0x0,8
tick,0x7ff999646dc4,76291171,0,0x0,8
tick,0x7ff999646dc4,76306709,0,0x0,8
tick,0x7ff999646dc4,76321891,0,0x0,8
tick,0x7ff999646dc4,76337437,0,0x0,8
tick,0x7ff999646dc4,76353179,0,0x0,8
tick,0x7ff999646dc4,76368565,0,0x0,8
tick,0x7ff999646dc4,76383839,0,0x0,8
tick,0x7ff999646dc4,76399158,0,0x0,8
tick,0x7ff999646dc4,76414669,0,0x0,8
tick,0x7ff999646dc4,76429936,0,0x0,8
tick,0x7ff999646dc4,76445131,0,0x0,8
tick,0x7ff999646dc4,76460797,0,0x0,8
tick,0x7ff999646dc4,76475309,0,0x0,8
tick,0x7ff999646dc4,76490560,0,0x0,8
tick,0x7ff999646dc4,76506069,0,0x0,8
tick,0x7ff999646dc4,76521582,0,0x0,8
tick,0x7ff999646dc4,76536604,0,0x0,8
tick,0x7ff999646dc4,76552361,0,0x0,8
tick,0x7ff999646dc4,76567824,0,0x0,8
tick,0x7ff999646dc4,76583385,0,0x0,8
tick,0x7ff999646dc4,76599060,0,0x0,8
tick,0x7ff999646dc4,76614488,0,0x0,8
tick,0x7ff999646dc4,76629733,0,0x0,8
tick,0x7ff999646dc4,76645050,0,0x0,8
tick,0x7ff999646dc4,76660488,0,0x0,8
tick,0x7ff999646dc4,76675598,0,0x0,8
tick,0x7ff999646dc4,76690865,0,0x0,8
tick,0x7ff999646dc4,76706226,0,0x0,8
tick,0x7ff999646dc4,76721602,0,0x0,8
tick,0x7ff999646dc4,76736948,0,0x0,8
tick,0x7ff999646dc4,76752328,0,0x0,8
tick,0x7ff999646dc4,76767500,0,0x0,8
tick,0x7ff999646dc4,76783160,0,0x0,8
tick,0x7ff999646dc4,76798359,0,0x0,8
tick,0x7ff999646dc4,76813986,0,0x0,8
tick,0x7ff999646dc4,76829234,0,0x0,8
tick,0x7ff999646dc4,76844392,0,0x0,8
tick,0x7ff999646dc4,76859794,0,0x0,8
tick,0x7ff999646dc4,76874901,0,0x0,8
tick,0x7ff999646dc4,76890564,0,0x0,8
tick,0x7ff999646dc4,76905674,0,0x0,8
tick,0x7ff999646dc4,76921185,0,0x0,8
tick,0x7ff999646dc4,76936334,0,0x0,8
tick,0x7ff999646dc4,76951607,0,0x0,8
tick,0x7ff999646dc4,76966972,0,0x0,8
tick,0x7ff999646dc4,76982357,0,0x0,8
tick,0x7ff999646dc4,76997967,0,0x0,8
tick,0x7ff999646dc4,77013326,0,0x0,8
tick,0x7ff999646dc4,77028641,0,0x0,8
tick,0x7ff999646dc4,77043898,0,0x0,8
tick,0x7ff999646dc4,77059217,0,0x0,8
tick,0x7ff999646dc4,77074447,0,0x0,8
tick,0x7ff999646dc4,77089591,0,0x0,8
tick,0x7ff999646dc4,77105120,0,0x0,8
tick,0x7ff999646dc4,77122444,0,0x0,8
tick,0x7ff999646dc4,77136333,0,0x0,8
tick,0x7ff999646dc4,77151884,0,0x0,8
tick,0x7ff999646dc4,77167248,0,0x0,8
tick,0x7ff999646dc4,77182463,0,0x0,8
tick,0x7ff999646dc4,77197609,0,0x0,8
tick,0x7ff999646dc4,77213310,0,0x0,8
tick,0x7ff999646dc4,77228715,0,0x0,8
tick,0x7ff999646dc4,77244470,0,0x0,8
tick,0x7ff999646dc4,77259515,0,0x0,8
tick,0x7ff999646dc4,77274306,0,0x0,8
tick,0x7ff999646dc4,77289935,0,0x0,8
tick,0x7ff999646dc4,77305085,0,0x0,8
tick,0x7ff999646dc4,77320163,0,0x0,8
tick,0x7ff999646dc4,77335544,0,0x0,8
tick,0x7ff999646dc4,77351024,0,0x0,8
tick,0x7ff999646dc4,77366350,0,0x0,8
tick,0x7ff999646dc4,77381161,0,0x0,8
tick,0x7ff999646dc4,77396826,0,0x0,8
tick,0x7ff999646dc4,77412013,0,0x0,8
tick,0x7ff999646dc4,77427129,0,0x0,8
tick,0x7ff999646dc4,77442828,0,0x0,8
tick,0x7ff999646dc4,77458448,0,0x0,8
tick,0x7ff999646dc4,77473986,0,0x0,8
tick,0x7ff999646dc4,77489505,0,0x0,8
tick,0x7ff999646dc4,77504655,0,0x0,8
tick,0x7ff999646dc4,77520348,0,0x0,8
tick,0x7ff999646dc4,77535273,0,0x0,8
tick,0x7ff999646dc4,77550984,0,0x0,8
tick,0x7ff999646dc4,77566276,0,0x0,8
tick,0x7ff999646dc4,77581656,0,0x0,8
tick,0x7ff999646dc4,77597102,0,0x0,8
tick,0x7ff999646dc4,77612576,0,0x0,8
tick,0x7ff999646dc4,77627759,0,0x0,8
tick,0x7ff999646dc4,77643123,0,0x0,8
tick,0x7ff999646dc4,77658645,0,0x0,8
tick,0x7ff999646dc4,77673617,0,0x0,8
tick,0x7ff999646dc4,77688947,0,0x0,8
tick,0x7ff999646dc4,77704494,0,0x0,8
tick,0x7ff999646dc4,77720150,0,0x0,8
tick,0x7ff999646dc4,77735366,0,0x0,8
tick,0x7ff999646dc4,77750588,0,0x0,8
tick,0x7ff999646dc4,77766415,0,0x0,8
tick,0x7ff999646dc4,77781361,0,0x0,8
tick,0x7ff999646dc4,77796298,0,0x0,8
tick,0x7ff999646dc4,77811505,0,0x0,8
tick,0x7ff999646dc4,77827010,0,0x0,8
tick,0x7ff999646dc4,77842380,0,0x0,8
tick,0x7ff999646dc4,77857791,0,0x0,8
tick,0x7ff999646dc4,77873033,0,0x0,8
tick,0x7ff999646dc4,77888577,0,0x0,8
tick,0x7ff999646dc4,77903924,0,0x0,8
tick,0x7ff999646dc4,77919047,0,0x0,8
tick,0x7ff999646dc4,77934363,0,0x0,8
tick,0x7ff999646dc4,77950026,0,0x0,8
tick,0x7ff999646dc4,77965461,0,0x0,8
tick,0x7ff999646dc4,77980671,0,0x0,8
tick,0x7ff999646dc4,77995837,0,0x0,8
tick,0x7ff999646dc4,78011042,0,0x0,8
tick,0x7ff999646dc4,78026855,0,0x0,8
tick,0x7ff999646dc4,78042665,0,0x0,8
tick,0x7ff999646dc4,78058197,0,0x0,8
tick,0x7ff999646dc4,78073445,0,0x0,8
tick,0x7ff999646dc4,78088844,0,0x0,8
tick,0x7ff999646dc4,78103855,0,0x0,8
tick,0x7ff999646dc4,78119331,0,0x0,8
tick,0x7ff999646dc4,78134298,0,0x0,8
tick,0x7ff999646dc4,78149421,0,0x0,8
tick,0x7ff999646dc4,78165330,0,0x0,8
tick,0x7ff999646dc4,78180347,0,0x0,8
tick,0x7ff999646dc4,78195657,0,0x0,8
tick,0x7ff999646dc4,78210984,0,0x0,8
tick,0x7ff999646dc4,78226510,0,0x0,8
tick,0x7ff999646dc4,78241918,0,0x0,8
tick,0x7ff999646dc4,78257443,0,0x0,8
tick,0x7ff999646dc4,78273326,0,0x0,8
tick,0x7ff999646dc4,78288231,0,0x0,8
tick,0x7ff999646dc4,78303370,0,0x0,8
tick,0x7ff999646dc4,78318389,0,0x0,8
tick,0x7ff999646dc4,78333688,0,0x0,8
tick,0x7ff999646dc4,78349067,0,0x0,8
tick,0x7ff999646dc4,78364491,0,0x0,8
tick,0x7ff999646dc4,78379954,0,0x0,8
tick,0x7ff999646dc4,78395308,0,0x0,8
tick,0x7ff999646dc4,78410520,0,0x0,8
tick,0x7ff999646dc4,78425980,0,0x0,8
tick,0x7ff999646dc4,78441122,0,0x0,8
tick,0x7ff999646dc4,78456992,0,0x0,8
tick,0x7ff999646dc4,78472155,0,0x0,8
tick,0x7ff999646dc4,78487654,0,0x0,8
tick,0x7ff999646dc4,78502239,0,0x0,8
tick,0x7ff999646dc4,78517600,0,0x0,8
tick,0x7ff999646dc4,78533021,0,0x0,8
tick,0x7ff999646dc4,78548512,0,0x0,8
tick,0x7ff999646dc4,78564094,0,0x0,8
tick,0x7ff999646dc4,78579152,0,0x0,8
tick,0x7ff999646dc4,78594568,0,0x0,8
tick,0x7ff999646dc4,78609801,0,0x0,8
tick,0x7ff999646dc4,78625108,0,0x0,8
tick,0x7ff999646dc4,78640619,0,0x0,8
tick,0x7ff999646dc4,78656086,0,0x0,8
tick,0x7ff999646dc4,78671998,0,0x0,8
tick,0x7ff999646dc4,78687153,0,0x0,8
tick,0x7ff999646dc4,78702158,0,0x0,8
tick,0x7ff999646dc4,78717507,0,0x0,8
tick,0x7ff999646dc4,78732887,0,0x0,8
tick,0x7ff999646dc4,78748471,0,0x0,8
tick,0x7ff999646dc4,78763563,0,0x0,8
tick,0x7ff999646dc4,78779417,0,0x0,8
tick,0x7ff999646dc4,78794694,0,0x0,8
tick,0x7ff999646dc4,78810401,0,0x0,8
tick,0x7ff999646dc4,78825272,0,0x0,8
tick,0x7ff999646dc4,78840699,0,0x0,8
tick,0x7ff999646dc4,78855923,0,0x0,8
tick,0x7ff999646dc4,78871231,0,0x0,8
tick,0x7ff999646dc4,78886442,0,0x0,8
tick,0x7ff999646dc4,78901532,0,0x0,8
tick,0x7ff999646dc4,78917959,0,0x0,8
tick,0x7ff999646dc4,78933080,0,0x0,8
tick,0x7ff999646dc4,78948667,0,0x0,8
tick,0x7ff999646dc4,78963433,0,0x0,8
tick,0x7ff999646dc4,78979303,0,0x0,8
tick,0x7ff999646dc4,78994292,0,0x0,8
tick,0x7ff999646dc4,79009870,0,0x0,8
tick,0x7ff999646dc4,79025485,0,0x0,8
tick,0x7ff999646dc4,79040449,0,0x0,8
tick,0x7ff999646dc4,79056350,0,0x0,8
tick,0x7ff999646dc4,79071274,0,0x0,8
tick,0x7ff999646dc4,79086815,0,0x0,8
tick,0x7ff999646dc4,79102235,0,0x0,8
tick,0x7ff999646dc4,79117717,0,0x0,8
tick,0x7ff999646dc4,79132882,0,0x0,8
tick,0x7ff999646dc4,79148007,0,0x0,8
tick,0x7ff999646dc4,79163274,0,0x0,8
tick,0x7ff999646dc4,79178728,0,0x0,8
tick,0x7ff999646dc4,79194226,0,0x0,8
tick,0x7ff999646dc4,79209331,0,0x0,8
tick,0x7ff999646dc4,79224372,0,0x0,8
tick,0x7ff999646dc4,79240057,0,0x0,8
tick,0x7ff999646dc4,79255084,0,0x0,8
tick,0x7ff999646dc4,79270853,0,0x0,8
tick,0x7ff999646dc4,79286024,0,0x0,8
tick,0x7ff999646dc4,79301593,0,0x0,8
tick,0x7ff999646dc4,79317031,0,0x0,8
tick,0x7ff999646dc4,79332002,0,0x0,8
tick,0x7ff999646dc4,79347127,0,0x0,8
tick,0x7ff999646dc4,79362579,0,0x0,8
tick,0x7ff999646dc4,79377988,0,0x0,8
tick,0x7ff999646dc4,79393528,0,0x0,8
tick,0x7ff999646dc4,79409070,0,0x0,8
tick,0x7ff999646dc4,79423989,0,0x0,8
tick,0x7ff999646dc4,79439751,0,0x0,8
tick,0x7ff999646dc4,79454960,0,0x0,8
tick,0x7ff999646dc4,79469961,0,0x0,8
tick,0x7ff999646dc4,79485227,0,0x0,8
tick,0x7ff999646dc4,79500404,0,0x0,8
tick,0x7ff999646dc4,79515606,0,0x0,8
tick,0x7ff999646dc4,79531363,0,0x0,8
tick,0x7ff999646dc4,79546438,0,0x0,8
tick,0x7ff999646dc4,79561646,0,0x0,8
tick,0x7ff999646dc4,79576793,0,0x0,8
tick,0x7ff999646dc4,79592594,0,0x0,8
tick,0x7ff999646dc4,79607393,0,0x0,8
tick,0x7ff999646dc4,79622974,0,0x0,8
tick,0x7ff999646dc4,79638431,0,0x0,8
tick,0x7ff999646dc4,79653817,0,0x0,8
tick,0x7ff999646dc4,79669409,0,0x0,8
tick,0x7ff999646dc4,79684611,0,0x0,8
tick,0x7ff999646dc4,79699960,0,0x0,8
tick,0x7ff999646dc4,79715584,0,0x0,8
tick,0x7ff999646dc4,79730323,0,0x0,8
tick,0x7ff999646dc4,79745562,0,0x0,8
tick,0x7ff999646dc4,79760846,0,0x0,8
tick,0x7ff999646dc4,79776373,0,0x0,8
tick,0x7ff999646dc4,79791872,0,0x0,8
tick,0x7ff999646dc4,79807159,0,0x0,8
tick,0x7ff999646dc4,79822589,0,0x0,8
tick,0x7ff999646dc4,79837741,0,0x0,8
tick,0x7ff999646dc4,79853715,0,0x0,8
tick,0x7ff999646dc4,79868792,0,0x0,8
tick,0x7ff999646dc4,79883932,0,0x0,8
tick,0x7ff999646dc4,79899570,0,0x0,8
tick,0x7ff999646dc4,79915622,0,0x0,8
tick,0x7ff999646dc4,79930436,0,0x0,8
tick,0x7ff999646dc4,79945475,0,0x0,8
tick,0x7ff999646dc4,79960574,0,0x0,8
tick,0x7ff999646dc4,79976002,0,0x0,8
tick,0x7ff999646dc4,79991596,0,0x0,8
tick,0x7ff999646dc4,80006577,0,0x0,8
tick,0x7ff999646dc4,80021686,0,0x0,8
tick,0x7ff999646dc4,80037161,0,0x0,8
tick,0x7ff999646dc4,80052813,0,0x0,8
tick,0x7ff999646dc4,80068456,0,0x0,8
tick,0x7ff999646dc4,80083521,0,0x0,8
tick,0x7ff999646dc4,80098920,0,0x0,8
tick,0x7ff999646dc4,80114458,0,0x0,8
tick,0x7ff999646dc4,80130263,0,0x0,8
tick,0x7ff999646dc4,80145406,0,0x0,8
tick,0x7ff999646dc4,80160748,0,0x0,8
tick,0x7ff999646dc4,80176028,0,0x0,8
tick,0x7ff999646dc4,80191285,0,0x0,8
tick,0x7ff999646dc4,80206560,0,0x0,8
tick,0x7ff999646dc4,80221785,0,0x0,8
tick,0x7ff999646dc4,80237328,0,0x0,8
tick,0x7ff999646dc4,80252481,0,0x0,8
tick,0x7ff999646dc4,80268046,0,0x0,8
tick,0x7ff999646dc4,80283867,0,0x0,8
tick,0x7ff999646dc4,80299382,0,0x0,8
tick,0x7ff999646dc4,80314508,0,0x0,8
tick,0x7ff999646dc4,80329260,0,0x0,8
tick,0x7ff999646dc4,80344477,0,0x0,8
tick,0x7ff999646dc4,80359640,0,0x0,8
tick,0x7ff999646dc4,80375198,0,0x0,8
tick,0x7ff999646dc4,80390709,0,0x0,8
tick,0x7ff999646dc4,80406224,0,0x0,8
tick,0x7ff999646dc4,80421400,0,0x0,8
tick,0x7ff999646dc4,80436582,0,0x0,8
tick,0x7ff999646dc4,80452002,0,0x0,8
tick,0x7ff999646dc4,80467758,0,0x0,8
tick,0x7ff999646dc4,80482561,0,0x0,8
tick,0x7ff999646dc4,80497870,0,0x0,8
tick,0x7ff999646dc4,80513378,0,0x0,8
tick,0x7ff999646dc4,80528791,0,0x0,8
tick,0x7ff999646dc4,80544196,0,0x0,8
tick,0x7ff999646dc4,80559095,0,0x0,8
tick,0x7ff999646dc4,80574517,0,0x0,8
tick,0x7ff999646dc4,80589914,0,0x0,8
tick,0x7ff999646dc4,80605425,0,0x0,8
tick,0x7ff999646dc4,80620685,0,0x0,8
tick,0x7ff999646dc4,80635527,0,0x0,8
tick,0x7ff999646dc4,80651030,0,0x0,8
tick,0x7ff999646dc4,80666492,0,0x0,8
tick,0x7ff999646dc4,80682075,0,0x0,8
tick,0x7ff999646dc4,80697726,0,0x0,8
tick,0x7ff999646dc4,80712371,0,0x0,8
tick,0x7ff999646dc4,80728045,0,0x0,8
tick,0x7ff999646dc4,80743269,0,0x0,8
tick,0x7ff999646dc4,80758806,0,0x0,8
tick,0x7ff999646dc4,80774772,0,0x0,8
tick,0x7ff999646dc4,80789034,0,0x0,8
tick,0x7ff999646dc4,80805406,0,0x0,8
tick,0x7ff999646dc4,80819747,0,0x0,8
tick,0x7ff999646dc4,80835099,0,0x0,8
tick,0x7ff999646dc4,80850401,0,0x0,8
tick,0x7ff999646dc4,80865585,0,0x0,8
tick,0x7ff999646dc4,80880886,0,0x0,8
tick,0x7ff999646dc4,80896598,0,0x0,8
tick,0x7ff999646dc4,80911882,0,0x0,8
tick,0x7ff999646dc4,80927604,0,0x0,8
tick,0x7ff999646dc4,80942567,0,0x0,8
tick,0x7ff999646dc4,80957847,0,0x0,8
tick,0x7ff999646dc4,80973299,0,0x0,8
tick,0x7ff999646dc4,80988784,0,0x0,8
tick,0x7ff999646dc4,81004158,0,0x0,8
tick,0x7ff999646dc4,81019539,0,0x0,8
tick,0x7ff999646dc4,81035447,0,0x0,8
tick,0x7ff999646dc4,81050303,0,0x0,8
tick,0x7ff999646dc4,81065696,0,0x0,8
tick,0x7ff999646dc4,81081010,0,0x0,8
tick,0x7ff999646dc4,81096400,0,0x0,8
tick,0x7ff999646dc4,81111024,0,0x0,8
tick,0x7ff999646dc4,81126022,0,0x0,8
tick,0x7ff999646dc4,81141152,0,0x0,8
tick,0x7ff999646dc4,81156919,0,0x0,8
tick,0x7ff999646dc4,81171829,0,0x0,8
tick,0x7ff999646dc4,81186799,0,0x0,8
tick,0x7ff999646dc4,81201572,0,0x0,8
tick,0x7ff999646dc4,81217078,0,0x0,8
tick,0x7ff999646dc4,81232498,0,0x0,8
tick,0x7ff999646dc4,81247700,0,0x0,8
tick,0x7ff999646dc4,81262833,0,0x0,8
tick,0x7ff999646dc4,81277977,0,0x0,8
tick,0x7ff999646dc4,81293863,0,0x0,8
tick,0x7ff999646dc4,81308498,0,0x0,8
tick,0x7ff999646dc4,81324189,0,0x0,8
tick,0x7ff999646dc4,81339785,0,0x0,8
tick,0x7ff999646dc4,81355164,0,0x0,8
tick,0x7ff999646dc4,81370800,0,0x0,8
tick,0x7ff999646dc4,81385905,0,0x0,8
tick,0x7ff999646dc4,81401050,0,0x0,8
tick,0x7ff999646dc4,81416433,0,0x0,8
tick,0x7ff999646dc4,81431760,0,0x0,8
tick,0x7ff999646dc4,81447334,0,0x0,8
tick,0x7ff999646dc4,81462632,0,0x0,8
tick,0x7ff999646dc4,81478049,0,0x0,8
tick,0x7ff999646dc4,81493516,0,0x0,8
tick,0x7ff999646dc4,81508906,0,0x0,8
tick,0x7ff999646dc4,81524095,0,0x0,8
tick,0x7ff999646dc4,81539542,0,0x0,8
tick,0x7ff999646dc4,81554604,0,0x0,8
tick,0x7ff999646dc4,81570054,0,0x0,8
tick,0x7ff999646dc4,81585524,0,0x0,8
tick,0x7ff999646dc4,81600363,0,0x0,8
tick,0x7ff999646dc4,81615765,0,0x0,8
tick,0x7ff999646dc4,81631193,0,0x0,8
tick,0x7ff999646dc4,81645989,0,0x0,8
tick,0x7ff999646dc4,81661150,0,0x0,8
tick,0x7ff999646dc4,81676073,0,0x0,8
tick,0x7ff999646dc4,81690994,0,0x0,8
tick,0x7ff999646dc4,81706640,0,0x0,8
tick,0x7ff999646dc4,81721749,0,0x0,8
tick,0x7ff999646dc4,81736957,0,0x0,8
tick,0x7ff999646dc4,81752195,0,0x0,8
tick,0x7ff999646dc4,81767634,0,0x0,8
tick,0x7ff999646dc4,81783203,0,0x0,8
tick,0x7ff999646dc4,81798341,0,0x0,8
tick,0x7ff999646dc4,81813616,0,0x0,8
tick,0x7ff999646dc4,81828621,0,0x0,8
tick,0x7ff999646dc4,81844335,0,0x0,8
tick,0x7ff999646dc4,81858982,0,0x0,8
tick,0x7ff999646dc4,81874419,0,0x0,8
tick,0x7ff999646dc4,81889573,0,0x0,8
tick,0x7ff999646dc4,81905030,0,0x0,8
tick,0x7ff999646dc4,81920473,0,0x0,8
tick,0x7ff999646dc4,81935721,0,0x0,8
tick,0x7ff999646dc4,81950985,0,0x0,8
tick,0x7ff999646dc4,81966487,0,0x0,8
tick,0x7ff999646dc4,81981866,0,0x0,8
tick,0x7ff999646dc4,81996772,0,0x0,8
tick,0x7ff999646dc4,82012234,0,0x0,8
tick,0x7ff999646dc4,82027778,0,0x0,8
tick,0x7ff999646dc4,82042943,0,0x0,8
tick,0x7ff999646dc4,82058576,0,0x0,8
tick,0x7ff999646dc4,82074019,0,0x0,8
tick,0x7ff999646dc4,82089589,0,0x0,8
tick,0x7ff999646dc4,82105341,0,0x0,8
tick,0x7ff999646dc4,82120728,0,0x0,8
tick,0x7ff999646dc4,82135965,0,0x0,8
tick,0x7ff999646dc4,82151474,0,0x0,8
tick,0x7ff999646dc4,82166796,0,0x0,8
tick,0x7ff999646dc4,82181645,0,0x0,8
tick,0x7ff999646dc4,82197264,0,0x0,8
tick,0x7ff999646dc4,82212504,0,0x0,8
tick,0x7ff999646dc4,82227971,0,0x0,8
tick,0x7ff999646dc4,82243305,0,0x0,8
tick,0x7ff999646dc4,82258509,0,0x0,8
tick,0x7ff999646dc4,82273865,0,0x0,8
tick,0x7ff999646dc4,82289256,0,0x0,8
tick,0x7ff999646dc4,82304572,0,0x0,8
tick,0x7ff999646dc4,82320009,0,0x0,8
tick,0x7ff999646dc4,82335734,0,0x0,8
tick,0x7ff999646dc4,82351083,0,0x0,8
tick,0x7ff999646dc4,82366486,0,0x0,8
tick,0x7ff999646dc4,82382116,0,0x0,8
tick,0x7ff999646dc4,82397856,0,0x0,8
tick,0x7ff999646dc4,82412877,0,0x0,8
tick,0x7ff999646dc4,82428075,0,0x0,8
tick,0x7ff999646dc4,82443637,0,0x0,8
tick,0x7ff999646dc4,82459305,0,0x0,8
tick,0x7ff999646dc4,82474658,0,0x0,8
tick,0x7ff999646dc4,82489894,0,0x0,8
tick,0x7ff999646dc4,82505585,0,0x0,8
tick,0x7ff999646dc4,82520858,0,0x0,8
tick,0x7ff999646dc4,82536300,0,0x0,8
tick,0x7ff999646dc4,82551464,0,0x0,8
tick,0x7ff999646dc4,82566521,0,0x0,8
tick,0x7ff999646dc4,82581927,0,0x0,8
tick,0x7ff999646dc4,82597736,0,0x0,8
tick,0x7ff999646dc4,82612793,0,0x0,8
tick,0x7ff999646dc4,82628101,0,0x0,8
tick,0x7ff999646dc4,82643420,0,0x0,8
tick,0x7ff999646dc4,82658874,0,0x0,8
tick,0x7ff999646dc4,82674236,0,0x0,8
tick,0x7ff999646dc4,82689415,0,0x0,8
tick,0x7ff999646dc4,82704748,0,0x0,8
tick,0x7ff999646dc4,82720422,0,0x0,8
tick,0x7ff999646dc4,82735267,0,0x0,8
tick,0x7ff999646dc4,82750725,0,0x0,8
tick,0x7ff999646dc4,82765983,0,0x0,8
tick,0x7ff999646dc4,82781452,0,0x0,8
tick,0x7ff999646dc4,82797028,0,0x0,8
tick,0x7ff999646dc4,82812436,0,0x0,8
tick,0x7ff999646dc4,82828231,0,0x0,8
tick,0x7ff999646dc4,82843050,0,0x0,8
tick,0x7ff999646dc4,82858669,0,0x0,8
tick,0x7ff999646dc4,82873513,0,0x0,8
tick,0x7ff999646dc4,82888940,0,0x0,8
tick,0x7ff999646dc4,82904324,0,0x0,8
tick,0x7ff999646dc4,82919693,0,0x0,8
tick,0x7ff999646dc4,82934776,0,0x0,8
tick,0x7ff999646dc4,82950414,0,0x0,8
tick,0x7ff999646dc4,82965103,0,0x0,8
tick,0x7ff999646dc4,82980853,0,0x0,8
tick,0x7ff999646dc4,82996255,0,0x0,8
tick,0x7ff999646dc4,83011759,0,0x0,8
tick,0x7ff999646dc4,83028172,0,0x0,8
tick,0x7ff999646dc4,83042512,0,0x0,8
tick,0x7ff999646dc4,83057672,0,0x0,8
tick,0x7ff999646dc4,83073064,0,0x0,8
tick,0x7ff999646dc4,83088635,0,0x0,8
tick,0x7ff999646dc4,83104173,0,0x0,8
tick,0x7ff999646dc4,83119846,0,0x0,8
tick,0x7ff999646dc4,83134226,0,0x0,8
tick,0x7ff999646dc4,83149660,0,0x0,8
tick,0x7ff999646dc4,83165215,0,0x0,8
tick,0x7ff999646dc4,83180932,0,0x0,8
tick,0x7ff999646dc4,83196203,0,0x0,8
tick,0x7ff999646dc4,83210968,0,0x0,8
tick,0x7ff999646dc4,83226449,0,0x0,8
tick,0x7ff999646dc4,83241922,0,0x0,8
tick,0x7ff999646dc4,83256948,0,0x0,8
tick,0x7ff999646dc4,83272295,0,0x0,8
tick,0x7ff999646dc4,83287846,0,0x0,8
tick,0x7ff999646dc4,83303306,0,0x0,8
tick,0x7ff999646dc4,83318978,0,0x0,8
tick,0x7ff999646dc4,83334435,0,0x0,8
tick,0x7ff999646dc4,83349578,0,0x0,8
tick,0x7ff999646dc4,83364653,0,0x0,8
tick,0x7ff999646dc4,83380278,0,0x0,8
tick,0x7ff999646dc4,83396384,0,0x0,8
tick,0x7ff999646dc4,83411163,0,0x0,8
tick,0x7ff999646dc4,83426393,0,0x0,8
tick,0x7ff999646dc4,83440943,0,0x0,8
tick,0x7ff999646dc4,83456619,0,0x0,8
tick,0x7ff999646dc4,83471779,0,0x0,8
tick,0x7ff999646dc4,83487224,0,0x0,8
tick,0x7ff999646dc4,83503156,0,0x0,8
tick,0x7ff999646dc4,83518268,0,0x0,8
tick,0x7ff999646dc4,83533452,0,0x0,8
tick,0x7ff999646dc4,83549352,0,0x0,8
tick,0x7ff999646dc4,83564653,0,0x0,8
tick,0x7ff999646dc4,83579641,0,0x0,8
tick,0x7ff999646dc4,83595277,0,0x0,8
tick,0x7ff999646dc4,83610517,0,0x0,8
tick,0x7ff999646dc4,83625953,0,0x0,8
tick,0x7ff999646dc4,83641203,0,0x0,8
tick,0x7ff999646dc4,83656421,0,0x0,8
tick,0x7ff999646dc4,83671630,0,0x0,8
tick,0x7ff999646dc4,83686530,0,0x0,8
tick,0x7ff999646dc4,83701727,0,0x0,8
tick,0x7ff999646dc4,83716991,0,0x0,8
tick,0x7ff999646dc4,83732417,0,0x0,8
tick,0x7ff999646dc4,83747911,0,0x0,8
tick,0x7ff999646dc4,83763484,0,0x0,8
tick,0x7ff999646dc4,83780266,0,0x0,8
tick,0x7ff999646dc4,83793853,0,0x0,8
tick,0x7ff999646dc4,83808831,0,0x0,8
tick,0x7ff999646dc4,83824150,0,0x0,8
tick,0x7ff999646dc4,83840089,0,0x0,8
tick,0x7ff999646dc4,83854816,0,0x0,8
tick,0x7ff999646dc4,83870371,0,0x0,8
tick,0x7ff999646dc4,83885682,0,0x0,8
tick,0x7ff999646dc4,83901257,0,0x0,8
tick,0x7ff999646dc4,83916490,0,0x0,8
tick,0x7ff999646dc4,83931805,0,0x0,8
tick,0x7ff999646dc4,83946972,0,0x0,8
tick,0x7ff999646dc4,83961866,0,0x0,8
tick,0x7ff999646dc4,83977151,0,0x0,8
tick,0x7ff999646dc4,83992894,0,0x0,8
tick,0x7ff999646dc4,84008344,0,0x0,8
tick,0x7ff999646dc4,84024295,0,0x0,8
tick,0x7ff999646dc4,84038897,0,0x0,8
tick,0x7ff999646dc4,84054644,0,0x0,8
tick,0x7ff999646dc4,84070124,0,0x0,8
tick,0x7ff999646dc4,84084927,0,0x0,8
tick,0x7ff999646dc4,84100132,0,0x0,8
tick,0x7ff999646dc4,84115587,0,0x0,8
tick,0x7ff999646dc4,84131277,0,0x0,8
tick,0x7ff999646dc4,84146735,0,0x0,8
tick,0x7ff999646dc4,84162171,0,0x0,8
tick,0x7ff999646dc4,84177320,0,0x0,8
tick,0x7ff999646dc4,84192070,0,0x0,8
tick,0x7ff999646dc4,84207531,0,0x0,8
tick,0x7ff999646dc4,84223614,0,0x0,8
tick,0x7ff999646dc4,84238452,0,0x0,8
tick,0x7ff999646dc4,84253467,0,0x0,8
tick,0x7ff999646dc4,84268909,0,0x0,8
tick,0x7ff999646dc4,84284161,0,0x0,8
tick,0x7ff999646dc4,84299605,0,0x0,8
tick,0x7ff999646dc4,84315584,0,0x0,8
tick,0x7ff999646dc4,84330373,0,0x0,8
tick,0x7ff999646dc4,84346046,0,0x0,8
tick,0x7ff999646dc4,84361550,0,0x0,8
tick,0x7ff999646dc4,84376736,0,0x0,8
tick,0x7ff999646dc4,84392018,0,0x0,8
tick,0x7ff999646dc4,84407155,0,0x0,8
tick,0x7ff999646dc4,84422908,0,0x0,8
tick,0x7ff999646dc4,84437953,0,0x0,8
tick,0x7ff999646dc4,84453291,0,0x0,8
tick,0x7ff999646dc4,84468810,0,0x0,8
tick,0x7ff999646dc4,84484256,0,0x0,8
tick,0x7ff999646dc4,84499787,0,0x0,8
tick,0x7ff999646dc4,84514886,0,0x0,8
tick,0x7ff999646dc4,84530655,0,0x0,8
tick,0x7ff999646dc4,84546116,0,0x0,8
tick,0x7ff999646dc4,84561263,0,0x0,8
tick,0x7ff999646dc4,84576296,0,0x0,8
tick,0x7ff999646dc4,84591512,0,0x0,8
tick,0x7ff999646dc4,84607233,0,0x0,8
tick,0x7ff999646dc4,84623095,0,0x0,8
tick,0x7ff999646dc4,84637478,0,0x0,8
tick,0x7ff999646dc4,84652965,0,0x0,8
tick,0x7ff999646dc4,84668019,0,0x0,8
tick,0x7ff999646dc4,84683434,0,0x0,8
tick,0x7ff999646dc4,84698579,0,0x0,8
tick,0x7ff999646dc4,84713573,0,0x0,8
tick,0x7ff999646dc4,84728820,0,0x0,8
tick,0x7ff999646dc4,84743946,0,0x0,8
tick,0x7ff999646dc4,84759410,0,0x0,8
tick,0x7ff999646dc4,84774763,0,0x0,8
tick,0x7ff999646dc4,84789976,0,0x0,8
tick,0x7ff999646dc4,84805349,0,0x0,8
tick,0x7ff999646dc4,84821083,0,0x0,8
tick,0x7ff999646dc4,84836117,0,0x0,8
tick,0x7ff999646dc4,84851931,0,0x0,8
tick,0x7ff999646dc4,84866674,0,0x0,8
tick,0x7ff999646dc4,84881840,0,0x0,8
tick,0x7ff999646dc4,84897040,0,0x0,8
tick,0x7ff999646dc4,84913722,0,0x0,8
tick,0x7ff999646dc4,84928509,0,0x0,8
tick,0x7ff999646dc4,84943185,0,0x0,8
tick,0x7ff999646dc4,84958873,0,0x0,8
tick,0x7ff999646dc4,84974624,0,0x0,8
tick,0x7ff999646dc4,84990228,0,0x0,8
tick,0x7ff999646dc4,85005485,0,0x0,8
tick,0x7ff999646dc4,85020640,0,0x0,8
tick,0x7ff999646dc4,85036073,0,0x0,8
tick,0x7ff999646dc4,85051352,0,0x0,8
tick,0x7ff999646dc4,85066570,0,0x0,8
tick,0x7ff999646dc4,85082003,0,0x0,8
tick,0x7ff999646dc4,85097348,0,0x0,8
tick,0x7ff999646dc4,85112785,0,0x0,8
tick,0x7ff999646dc4,85127812,0,0x0,8
tick,0x7ff999646dc4,85143399,0,0x0,8
tick,0x7ff999646dc4,85159042,0,0x0,8
tick,0x7ff999646dc4,85173888,0,0x0,8
tick,0x7ff999646dc4,85189501,0,0x0,8
tick,0x7ff999646dc4,85204933,0,0x0,8
tick,0x7ff999646dc4,85220095,0,0x0,8
tick,0x7ff999646dc4,85235242,0,0x0,8
tick,0x7ff999646dc4,85250639,0,0x0,8
tick,0x7ff999646dc4,85266112,0,0x0,8
tick,0x7ff999646dc4,85281852,0,0x0,8
tick,0x7ff999646dc4,85297229,0,0x0,8
tick,0x7ff999646dc4,85312088,0,0x0,8
tick,0x7ff999646dc4,85327593,0,0x0,8
tick,0x7ff999646dc4,85342925,0,0x0,8
tick,0x7ff999646dc4,85358527,0,0x0,8
tick,0x7ff999646dc4,85373959,0,0x0,8
tick,0x7ff999646dc4,85389369,0,0x0,8
tick,0x7ff999646dc4,85404695,0,0x0,8
tick,0x7ff999646dc4,85419933,0,0x0,8
tick,0x7ff999646dc4,85435105,0,0x0,8
tick,0x7ff999646dc4,85450357,0,0x0,8
tick,0x7ff999646dc4,85465716,0,0x0,8
tick,0x7ff999646dc4,85480861,0,0x0,8
tick,0x7ff999646dc4,85496626,0,0x0,8
tick,0x7ff999646dc4,85511923,0,0x0,8
tick,0x7ff999646dc4,85527689,0,0x0,8
tick,0x7ff999646dc4,85542872,0,0x0,8
tick,0x7ff999646dc4,85558174,0,0x0,8
tick,0x7ff999646dc4,85573667,0,0x0,8
tick,0x7ff999646dc4,85588798,0,0x0,8
tick,0x7ff999646dc4,85604223,0,0x0,8
tick,0x7ff999646dc4,85619020,0,0x0,8
tick,0x7ff999646dc4,85634379,0,0x0,8
tick,0x7ff999646dc4,85649558,0,0x0,8
tick,0x7ff999646dc4,85664952,0,0x0,8
tick,0x7ff999646dc4,85679896,0,0x0,8
tick,0x7ff999646dc4,85695552,0,0x0,8
tick,0x7ff999646dc4,85710420,0,0x0,8
tick,0x7ff999646dc4,85725735,0,0x0,8
tick,0x7ff999646dc4,85741334,0,0x0,8
tick,0x7ff999646dc4,85756744,0,0x0,8
tick,0x7ff999646dc4,85772023,0,0x0,8
tick,0x7ff999646dc4,85787374,0,0x0,8
tick,0x7ff999646dc4,85802795,0,0x0,8
tick,0x7ff999646dc4,85817832,0,0x0,8
tick,0x7ff999646dc4,85833584,0,0x0,8
tick,0x7ff999646dc4,85848914,0,0x0,8
tick,0x7ff999646dc4,85864545,0,0x0,8
tick,0x7ff999646dc4,85879551,0,0x0,8
tick,0x7ff999646dc4,85894934,0,0x0,8
tick,0x7ff999646dc4,85910168,0,0x0,8
tick,0x7ff999646dc4,85925495,0,0x0,8
tick,0x7ff999646dc4,85940580,0,0x0,8
tick,0x7ff999646dc4,85955915,0,0x0,8
tick,0x7ff999646dc4,85971411,0,0x0,8
tick,0x7ff999646dc4,85986745,0,0x0,8
tick,0x7ff999646dc4,86002021,0,0x0,8
tick,0x7ff999646dc4,86017273,0,0x0,8
tick,0x7ff999646dc4,86033127,0,0x0,8
tick,0x7ff999646dc4,86048287,0,0x0,8
tick,0x7ff999646dc4,86063638,0,0x0,8
tick,0x7ff999646dc4,86078916,0,0x0,8
tick,0x7ff999646dc4,86094301,0,0x0,8
tick,0x7ff999646dc4,86109812,0,0x0,8
tick,0x7ff999646dc4,86125054,0,0x0,8
tick,0x7ff999646dc4,86140487,0,0x0,8
tick,0x7ff999646dc4,86155676,0,0x0,8
tick,0x7ff999646dc4,86171407,0,0x0,8
tick,0x7ff999646dc4,86186446,0,0x0,8
tick,0x7ff999646dc4,86201829,0,0x0,8
tick,0x7ff999646dc4,86217284,0,0x0,8
tick,0x7ff999646dc4,86232331,0,0x0,8
tick,0x7ff999646dc4,86247531,0,0x0,8
tick,0x7ff999646dc4,86262867,0,0x0,8
tick,0x7ff999646dc4,86278460,0,0x0,8
tick,0x7ff999646dc4,86293700,0,0x0,8
tick,0x7ff999646dc4,86309597,0,0x0,8
tick,0x7ff999646dc4,86324767,0,0x0,8
tick,0x7ff999646dc4,86339661,0,0x0,8
tick,0x7ff999646dc4,86355077,0,0x0,8
tick,0x7ff999646dc4,86370639,0,0x0,8
tick,0x7ff999646dc4,86385882,0,0x0,8
tick,0x7ff999646dc4,86401270,0,0x0,8
tick,0x7ff999646dc4,86416386,0,0x0,8
tick,0x7ff999646dc4,86431618,0,0x0,8
tick,0x7ff999646dc4,86446749,0,0x0,8
tick,0x7ff999646dc4,86462363,0,0x0,8
tick,0x7ff999646dc4,86477987,0,0x0,8
tick,0x7ff999646dc4,86492933,0,0x0,8
tick,0x7ff999646dc4,86508606,0,0x0,8
tick,0x7ff999646dc4,86524068,0,0x0,8
tick,0x7ff999646dc4,86539317,0,0x0,8
tick,0x7ff999646dc4,86554656,0,0x0,8
tick,0x7ff999646dc4,86570212,0,0x0,8
tick,0x7ff999646dc4,86585599,0,0x0,8
tick,0x7ff999646dc4,86600864,0,0x0,8
tick,0x7ff999646dc4,86615868,0,0x0,8
tick,0x7ff999646dc4,86631313,0,0x0,8
tick,0x7ff999646dc4,86646421,0,0x0,8
tick,0x7ff999646dc4,86662012,0,0x0,8
tick,0x7ff999646dc4,86677473,0,0x0,8
tick,0x7ff999646dc4,86692292,0,0x0,8
tick,0x7ff999646dc4,86707686,0,0x0,8
tick,0x7ff999646dc4,86723133,0,0x0,8
tick,0x7ff999646dc4,86738719,0,0x0,8
tick,0x7ff999646dc4,86754210,0,0x0,8
tick,0x7ff999646dc4,86769463,0,0x0,8
tick,0x7ff999646dc4,86784711,0,0x0,8
tick,0x7ff999646dc4,86800650,0,0x0,8
tick,0x7ff999646dc4,86815220,0,0x0,8
tick,0x7ff999646dc4,86830463,0,0x0,8
tick,0x7ff999646dc4,86845880,0,0x0,8
tick,0x7ff999646dc4,86860870,0,0x0,8
tick,0x7ff999646dc4,86876443,0,0x0,8
tick,0x7ff999646dc4,86891643,0,0x0,8
tick,0x7ff999646dc4,86906646,0,0x0,8
tick,0x7ff999646dc4,86922018,0,0x0,8
tick,0x7ff999646dc4,86937267,0,0x0,8
tick,0x7ff999646dc4,86952964,0,0x0,8
tick,0x7ff999646dc4,86967968,0,0x0,8
tick,0x7ff999646dc4,86983505,0,0x0,8
tick,0x7ff999646dc4,86998816,0,0x0,8
tick,0x7ff999646dc4,87014012,0,0x0,8
tick,0x7ff999646dc4,87029398,0,0x0,8
tick,0x7ff999646dc4,87044731,0,0x0,8
tick,0x7ff999646dc4,87059869,0,0x0,8
tick,0x7ff999646dc4,87075089,0,0x0,8
tick,0x7ff999646dc4,87090373,0,0x0,8
tick,0x7ff999646dc4,87105506,0,0x0,8
tick,0x7ff999646dc4,87121306,0,0x0,8
tick,0x7ff999646dc4,87135865,0,0x0,8
tick,0x7ff999646dc4,87151633,0,0x0,8
tick,0x7ff999646dc4,87167216,0,0x0,8
tick,0x7ff999646dc4,87182380,0,0x0,8
tick,0x7ff999646dc4,87197323,0,0x0,8
tick,0x7ff999646dc4,87212273,0,0x0,8
tick,0x7ff999646dc4,87227383,0,0x0,8
tick,0x7ff999646dc4,87242863,0,0x0,8
tick,0x7ff999646dc4,87258034,0,0x0,8
tick,0x7ff999646dc4,87273535,0,0x0,8
tick,0x7ff999646dc4,87288901,0,0x0,8
tick,0x7ff999646dc4,87304027,0,0x0,8
tick,0x7ff999646dc4,87319298,0,0x0,8
tick,0x7ff999646dc4,87334629,0,0x0,8
tick,0x7ff999646dc4,87349813,0,0x0,8
tick,0x7ff999646dc4,87365009,0,0x0,8
tick,0x7ff999646dc4,87380564,0,0x0,8
tick,0x7ff999646dc4,87395287,0,0x0,8
tick,0x7ff999646dc4,87410721,0,0x0,8
tick,0x7ff999646dc4,87426761,0,0x0,8
tick,0x7ff999646dc4,87441510,0,0x0,8
tick,0x7ff999646dc4,87457003,0,0x0,8
tick,0x7ff999646dc4,87472348,0,0x0,8
tick,0x7ff999646dc4,87487695,0,0x0,8
tick,0x7ff999646dc4,87502842,0,0x0,8
tick,0x7ff999646dc4,87518555,0,0x0,8
tick,0x7ff999646dc4,87533692,0,0x0,8
tick,0x7ff999646dc4,87549348,0,0x0,8
tick,0x7ff999646dc4,87564327,0,0x0,8
tick,0x7ff999646dc4,87579657,0,0x0,8
tick,0x7ff999646dc4,87595075,0,0x0,8
tick,0x7ff999646dc4,87610153,0,0x0,8
tick,0x7ff999646dc4,87625766,0,0x0,8
tick,0x7ff999646dc4,87640986,0,0x0,8
tick,0x7ff999646dc4,87656046,0,0x0,8
tick,0x7ff999646dc4,87671429,0,0x0,8
tick,0x7ff999646dc4,87686644,0,0x0,8
tick,0x7ff999646dc4,87702083,0,0x0,8
tick,0x7ff999646dc4,87717338,0,0x0,8
tick,0x7ff999646dc4,87732727,0,0x0,8
tick,0x7ff999646dc4,87747810,0,0x0,8
tick,0x7ff999646dc4,87763536,0,0x0,8
tick,0x7ff999646dc4,87779481,0,0x0,8
tick,0x7ff999646dc4,87795009,0,0x0,8
tick,0x7ff999646dc4,87810146,0,0x0,8
tick,0x7ff999646dc4,87825567,0,0x0,8
tick,0x7ff999646dc4,87841131,0,0x0,8
tick,0x7ff999646dc4,87856189,0,0x0,8
tick,0x7ff999646dc4,87871674,0,0x0,8
tick,0x7ff999646dc4,87887016,0,0x0,8
tick,0x7ff999646dc4,87902050,0,0x0,8
tick,0x7ff999646dc4,87917691,0,0x0,8
tick,0x7ff999646dc4,87933170,0,0x0,8
tick,0x7ff999646dc4,87948411,0,0x0,8
tick,0x7ff999646dc4,87964084,0,0x0,8
tick,0x7ff999646dc4,87979351,0,0x0,8
tick,0x7ff999646dc4,87994996,0,0x0,8
tick,0x7ff999646dc4,88009897,0,0x0,8
tick,0x7ff999646dc4,88024930,0,0x0,8
tick,0x7ff999646dc4,88040457,0,0x0,8
tick,0x7ff999646dc4,88056238,0,0x0,8
tick,0x7ff999646dc4,88071179,0,0x0,8
tick,0x7ff999646dc4,88086201,0,0x0,8
tick,0x7ff999646dc4,88101707,0,0x0,8
tick,0x7ff999646dc4,88116778,0,0x0,8
tick,0x7ff999646dc4,88132532,0,0x0,8
tick,0x7ff999646dc4,88147929,0,0x0,8
tick,0x7ff999646dc4,88162904,0,0x0,8
tick,0x7ff999646dc4,88178127,0,0x0,8
tick,0x7ff999646dc4,88193439,0,0x0,8
tick,0x7ff999646dc4,88208598,0,0x0,8
tick,0x7ff999646dc4,88223979,0,0x0,8
tick,0x7ff999646dc4,88239169,0,0x0,8
tick,0x7ff999646dc4,88254404,0,0x0,8
tick,0x7ff999646dc4,88270081,0,0x0,8
tick,0x7ff999646dc4,88285459,0,0x0,8
tick,0x7ff999646dc4,88301001,0,0x0,8
tick,0x7ff999646dc4,88316418,0,0x0,8
tick,0x7ff999646dc4,88331690,0,0x0,8
tick,0x7ff999646dc4,88346708,0,0x0,8
tick,0x7ff999646dc4,88361915,0,0x0,8
tick,0x7ff999646dc4,88377264,0,0x0,8
tick,0x7ff999646dc4,88392998,0,0x0,8
tick,0x7ff999646dc4,88408123,0,0x0,8
tick,0x7ff999646dc4,88423385,0,0x0,8
tick,0x7ff999646dc4,88438764,0,0x0,8
tick,0x7ff999646dc4,88454256,0,0x0,8
tick,0x7ff999646dc4,88469339,0,0x0,8
tick,0x7ff999646dc4,88484813,0,0x0,8
tick,0x7ff999646dc4,88500056,0,0x0,8
tick,0x7ff999646dc4,88515622,0,0x0,8
tick,0x7ff999646dc4,88531356,0,0x0,8
tick,0x7ff999646dc4,88546385,0,0x0,8
tick,0x7ff999646dc4,88561574,0,0x0,8
tick,0x7ff999646dc4,88576818,0,0x0,8
tick,0x7ff999646dc4,88592661,0,0x0,8
tick,0x7ff999646dc4,88607485,0,0x0,8
tick,0x7ff999646dc4,88622847,0,0x0,8
tick,0x7ff999646dc4,88638268,0,0x0,8
tick,0x7ff999646dc4,88653868,0,0x0,8
tick,0x7ff999646dc4,88669480,0,0x0,8
tick,0x7ff999646dc4,88684596,0,0x0,8
tick,0x7ff999646dc4,88699782,0,0x0,8
tick,0x7ff999646dc4,88715289,0,0x0,8
tick,0x7ff999646dc4,88731063,0,0x0,8
tick,0x7ff999646dc4,88746334,0,0x0,8
tick,0x7ff999646dc4,88761278,0,0x0,8
tick,0x7ff999646dc4,88776481,0,0x0,8
tick,0x7ff999646dc4,88792276,0,0x0,8
tick,0x7ff999646dc4,88807514,0,0x0,8
tick,0x7ff999646dc4,88822487,0,0x0,8
tick,0x7ff999646dc4,88837866,0,0x0,8
tick,0x7ff999646dc4,88853454,0,0x0,8
tick,0x7ff999646dc4,88868173,0,0x0,8
tick,0x7ff999646dc4,88883481,0,0x0,8
tick,0x7ff999646dc4,88899447,0,0x0,8
tick,0x7ff999646dc4,88914288,0,0x0,8
tick,0x7ff999646dc4,88929852,0,0x0,8
tick,0x7ff999646dc4,88944675,0,0x0,8
tick,0x7ff999646dc4,88960273,0,0x0,8
tick,0x7ff999646dc4,88975732,0,0x0,8
tick,0x7ff999646dc4,88990862,0,0x0,8
tick,0x7ff999646dc4,89006458,0,0x0,8
tick,0x7ff999646dc4,89021887,0,0x0,8
tick,0x7ff999646dc4,89036894,0,0x0,8
tick,0x7ff999646dc4,89052340,0,0x0,8
tick,0x7ff999646dc4,89067685,0,0x0,8
tick,0x7ff999646dc4,89082760,0,0x0,8
tick,0x7ff999646dc4,89097960,0,0x0,8
tick,0x7ff999646dc4,89113288,0,0x0,8
tick,0x7ff999646dc4,89128346,0,0x0,8
tick,0x7ff999646dc4,89143495,0,0x0,8
tick,0x7ff999646dc4,89158920,0,0x0,8
tick,0x7ff999646dc4,89174501,0,0x0,8
tick,0x7ff999646dc4,89189845,0,0x0,8
tick,0x7ff999646dc4,89205128,0,0x0,8
tick,0x7ff999646dc4,89220569,0,0x0,8
tick,0x7ff999646dc4,89235724,0,0x0,8
tick,0x7ff999646dc4,89251353,0,0x0,8
tick,0x7ff999646dc4,89266823,0,0x0,8
tick,0x7ff999646dc4,89282467,0,0x0,8
tick,0x7ff999646dc4,89298265,0,0x0,8
tick,0x7ff999646dc4,89313250,0,0x0,8
tick,0x7ff999646dc4,89328154,0,0x0,8
tick,0x7ff999646dc4,89343013,0,0x0,8
tick,0x7ff999646dc4,89359326,0,0x0,8
tick,0x7ff999646dc4,89373690,0,0x0,8
tick,0x7ff999646dc4,89389642,0,0x0,8
tick,0x7ff999646dc4,89404921,0,0x0,8
tick,0x7ff999646dc4,89419828,0,0x0,8
tick,0x7ff999646dc4,89435538,0,0x0,8
tick,0x7ff999646dc4,89450772,0,0x0,8
tick,0x7ff999646dc4,89465636,0,0x0,8
tick,0x7ff999646dc4,89481211,0,0x0,8
tick,0x7ff999646dc4,89498213,0,0x0,8
tick,0x7ff999646dc4,89511908,0,0x0,8
tick,0x7ff999646dc4,89527452,0,0x0,8
tick,0x7ff999646dc4,89543567,0,0x0,8
tick,0x7ff999646dc4,89558171,0,0x0,8
tick,0x7ff999646dc4,89573511,0,0x0,8
tick,0x7ff999646dc4,89588669,0,0x0,8
tick,0x7ff999646dc4,89604156,0,0x0,8
tick,0x7ff999646dc4,89619259,0,0x0,8
tick,0x7ff999646dc4,89635309,0,0x0,8
tick,0x7ff999646dc4,89650083,0,0x0,8
tick,0x7ff999646dc4,89665349,0,0x0,8
tick,0x7ff999646dc4,89680394,0,0x0,8
tick,0x7ff999646dc4,89695367,0,0x0,8
tick,0x7ff999646dc4,89710772,0,0x0,8
tick,0x7ff999646dc4,89726221,0,0x0,8
tick,0x7ff999646dc4,89741472,0,0x0,8
tick,0x7ff999646dc4,89757416,0,0x0,8
tick,0x7ff999646dc4,89772508,0,0x0,8
tick,0x7ff999646dc4,89788241,0,0x0,8
tick,0x7ff999646dc4,89803044,0,0x0,8
tick,0x7ff999646dc4,89818465,0,0x0,8
tick,0x7ff999646dc4,89833616,0,0x0,8
tick,0x7ff999646dc4,89848577,0,0x0,8
tick,0x7ff999646dc4,89863960,0,0x0,8
tick,0x7ff999646dc4,89879219,0,0x0,8
tick,0x7ff999646dc4,89894857,0,0x0,8
tick,0x7ff999646dc4,89909920,0,0x0,8
tick,0x7ff999646dc4,89925173,0,0x0,8
tick,0x7ff999646dc4,89940168,0,0x0,8
tick,0x7ff999646dc4,89955407,0,0x0,8
tick,0x7ff999646dc4,89971482,0,0x0,8
tick,0x7ff999646dc4,89986465,0,0x0,8
tick,0x7ff999646dc4,90002102,0,0x0,8
tick,0x7ff999646dc4,90017313,0,0x0,8
tick,0x7ff999646dc4,90032164,0,0x0,8
tick,0x7ff999646dc4,90047154,0,0x0,8
tick,0x7ff999646dc4,90064071,0,0x0,8
tick,0x7ff999646dc4,90077953,0,0x0,8
tick,0x7ff999646dc4,90093501,0,0x0,8
tick,0x7ff999646dc4,90109213,0,0x0,8
tick,0x7ff999646dc4,90125133,0,0x0,8
tick,0x7ff999646dc4,90139777,0,0x0,8
tick,0x7ff999646dc4,90155536,0,0x0,8
tick,0x7ff999646dc4,90171323,0,0x0,8
tick,0x7ff999646dc4,90185434,0,0x0,8
tick,0x7ff999646dc4,90201040,0,0x0,8
tick,0x7ff999646dc4,90215637,0,0x0,8
tick,0x7ff999646dc4,90231048,0,0x0,8
tick,0x7ff999646dc4,90246236,0,0x0,8
tick,0x7ff999646dc4,90261706,0,0x0,8
tick,0x7ff999646dc4,90277174,0,0x0,8
tick,0x7ff999646dc4,90292588,0,0x0,8
tick,0x7ff999646dc4,90308359,0,0x0,8
tick,0x7ff999646dc4,90323505,0,0x0,8
tick,0x7ff999646dc4,90338730,0,0x0,8
tick,0x7ff999646dc4,90353570,0,0x0,8
tick,0x7ff999646dc4,90369060,0,0x0,8
tick,0x7ff999646dc4,90384455,0,0x0,8
tick,0x7ff999646dc4,90399670,0,0x0,8
tick,0x7ff999646dc4,90414686,0,0x0,8
tick,0x7ff999646dc4,90429946,0,0x0,8
tick,0x7ff999646dc4,90445505,0,0x0,8
tick,0x7ff999646dc4,90460702,0,0x0,8
tick,0x7ff999646dc4,90475510,0,0x0,8
tick,0x7ff999646dc4,90490783,0,0x0,8
tick,0x7ff999646dc4,90506198,0,0x0,8
tick,0x7ff999646dc4,90521713,0,0x0,8
tick,0x7ff999646dc4,90537082,0,0x0,8
tick,0x7ff999646dc4,90552270,0,0x0,8
tick,0x7ff999646dc4,90567390,0,0x0,8
tick,0x7ff999646dc4,90582674,0,0x0,8
tick,0x7ff999646dc4,90598147,0,0x0,8
tick,0x7ff999646dc4,90613073,0,0x0,8
tick,0x7ff999646dc4,90628419,0,0x0,8
tick,0x7ff999646dc4,90643081,0,0x0,8
tick,0x7ff999646dc4,90658622,0,0x0,8
tick,0x7ff999646dc4,90673748,0,0x0,8
tick,0x7ff999646dc4,90689696,0,0x0,8
tick,0x7ff999646dc4,90705129,0,0x0,8
tick,0x7ff999646dc4,90719228,0,0x0,8
tick,0x7ff999646dc4,90734741,0,0x0,8
tick,0x7ff999646dc4,90750196,0,0x0,8
tick,0x7ff999646dc4,90765397,0,0x0,8
tick,0x7ff999646dc4,90780615,0,0x0,8
tick,0x7ff999646dc4,90796324,0,0x0,8
tick,0x7ff999646dc4,90811752,0,0x0,8
tick,0x7ff999646dc4,90827233,0,0x0,8
tick,0x7ff999646dc4,90842606,0,0x0,8
tick,0x7ff999646dc4,90858234,0,0x0,8
tick,0x7ff999646dc4,90873679,0,0x0,8
tick,0x7ff999646dc4,90888836,0,0x0,8
tick,0x7ff999646dc4,90904218,0,0x0,8
tick,0x7ff999646dc4,90920228,0,0x0,8
tick,0x7ff999646dc4,90934771,0,0x0,8
tick,0x7ff999646dc4,90949932,0,0x0,8
tick,0x7ff999646dc4,90965036,0,0x0,8
tick,0x7ff999646dc4,90980724,0,0x0,8
tick,0x7ff999646dc4,90996156,0,0x0,8
tick,0x7ff999646dc4,91011530,0,0x0,8
tick,0x7ff999646dc4,91026462,0,0x0,8
tick,0x7ff999646dc4,91041847,0,0x0,8
tick,0x7ff999646dc4,91057401,0,0x0,8
tick,0x7ff999646dc4,91072756,0,0x0,8
tick,0x7ff999646dc4,91087996,0,0x0,8
tick,0x7ff999646dc4,91103258,0,0x0,8
tick,0x7ff999646dc4,91118674,0,0x0,8
tick,0x7ff999646dc4,91133558,0,0x0,8
tick,0x7ff999646dc4,91148982,0,0x0,8
tick,0x7ff999646dc4,91164514,0,0x0,8
tick,0x7ff999646dc4,91179721,0,0x0,8
tick,0x7ff999646dc4,91195208,0,0x0,8
tick,0x7ff999646dc4,91209785,0,0x0,8
tick,0x7ff999646dc4,91225188,0,0x0,8
tick,0x7ff999646dc4,91240284,0,0x0,8
tick,0x7ff999646dc4,91255652,0,0x0,8
tick,0x7ff999646dc4,91271820,0,0x0,8
tick,0x7ff999646dc4,91286550,0,0x0,8
tick,0x7ff999646dc4,91301643,0,0x0,8
tick,0x7ff999646dc4,91317186,0,0x0,8
tick,0x7ff999646dc4,91332605,0,0x0,8
tick,0x7ff999646dc4,91348043,0,0x0,8
tick,0x7ff999646dc4,91362850,0,0x0,8
tick,0x7ff999646dc4,91378028,0,0x0,8
tick,0x7ff999646dc4,91393371,0,0x0,8
tick,0x7ff999646dc4,91408591,0,0x0,8
tick,0x7ff999646dc4,91423872,0,0x0,8
tick,0x7ff999646dc4,91439416,0,0x0,8
tick,0x7ff999646dc4,91454926,0,0x0,8
tick,0x7ff999646dc4,91469939,0,0x0,8
tick,0x7ff999646dc4,91485411,0,0x0,8
tick,0x7ff999646dc4,91501113,0,0x0,8
tick,0x7ff999646dc4,91516130,0,0x0,8
tick,0x7ff999646dc4,91531385,0,0x0,8
tick,0x7ff999646dc4,91547945,0,0x0,8
tick,0x7ff999646dc4,91561962,0,0x0,8
tick,0x7ff999646dc4,91577254,0,0x0,8
tick,0x7ff999646dc4,91592544,0,0x0,8
tick,0x7ff999646dc4,91607943,0,0x0,8
tick,0x7ff999646dc4,91623009,0,0x0,8
tick,0x7ff999646dc4,91638851,0,0x0,8
tick,0x7ff999646dc4,91654732,0,0x0,8
tick,0x7ff999646dc4,91669188,0,0x0,8
tick,0x7ff999646dc4,91684244,0,0x0,8
tick,0x7ff999646dc4,91699041,0,0x0,8
tick,0x7ff999646dc4,91714655,0,0x0,8
tick,0x7ff999646dc4,91729484,0,0x0,8
tick,0x7ff999646dc4,91744656,0,0x0,8
tick,0x7ff999646dc4,91759248,0,0x0,8
tick,0x7ff999646dc4,91774867,0,0x0,8
tick,0x7ff999646dc4,91790240,0,0x0,8
tick,0x7ff999646dc4,91805533,0,0x0,8
tick,0x7ff999646dc4,91821045,0,0x0,8
tick,0x7ff999646dc4,91837291,0,0x0,8
tick,0x7ff999646dc4,91852330,0,0x0,8
tick,0x7ff999646dc4,91867262,0,0x0,8
tick,0x7ff999646dc4,91882861,0,0x0,8
tick,0x7ff999646dc4,91898512,0,0x0,8
tick,0x7ff999646dc4,91914076,0,0x0,8
tick,0x7ff999646dc4,91929748,0,0x0,8
tick,0x7ff999646dc4,91944239,0,0x0,8
tick,0x7ff999646dc4,91959501,0,0x0,8
tick,0x7ff999646dc4,91975003,0,0x0,8
tick,0x7ff999646dc4,91990449,0,0x0,8
tick,0x7ff999646dc4,92005821,0,0x0,8
tick,0x7ff999646dc4,92021791,0,0x0,8
tick,0x7ff999646dc4,92036147,0,0x0,8
tick,0x7ff999646dc4,92053402,0,0x0,8
tick,0x7ff999646dc4,92067396,0,0x0,8
tick,0x7ff999646dc4,92082367,0,0x0,8
tick,0x7ff999646dc4,92097964,0,0x0,8
tick,0x7ff999646dc4,92113223,0,0x0,8
tick,0x7ff999646dc4,92128823,0,0x0,8
tick,0x7ff999646dc4,92144001,0,0x0,8
tick,0x7ff999646dc4,92159174,0,0x0,8
tick,0x7ff999646dc4,92175162,0,0x0,8
tick,0x7ff999646dc4,92188978,0,0x0,8
tick,0x7ff999646dc4,92204502,0,0x0,8
tick,0x7ff999646dc4,92219888,0,0x0,8
tick,0x7ff999646dc4,92235070,0,0x0,8
tick,0x7ff999646dc4,92250048,0,0x0,8
tick,0x7ff999646dc4,92265579,0,0x0,8
tick,0x7ff999646dc4,92281175,0,0x0,8
tick,0x7ff999646dc4,92296483,0,0x0,8
tick,0x7ff999646dc4,92311545,0,0x0,8
tick,0x7ff999646dc4,92326689,0,0x0,8
tick,0x7ff999646dc4,92342186,0,0x0,8
tick,0x7ff999646dc4,92357795,0,0x0,8
tick,0x7ff999646dc4,92372993,0,0x0,8
tick,0x7ff999646dc4,92388325,0,0x0,8
tick,0x7ff999646dc4,92403812,0,0x0,8
tick,0x7ff999646dc4,92420097,0,0x0,8
tick,0x7ff999646dc4,92434425,0,0x0,8
tick,0x7ff999646dc4,92449962,0,0x0,8
tick,0x7ff999646dc4,92464827,0,0x0,8
tick,0x7ff999646dc4,92480351,0,0x0,8
tick,0x7ff999646dc4,92495779,0,0x0,8
tick,0x7ff999646dc4,92511216,0,0x0,8
tick,0x7ff999646dc4,92526612,0,0x0,8
tick,0x7ff999646dc4,92541598,0,0x0,8
tick,0x7ff999646dc4,92557285,0,0x0,8
tick,0x7ff999646dc4,92572677,0,0x0,8
tick,0x7ff999646dc4,92587847,0,0x0,8
tick,0x7ff999646dc4,92602837,0,0x0,8
tick,0x7ff999646dc4,92618147,0,0x0,8
tick,0x7ff999646dc4,92633296,0,0x0,8
tick,0x7ff999646dc4,92649231,0,0x0,8
tick,0x7ff999646dc4,92664040,0,0x0,8
tick,0x7ff999646dc4,92679367,0,0x0,8
tick,0x7ff999646dc4,92694651,0,0x0,8
tick,0x7ff999646dc4,92710153,0,0x0,8
tick,0x7ff999646dc4,92725273,0,0x0,8
tick,0x7ff999646dc4,92740606,0,0x0,8
tick,0x7ff999646dc4,92756449,0,0x0,8
tick,0x7ff999646dc4,92772680,0,0x0,8
tick,0x7ff999646dc4,92787349,0,0x0,8
tick,0x7ff999646dc4,92803517,0,0x0,8
tick,0x7ff999646dc4,92817307,0,0x0,8
tick,0x7ff999646dc4,92832550,0,0x0,8
tick,0x7ff999646dc4,92848086,0,0x0,8
tick,0x7ff999646dc4,92863641,0,0x0,8
tick,0x7ff999646dc4,92879272,0,0x0,8
tick,0x7ff999646dc4,92894588,0,0x0,8
tick,0x7ff999646dc4,92909927,0,0x0,8
tick,0x7ff999646dc4,92925454,0,0x0,8
tick,0x7ff999646dc4,92941123,0,0x0,8
tick,0x7ff999646dc4,92956506,0,0x0,8
tick,0x7ff999646dc4,92970844,0,0x0,8
tick,0x7ff999646dc4,92986864,0,0x0,8
tick,0x7ff999646dc4,93001944,0,0x0,8
tick,0x7ff999646dc4,93017987,0,0x0,8
tick,0x7ff999646dc4,93032788,0,0x0,8
tick,0x7ff999646dc4,93048176,0,0x0,8
tick,0x7ff999646dc4,93063533,0,0x0,8
tick,0x7ff999646dc4,93079076,0,0x0,8
tick,0x7ff999646dc4,93094282,0,0x0,8
tick,0x7ff999646dc4,93109486,0,0x0,8
tick,0x7ff999646dc4,93125789,0,0x0,8
tick,0x7ff999646dc4,93140052,0,0x0,8
tick,0x7ff999646dc4,93155571,0,0x0,8
tick,0x7ff999646dc4,93174541,0,0x0,8
tick,0x7ff999646dc4,93186448,0,0x0,8
tick,0x7ff999646dc4,93201082,0,0x0,8
tick,0x7ff999646dc4,93215989,0,0x0,8
tick,0x7ff999646dc4,93231571,0,0x0,8
tick,0x7ff999646dc4,93246959,0,0x0,8
tick,0x7ff999646dc4,93262106,0,0x0,8
tick,0x7ff999646dc4,93278046,0,0x0,8
tick,0x7ff999646dc4,93292770,0,0x0,8
tick,0x7ff999646dc4,93307574,0,0x0,8
tick,0x7ff999646dc4,93323668,0,0x0,8
tick,0x7ff999646dc4,93338769,0,0x0,8
tick,0x7ff999646dc4,93353891,0,0x0,8
tick,0x7ff999646dc4,93368544,0,0x0,8
tick,0x7ff999646dc4,93383833,0,0x0,8
tick,0x7ff999646dc4,93399272,0,0x0,8
tick,0x7ff999646dc4,93414379,0,0x0,8
tick,0x7ff999646dc4,93429664,0,0x0,8
tick,0x7ff999646dc4,93445170,0,0x0,8
tick,0x7ff999646dc4,93460797,0,0x0,8
tick,0x7ff999646dc4,93476213,0,0x0,8
tick,0x7ff999646dc4,93491340,0,0x0,8
tick,0x7ff999646dc4,93506927,0,0x0,8
tick,0x7ff999646dc4,93523073,0,0x0,8
tick,0x7ff999646dc4,93538331,0,0x0,8
tick,0x7ff999646dc4,93553957,0,0x0,8
tick,0x7ff999646dc4,93568765,0,0x0,8
tick,0x7ff999646dc4,93584575,0,0x0,8
tick,0x7ff999646dc4,93599543,0,0x0,8
tick,0x7ff999646dc4,93614743,0,0x0,8
tick,0x7ff999646dc4,93630560,0,0x0,8
tick,0x7ff999646dc4,93645507,0,0x0,8
tick,0x7ff999646dc4,93661261,0,0x0,8
tick,0x7ff999646dc4,93676617,0,0x0,8
tick,0x7ff999646dc4,93691351,0,0x0,8
tick,0x7ff999646dc4,93706210,0,0x0,8
tick,0x7ff999646dc4,93721639,0,0x0,8
tick,0x7ff999646dc4,93736869,0,0x0,8
tick,0x7ff999646dc4,93752167,0,0x0,8
tick,0x7ff999646dc4,93767348,0,0x0,8
tick,0x7ff999646dc4,93783056,0,0x0,8
tick,0x7ff999646dc4,93798334,0,0x0,8
tick,0x7ff999646dc4,93813321,0,0x0,8
tick,0x7ff999646dc4,93828792,0,0x0,8
tick,0x7ff999646dc4,93844096,0,0x0,8
tick,0x7ff999646dc4,93859554,0,0x0,8
tick,0x7ff999646dc4,93874503,0,0x0,8
tick,0x7ff999646dc4,93889779,0,0x0,8
tick,0x7ff999646dc4,93908395,0,0x0,8
tick,0x7ff999646dc4,93921976,0,0x0,8
tick,0x7ff999646dc4,93938338,0,0x0,8
tick,0x7ff999646dc4,93952690,0,0x0,8
tick,0x7ff999646dc4,93966224,0,0x0,8
tick,0x7ff999646dc4,93981630,0,0x0,8
tick,0x7ff999646dc4,93997255,0,0x0,8
tick,0x7ff999646dc4,94012346,0,0x0,8
tick,0x7ff999646dc4,94027506,0,0x0,8
tick,0x7ff999646dc4,94043143,0,0x0,8
tick,0x7ff999646dc4,94060271,0,0x0,8
tick,0x7ff999646dc4,94075361,0,0x0,8
tick,0x7ff999646dc4,94088751,0,0x0,8
tick,0x7ff999646dc4,94105083,0,0x0,8
tick,0x7ff999646dc4,94119495,0,0x0,8
tick,0x7ff999646dc4,94134399,0,0x0,8
tick,0x7ff999646dc4,94150436,0,0x0,8
tick,0x7ff999646dc4,94164987,0,0x0,8
tick,0x7ff999646dc4,94180624,0,0x0,8
tick,0x7ff999646dc4,94196246,0,0x0,8
tick,0x7ff999646dc4,94210800,0,0x0,8
tick,0x7ff999646dc4,94226127,0,0x0,8
tick,0x7ff999646dc4,94243698,0,0x0,8
tick,0x7ff999646dc4,94256594,0,0x0,8
tick,0x7ff999646dc4,94273107,0,0x0,8
tick,0x7ff999646dc4,94287979,0,0x0,8
tick,0x7ff999646dc4,94302007,0,0x0,8
tick,0x7ff999646dc4,94317037,0,0x0,8
tick,0x7ff999646dc4,94332304,0,0x0,8
tick,0x7ff999646dc4,94347176,0,0x0,8
tick,0x7ff999646dc4,94362875,0,0x0,8
tick,0x7ff999646dc4,94378047,0,0x0,8
tick,0x7ff999646dc4,94393758,0,0x0,8
tick,0x7ff999646dc4,94408880,0,0x0,8
tick,0x7ff999646dc4,94424784,0,0x0,8
tick,0x7ff999646dc4,94440205,0,0x0,8
tick,0x7ff999646dc4,94455134,0,0x0,8
tick,0x7ff999646dc4,94470646,0,0x0,8
tick,0x7ff999646dc4,94485660,0,0x0,8
tick,0x7ff999646dc4,94500803,0,0x0,8
tick,0x7ff999646dc4,94516369,0,0x0,8
tick,0x7ff999646dc4,94531915,0,0x0,8
tick,0x7ff999646dc4,94547147,0,0x0,8
tick,0x7ff999646dc4,94562673,0,0x0,8
tick,0x7ff999646dc4,94577619,0,0x0,8
tick,0x7ff999646dc4,94592656,0,0x0,8
tick,0x7ff999646dc4,94607856,0,0x0,8
tick,0x7ff999646dc4,94622996,0,0x0,8
tick,0x7ff999646dc4,94639107,0,0x0,8
tick,0x7ff999646dc4,94653713,0,0x0,8
tick,0x7ff999646dc4,94669084,0,0x0,8
tick,0x7ff999646dc4,94684252,0,0x0,8
tick,0x7ff999646dc4,94699137,0,0x0,8
tick,0x7ff999646dc4,94714224,0,0x0,8
tick,0x7ff999646dc4,94729437,0,0x0,8
tick,0x7ff999646dc4,94744210,0,0x0,8
tick,0x7ff999646dc4,94759404,0,0x0,8
tick,0x7ff999646dc4,94774934,0,0x0,8
tick,0x7ff999646dc4,94790602,0,0x0,8
tick,0x7ff999646dc4,94805747,0,0x0,8
tick,0x7ff999646dc4,94821820,0,0x0,8
tick,0x7ff999646dc4,94836468,0,0x0,8
tick,0x7ff999646dc4,94852077,0,0x0,8
tick,0x7ff999646dc4,94867669,0,0x0,8
tick,0x7ff999646dc4,94882603,0,0x0,8
tick,0x7ff999646dc4,94897727,0,0x0,8
tick,0x7ff999646dc4,94913126,0,0x0,8
tick,0x7ff999646dc4,94928790,0,0x0,8
tick,0x7ff999646dc4,94944147,0,0x0,8
tick,0x7ff999646dc4,94960500,0,0x0,8
tick,0x7ff999646dc4,94974772,0,0x0,8
tick,0x7ff999646dc4,94989598,0,0x0,8
tick,0x7ff999646dc4,95005321,0,0x0,8
tick,0x7ff999646dc4,95020075,0,0x0,8
tick,0x7ff999646dc4,95035418,0,0x0,8
tick,0x7ff999646dc4,95050472,0,0x0,8
tick,0x7ff999646dc4,95065816,0,0x0,8
tick,0x7ff999646dc4,95081260,0,0x0,8
tick,0x7ff999646dc4,95096918,0,0x0,8
tick,0x7ff999646dc4,95111749,0,0x0,8
tick,0x7ff999646dc4,95127227,0,0x0,8
tick,0x7ff999646dc4,95142418,0,0x0,8
tick,0x7ff999646dc4,95158681,0,0x0,8
tick,0x7ff999646dc4,95174702,0,0x0,8
tick,0x7ff999646dc4,95189105,0,0x0,8
tick,0x7ff999646dc4,95206482,0,0x0,8
tick,0x7ff999646dc4,95220174,0,0x0,8
tick,0x7ff999646dc4,95234998,0,0x0,8
tick,0x7ff999646dc4,95250337,0,0x0,8
tick,0x7ff999646dc4,95268639,0,0x0,8
tick,0x7ff999646dc4,95281368,0,0x0,8
tick,0x7ff999646dc4,95296452,0,0x0,8
tick,0x7ff999646dc4,95312156,0,0x0,8
tick,0x7ff999646dc4,95327555,0,0x0,8
tick,0x7ff999646dc4,95342290,0,0x0,8
tick,0x7ff999646dc4,95358903,0,0x0,8
tick,0x7ff999646dc4,95373165,0,0x0,8
tick,0x7ff999646dc4,95388271,0,0x0,8
tick,0x7ff999646dc4,95403409,0,0x0,8
tick,0x7ff999646dc4,95420280,0,0x0,8
tick,0x7ff999646dc4,95434263,0,0x0,8
tick,0x7ff999646dc4,95449753,0,0x0,8
tick,0x7ff999646dc4,95465202,0,0x0,8
tick,0x7ff999646dc4,95480478,0,0x0,8
tick,0x7ff999646dc4,95495820,0,0x0,8
tick,0x7ff999646dc4,95511114,0,0x0,8
tick,0x7ff999646dc4,95526297,0,0x0,8
tick,0x7ff999646dc4,95541802,0,0x0,8
tick,0x7ff999646dc4,95556915,0,0x0,8
tick,0x7ff999646dc4,95572321,0,0x0,8
tick,0x7ff999646dc4,95587713,0,0x0,8
tick,0x7ff999646dc4,95603393,0,0x0,8
tick,0x7ff999646dc4,95618279,0,0x0,8
tick,0x7ff999646dc4,95633550,0,0x0,8
tick,0x7ff999646dc4,95649092,0,0x0,8
tick,0x7ff999646dc4,95664407,0,0x0,8
tick,0x7ff999646dc4,95679694,0,0x0,8
tick,0x7ff999646dc4,95695248,0,0x0,8
tick,0x7ff999646dc4,95710828,0,0x0,8
tick,0x7ff999646dc4,95726163,0,0x0,8
tick,0x7ff999646dc4,95741450,0,0x0,8
tick,0x7ff999646dc4,95756821,0,0x0,8
tick,0x7ff999646dc4,95772144,0,0x0,8
tick,0x7ff999646dc4,95787537,0,0x0,8
tick,0x7ff999646dc4,95803202,0,0x0,8
tick,0x7ff999646dc4,95818903,0,0x0,8
tick,0x7ff999646dc4,95834010,0,0x0,8
tick,0x7ff999646dc4,95849407,0,0x0,8
tick,0x7ff999646dc4,95864850,0,0x0,8
tick,0x7ff999646dc4,95879995,0,0x0,8
tick,0x7ff999646dc4,95895525,0,0x0,8
tick,0x7ff999646dc4,95911168,0,0x0,8
tick,0x7ff999646dc4,95927397,0,0x0,8
tick,0x7ff999646dc4,95941022,0,0x0,8
tick,0x7ff999646dc4,95956570,0,0x0,8
tick,0x7ff999646dc4,95971912,0,0x0,8
tick,0x7ff999646dc4,95986841,0,0x0,8
tick,0x7ff999646dc4,96002343,0,0x0,8
tick,0x7ff999646dc4,96016994,0,0x0,8
tick,0x7ff999646dc4,96032558,0,0x0,8
tick,0x7ff999646dc4,96048004,0,0x0,8
tick,0x7ff999646dc4,96063431,0,0x0,8
tick,0x7ff999646dc4,96078250,0,0x0,8
tick,0x7ff999646dc4,96093637,0,0x0,8
tick,0x7ff999646dc4,96109141,0,0x0,8
tick,0x7ff999646dc4,96124623,0,0x0,8
tick,0x7ff999646dc4,96139713,0,0x0,8
tick,0x7ff999646dc4,96154827,0,0x0,8
tick,0x7ff999646dc4,96170360,0,0x0,8
tick,0x7ff999646dc4,96186050,0,0x0,8
tick,0x7ff999646dc4,96201541,0,0x0,8
tick,0x7ff999646dc4,96216493,0,0x0,8
tick,0x7ff999646dc4,96231685,0,0x0,8
tick,0x7ff999646dc4,96246724,0,0x0,8
tick,0x7ff999646dc4,96261910,0,0x0,8
tick,0x7ff999646dc4,96277542,0,0x0,8
tick,0x7ff999646dc4,96293009,0,0x0,8
tick,0x7ff999646dc4,96308205,0,0x0,8
tick,0x7ff999646dc4,96324083,0,0x0,8
tick,0x7ff999646dc4,96339354,0,0x0,8
tick,0x7ff999646dc4,96354445,0,0x0,8
tick,0x7ff999646dc4,96370026,0,0x0,8
tick,0x7ff999646dc4,96385431,0,0x0,8
tick,0x7ff999646dc4,96400348,0,0x0,8
tick,0x7ff999646dc4,96415434,0,0x0,8
tick,0x7ff999646dc4,96430853,0,0x0,8
tick,0x7ff999646dc4,96446142,0,0x0,8
tick,0x7ff999646dc4,96462013,0,0x0,8
tick,0x7ff999646dc4,96477251,0,0x0,8
tick,0x7ff999646dc4,96492626,0,0x0,8
tick,0x7ff999646dc4,96507659,0,0x0,8
tick,0x7ff999646dc4,96523774,0,0x0,8
tick,0x7ff999646dc4,96538284,0,0x0,8
tick,0x7ff999646dc4,96553722,0,0x0,8
tick,0x7ff999646dc4,96569294,0,0x0,8
tick,0x7ff999646dc4,96584631,0,0x0,8
tick,0x7ff999646dc4,96600090,0,0x0,8
tick,0x7ff999646dc4,96615208,0,0x0,8
tick,0x7ff999646dc4,96630440,0,0x0,8
tick,0x7ff999646dc4,96645776,0,0x0,8
tick,0x7ff999646dc4,96661433,0,0x0,8
tick,0x7ff999646dc4,96677407,0,0x0,8
tick,0x7ff999646dc4,96692010,0,0x0,8
tick,0x7ff999646dc4,96707764,0,0x0,8
tick,0x7ff999646dc4,96722307,0,0x0,8
tick,0x7ff999646dc4,96737730,0,0x0,8
tick,0x7ff999646dc4,96753122,0,0x0,8
tick,0x7ff999646dc4,96768587,0,0x0,8
tick,0x7ff999646dc4,96784211,0,0x0,8
tick,0x7ff999646dc4,96798898,0,0x0,8
tick,0x7ff999646dc4,96814359,0,0x0,8
tick,0x7ff999646dc4,96829571,0,0x0,8
tick,0x7ff999646dc4,96844521,0,0x0,8
tick,0x7ff999646dc4,96859969,0,0x0,8
tick,0x7ff999646dc4,96875675,0,0x0,8
tick,0x7ff999646dc4,96890778,0,0x0,8
tick,0x7ff999646dc4,96906246,0,0x0,8
tick,0x7ff999646dc4,96921923,0,0x0,8
tick,0x7ff999646dc4,96937411,0,0x0,8
tick,0x7ff999646dc4,96952653,0,0x0,8
tick,0x7ff999646dc4,96967957,0,0x0,8
tick,0x7ff999646dc4,96984531,0,0x0,8
tick,0x7ff999646dc4,96998700,0,0x0,8
tick,0x7ff999646dc4,97014065,0,0x0,8
tick,0x7ff999646dc4,97029747,0,0x0,8
tick,0x7ff999646dc4,97045268,0,0x0,8
tick,0x7ff999646dc4,97060570,0,0x0,8
tick,0x7ff999646dc4,97075926,0,0x0,8
tick,0x7ff999646dc4,97091441,0,0x0,8
tick,0x7ff999646dc4,97107008,0,0x0,8
tick,0x7ff999646dc4,97122280,0,0x0,8
tick,0x7ff999646dc4,97137439,0,0x0,8
tick,0x7ff999646dc4,97152958,0,0x0,8
tick,0x7ff999646dc4,97168202,0,0x0,8
tick,0x7ff999646dc4,97183917,0,0x0,8
tick,0x7ff999646dc4,97199250,0,0x0,8
tick,0x7ff999646dc4,97214515,0,0x0,8
tick,0x7ff999646dc4,97229589,0,0x0,8
tick,0x7ff999646dc4,97244486,0,0x0,8
tick,0x7ff999646dc4,97259719,0,0x0,8
tick,0x7ff999646dc4,97275035,0,0x0,8
tick,0x7ff999646dc4,97290152,0,0x0,8
tick,0x7ff999646dc4,97305751,0,0x0,8
tick,0x7ff999646dc4,97321282,0,0x0,8
tick,0x7ff999646dc4,97336570,0,0x0,8
tick,0x7ff999646dc4,97351802,0,0x0,8
tick,0x7ff999646dc4,97366927,0,0x0,8
tick,0x7ff999646dc4,97382269,0,0x0,8
tick,0x7ff999646dc4,97397558,0,0x0,8
tick,0x7ff999646dc4,97412141,0,0x0,8
tick,0x7ff999646dc4,97427674,0,0x0,8
tick,0x7ff999646dc4,97443455,0,0x0,8
tick,0x7ff999646dc4,97458302,0,0x0,8
tick,0x7ff999646dc4,97473882,0,0x0,8
tick,0x7ff999646dc4,97488708,0,0x0,8
tick,0x7ff999646dc4,97503935,0,0x0,8
tick,0x7ff999646dc4,97518809,0,0x0,8
tick,0x7ff999646dc4,97534374,0,0x0,8
tick,0x7ff999646dc4,97549519,0,0x0,8
tick,0x7ff999646dc4,97564782,0,0x0,8
tick,0x7ff999646dc4,97580344,0,0x0,8
tick,0x7ff999646dc4,97595934,0,0x0,8
tick,0x7ff999646dc4,97611439,0,0x0,8
tick,0x7ff999646dc4,97626990,0,0x0,8
tick,0x7ff999646dc4,97642200,0,0x0,8
tick,0x7ff999646dc4,97657654,0,0x0,8
tick,0x7ff999646dc4,97672969,0,0x0,8
tick,0x7ff999646dc4,97688199,0,0x0,8
tick,0x7ff999646dc4,97703794,0,0x0,8
tick,0x7ff999646dc4,97719173,0,0x0,8
tick,0x7ff999646dc4,97734661,0,0x0,8
tick,0x7ff999646dc4,97750116,0,0x0,8
tick,0x7ff999646dc4,97765296,0,0x0,8
tick,0x7ff999646dc4,97780913,0,0x0,8
tick,0x7ff999646dc4,97796146,0,0x0,8
tick,0x7ff999646dc4,97811066,0,0x0,8
tick,0x7ff999646dc4,97826490,0,0x0,8
tick,0x7ff999646dc4,97842423,0,0x0,8
tick,0x7ff999646dc4,97857277,0,0x0,8
tick,0x7ff999646dc4,97872478,0,0x0,8
tick,0x7ff999646dc4,97888140,0,0x0,8
tick,0x7ff999646dc4,97903150,0,0x0,8
tick,0x7ff999646dc4,97918745,0,0x0,8
tick,0x7ff999646dc4,97934155,0,0x0,8
tick,0x7ff999646dc4,97949414,0,0x0,8
tick,0x7ff999646dc4,97964882,0,0x0,8
tick,0x7ff999646dc4,97980582,0,0x0,8
tick,0x7ff999646dc4,97996592,0,0x0,8
tick,0x7ff999646dc4,98010531,0,0x0,8
tick,0x7ff999646dc4,98026696,0,0x0,8
tick,0x7ff999646dc4,98040906,0,0x0,8
tick,0x7ff999646dc4,98061245,0,0x0,8
tick,0x7ff999646dc4,98071339,0,0x0,8
tick,0x7ff999646dc4,98087644,0,0x0,8
tick,0x7ff999646dc4,98101762,0,0x0,8
tick,0x7ff999646dc4,98117314,0,0x0,8
tick,0x7ff999646dc4,98133168,0,0x0,8
tick,0x7ff999646dc4,98147799,0,0x0,8
tick,0x7ff999646dc4,98163112,0,0x0,8
tick,0x7ff999646dc4,98178526,0,0x0,8
tick,0x7ff999646dc4,98193576,0,0x0,8
tick,0x7ff999646dc4,98209404,0,0x0,8
tick,0x7ff999646dc4,98224723,0,0x0,8
tick,0x7ff999646dc4,98239855,0,0x0,8
tick,0x7ff999646dc4,98254796,0,0x0,8
tick,0x7ff999646dc4,98270210,0,0x0,8
tick,0x7ff999646dc4,98285401,0,0x0,8
tick,0x7ff999646dc4,98300813,0,0x0,8
tick,0x7ff999646dc4,98316140,0,0x0,8
tick,0x7ff999646dc4,98331311,0,0x0,8
tick,0x7ff999646dc4,98347138,0,0x0,8
tick,0x7ff999646dc4,98362466,0,0x0,8
tick,0x7ff999646dc4,98377421,0,0x0,8
tick,0x7ff999646dc4,98392884,0,0x0,8
tick,0x7ff999646dc4,98408335,0,0x0,8
tick,0x7ff999646dc4,98422951,0,0x0,8
tick,0x7ff999646dc4,98438643,0,0x0,8
tick,0x7ff999646dc4,98454284,0,0x0,8
tick,0x7ff999646dc4,98468969,0,0x0,8
tick,0x7ff999646dc4,98484825,0,0x0,8
tick,0x7ff999646dc4,98499652,0,0x0,8
tick,0x7ff999646dc4,98514133,0,0x0,8
tick,0x7ff999646dc4,98529829,0,0x0,8
tick,0x7ff999646dc4,98545364,0,0x0,8
tick,0x7ff999646dc4,98560660,0,0x0,8
tick,0x7ff999646dc4,98575589,0,0x0,8
tick,0x7ff999646dc4,98590392,0,0x0,8
tick,0x7ff999646dc4,98605735,0,0x0,8
tick,0x7ff999646dc4,98620930,0,0x0,8
tick,0x7ff999646dc4,98636609,0,0x0,8
tick,0x7ff999646dc4,98652102,0,0x0,8
tick,0x7ff999646dc4,98667293,0,0x0,8
tick,0x7ff999646dc4,98683171,0,0x0,8
tick,0x7ff999646dc4,98698187,0,0x0,8
tick,0x7ff999646dc4,98713808,0,0x0,8
tick,0x7ff999646dc4,98729416,0,0x0,8
tick,0x7ff999646dc4,98744377,0,0x0,8
tick,0x7ff999646dc4,98759209,0,0x0,8
tick,0x7ff999646dc4,98774668,0,0x0,8
tick,0x7ff999646dc4,98789370,0,0x0,8
tick,0x7ff999646dc4,98804739,0,0x0,8
tick,0x7ff999646dc4,98820079,0,0x0,8
tick,0x7ff999646dc4,98835404,0,0x0,8
tick,0x7ff999646dc4,98850582,0,0x0,8
tick,0x7ff999646dc4,98865820,0,0x0,8
tick,0x7ff999646dc4,98880904,0,0x0,8
tick,0x7ff999646dc4,98896281,0,0x0,8
tick,0x7ff999646dc4,98911646,0,0x0,8
tick,0x7ff999646dc4,98927554,0,0x0,8
tick,0x7ff999646dc4,98941751,0,0x0,8
tick,0x7ff999646dc4,98957281,0,0x0,8
tick,0x7ff999646dc4,98972242,0,0x0,8
tick,0x7ff999646dc4,98987611,0,0x0,8
tick,0x7ff999646dc4,99003683,0,0x0,8
tick,0x7ff999646dc4,99017363,0,0x0,8
tick,0x7ff999646dc4,99032918,0,0x0,8
tick,0x7ff999646dc4,99047898,0,0x0,8
tick,0x7ff999646dc4,99062947,0,0x0,8
tick,0x7ff999646dc4,99078998,0,0x0,8
tick,0x7ff999646dc4,99093773,0,0x0,8
tick,0x7ff999646dc4,99108872,0,0x0,8
tick,0x7ff999646dc4,99124642,0,0x0,8
tick,0x7ff999646dc4,99139994,0,0x0,8
tick,0x7ff999646dc4,99155091,0,0x0,8
tick,0x7ff999646dc4,99170174,0,0x0,8
tick,0x7ff999646dc4,99185405,0,0x0,8
tick,0x7ff999646dc4,99200712,0,0x0,8
tick,0x7ff999646dc4,99216368,0,0x0,8
tick,0x7ff999646dc4,99232810,0,0x0,8
tick,0x7ff999646dc4,99247360,0,0x0,8
tick,0x7ff999646dc4,99263175,0,0x0,8
tick,0x7ff999646dc4,99279232,0,0x0,8
tick,0x7ff999646dc4,99294027,0,0x0,8
tick,0x7ff999646dc4,99308668,0,0x0,8
tick,0x7ff999646dc4,99324071,0,0x0,8
tick,0x7ff999646dc4,99339718,0,0x0,8
tick,0x7ff999646dc4,99354922,0,0x0,8
tick,0x7ff999646dc4,99370292,0,0x0,8
tick,0x7ff999646dc4,99384964,0,0x0,8
tick,0x7ff999646dc4,99400494,0,0x0,8
tick,0x7ff999646dc4,99416064,0,0x0,8
tick,0x7ff999646dc4,99430814,0,0x0,8
tick,0x7ff999646dc4,99446100,0,0x0,8
tick,0x7ff999646dc4,99463323,0,0x0,8
tick,0x7ff999646dc4,99478282,0,0x0,8
tick,0x7ff999646dc4,99492426,0,0x0,8
tick,0x7ff999646dc4,99507849,0,0x0,8
tick,0x7ff999646dc4,99522930,0,0x0,8
tick,0x7ff999646dc4,99538039,0,0x0,8
tick,0x7ff999646dc4,99553893,0,0x0,8
tick,0x7ff999646dc4,99569260,0,0x0,8
tick,0x7ff999646dc4,99584432,0,0x0,8
tick,0x7ff999646dc4,99599991,0,0x0,8
tick,0x7ff999646dc4,99614964,0,0x0,8
tick,0x7ff999646dc4,99636443,0,0x0,8
tick,0x7ff999646dc4,99646104,0,0x0,8
tick,0x7ff999646dc4,99661584,0,0x0,8
tick,0x7ff999646dc4,99680110,0,0x0,8
tick,0x7ff999646dc4,99696220,0,0x0,8
tick,0x7ff999646dc4,99706588,0,0x0,8
tick,0x7ff999646dc4,99721602,0,0x0,8
tick,0x7ff999646dc4,99737285,0,0x0,8
tick,0x7ff999646dc4,99753012,0,0x0,8
tick,0x7ff999646dc4,99767763,0,0x0,8
tick,0x7ff999646dc4,99783733,0,0x0,8
tick,0x7ff999646dc4,99799251,0,0x0,8
tick,0x7ff999646dc4,99816062,0,0x0,8
tick,0x7ff999646dc4,99830114,0,0x0,8
tick,0x7ff999646dc4,99849757,0,0x0,8
tick,0x7ff999646dc4,99862565,0,0x0,8
tick,0x7ff999646dc4,99874928,0,0x0,8
tick,0x7ff999646dc4,99890731,0,0x0,8
tick,0x7ff999646dc4,99906303,0,0x0,8
tick,0x7ff999646dc4,99921222,0,0x0,8
tick,0x7ff999646dc4,99936590,0,0x0,8
tick,0x7ff999646dc4,99952608,0,0x0,8
tick,0x7ff999646dc4,99967046,0,0x0,8
tick,0x7ff999646dc4,99982631,0,0x0,8
tick,0x7ff999646dc4,99998057,0,0x0,8
tick,0x7ff999646dc4,100013391,0,0x0,8
tick,0x7ff999646dc4,100028639,0,0x0,8
tick,0x7ff999646dc4,100045122,0,0x0,8
tick,0x7ff999646dc4,100059100,0,0x0,8
tick,0x7ff999646dc4,100074808,0,0x0,8
tick,0x7ff999646dc4,100089816,0,0x0,8
tick,0x7ff999646dc4,100105355,0,0x0,8
tick,0x7ff999646dc4,100120735,0,0x0,8
tick,0x7ff999646dc4,100136615,0,0x0,8
tick,0x7ff999646dc4,100151161,0,0x0,8
tick,0x7ff999646dc4,100166935,0,0x0,8
tick,0x7ff999646dc4,100182140,0,0x0,8
tick,0x7ff999646dc4,100197681,0,0x0,8
tick,0x7ff999646dc4,100213438,0,0x0,8
tick,0x7ff999646dc4,100228981,0,0x0,8
tick,0x7ff999646dc4,100243436,0,0x0,8
tick,0x7ff999646dc4,100258514,0,0x0,8
tick,0x7ff999646dc4,100273967,0,0x0,8
tick,0x7ff999646dc4,100289751,0,0x0,8
tick,0x7ff999646dc4,100305263,0,0x0,8
tick,0x7ff999646dc4,100320062,0,0x0,8
tick,0x7ff999646dc4,100335490,0,0x0,8
tick,0x7ff999646dc4,100350829,0,0x0,8
tick,0x7ff999646dc4,100365946,0,0x0,8
tick,0x7ff999646dc4,100381224,0,0x0,8
tick,0x7ff999646dc4,100396751,0,0x0,8
tick,0x7ff999646dc4,100412665,0,0x0,8
tick,0x7ff999646dc4,100427204,0,0x0,8
tick,0x7ff999646dc4,100442115,0,0x0,8
tick,0x7ff999646dc4,100457471,0,0x0,8
tick,0x7ff999646dc4,100472701,0,0x0,8
tick,0x7ff999646dc4,100488347,0,0x0,8
tick,0x7ff999646dc4,100503740,0,0x0,8
tick,0x7ff999646dc4,100519219,0,0x0,8
tick,0x7ff999646dc4,100534712,0,0x0,8
tick,0x7ff999646dc4,100550119,0,0x0,8
tick,0x7ff999646dc4,100565711,0,0x0,8
tick,0x7ff999646dc4,100581056,0,0x0,8
tick,0x7ff999646dc4,100596365,0,0x0,8
tick,0x7ff999646dc4,100613372,0,0x0,8
tick,0x7ff999646dc4,100626665,0,0x0,8
tick,0x7ff999646dc4,100642304,0,0x0,8
tick,0x7ff999646dc4,100657834,0,0x0,8
tick,0x7ff999646dc4,100672909,0,0x0,8
tick,0x7ff999646dc4,100688438,0,0x0,8
tick,0x7ff999646dc4,100703942,0,0x0,8
tick,0x7ff999646dc4,100718750,0,0x0,8
tick,0x7ff999646dc4,100734359,0,0x0,8
tick,0x7ff999646dc4,100749507,0,0x0,8
tick,0x7ff999646dc4,100765099,0,0x0,8
tick,0x7ff999646dc4,100781948,0,0x0,8
tick,0x7ff999646dc4,100797457,0,0x0,8
tick,0x7ff999646dc4,100810649,0,0x0,8
tick,0x7ff999646dc4,100826360,0,0x0,8
tick,0x7ff999646dc4,100841185,0,0x0,8
tick,0x7ff999646dc4,100856780,0,0x0,8
tick,0x7ff999646dc4,100871483,0,0x0,8
tick,0x7ff999646dc4,100886737,0,0x0,8
tick,0x7ff999646dc4,100902241,0,0x0,8
tick,0x7ff999646dc4,100917847,0,0x0,8
tick,0x7ff999646dc4,100933190,0,0x0,8
tick,0x7ff999646dc4,100948762,0,0x0,8
tick,0x7ff999646dc4,100963332,0,0x0,8
tick,0x7ff999646dc4,100978753,0,0x0,8
tick,0x7ff999646dc4,100993898,0,0x0,8
tick,0x7ff999646dc4,101009218,0,0x0,8
tick,0x7ff999646dc4,101025204,0,0x0,8
tick,0x7ff999646dc4,101039799,0,0x0,8
tick,0x7ff999646dc4,101055164,0,0x0,8
tick,0x7ff999646dc4,101070421,0,0x0,8
tick,0x7ff999646dc4,101086199,0,0x0,8
tick,0x7ff999646dc4,101100846,0,0x0,8
tick,0x7ff999646dc4,101115970,0,0x0,8
tick,0x7ff999646dc4,101130971,0,0x0,8
tick,0x7ff999646dc4,101146903,0,0x0,8
tick,0x7ff999646dc4,101161999,0,0x0,8
tick,0x7ff999646dc4,101176702,0,0x0,8
tick,0x7ff999646dc4,101191647,0,0x0,8
tick,0x7ff999646dc4,101207212,0,0x0,8
tick,0x7ff999646dc4,101222020,0,0x0,8
tick,0x7ff999646dc4,101237571,0,0x0,8
tick,0x7ff999646dc4,101253149,0,0x0,8
tick,0x7ff999646dc4,101268587,0,0x0,8
tick,0x7ff999646dc4,101283989,0,0x0,8
tick,0x7ff999646dc4,101298419,0,0x0,8
tick,0x7ff999646dc4,101314454,0,0x0,8
tick,0x7ff999646dc4,101329758,0,0x0,8
tick,0x7ff999646dc4,101344600,0,0x0,8
tick,0x7ff999646dc4,101359988,0,0x0,8
tick,0x7ff999646dc4,101375148,0,0x0,8
tick,0x7ff999646dc4,101390793,0,0x0,8
tick,0x7ff999646dc4,101405984,0,0x0,8
tick,0x7ff999646dc4,101421402,0,0x0,8
tick,0x7ff999646dc4,101436138,0,0x0,8
tick,0x7ff999646dc4,101451534,0,0x0,8
tick,0x7ff999646dc4,101467139,0,0x0,8
tick,0x7ff999646dc4,101483479,0,0x0,8
tick,0x7ff999646dc4,101498019,0,0x0,8
tick,0x7ff999646dc4,101513383,0,0x0,8
tick,0x7ff999646dc4,101528505,0,0x0,8
tick,0x7ff999646dc4,101543775,0,0x0,8
tick,0x7ff999646dc4,101559092,0,0x0,8
tick,0x7ff999646dc4,101574415,0,0x0,8
tick,0x7ff999646dc4,101589765,0,0x0,8
tick,0x7ff999646dc4,101605439,0,0x0,8
tick,0x7ff999646dc4,101620508,0,0x0,8
tick,0x7ff999646dc4,101635972,0,0x0,8
tick,0x7ff999646dc4,101651353,0,0x0,8
tick,0x7ff999646dc4,101666836,0,0x0,8
tick,0x7ff999646dc4,101681299,0,0x0,8
tick,0x7ff999646dc4,101697190,0,0x0,8
tick,0x7ff999646dc4,101711065,0,0x0,8
tick,0x7ff999646dc4,101725949,0,0x0,8
tick,0x7ff999646dc4,101741783,0,0x0,8
tick,0x7ff999646dc4,101756555,0,0x0,8
tick,0x7ff999646dc4,101772175,0,0x0,8
tick,0x7ff999646dc4,101787179,0,0x0,8
tick,0x7ff999646dc4,101802014,0,0x0,8
tick,0x7ff999646dc4,101817756,0,0x0,8
tick,0x7ff999646dc4,101832773,0,0x0,8
tick,0x7ff999646dc4,101848334,0,0x0,8
tick,0x7ff999646dc4,101863665,0,0x0,8
tick,0x7ff999646dc4,101878538,0,0x0,8
tick,0x7ff999646dc4,101894039,0,0x0,8
tick,0x7ff999646dc4,101909251,0,0x0,8
tick,0x7ff999646dc4,101924863,0,0x0,8
tick,0x7ff999646dc4,101940176,0,0x0,8
tick,0x7ff999646dc4,101955190,0,0x0,8
tick,0x7ff999646dc4,101970486,0,0x0,8
tick,0x7ff999646dc4,101986311,0,0x0,8
tick,0x7ff999646dc4,102001465,0,0x0,8
tick,0x7ff999646dc4,102016583,0,0x0,8
tick,0x7ff999646dc4,102032623,0,0x0,8
tick,0x7ff999646dc4,102047053,0,0x0,8
tick,0x7ff999646dc4,102062493,0,0x0,8
tick,0x7ff999646dc4,102077817,0,0x0,8
tick,0x7ff999646dc4,102093538,0,0x0,8
tick,0x7ff999646dc4,102108868,0,0x0,8
tick,0x7ff999646dc4,102124225,0,0x0,8
tick,0x7ff999646dc4,102139435,0,0x0,8
tick,0x7ff999646dc4,102154718,0,0x0,8
tick,0x7ff999646dc4,102170035,0,0x0,8
tick,0x7ff999646dc4,102185100,0,0x0,8
tick,0x7ff999646dc4,102200426,0,0x0,8
tick,0x7ff999646dc4,102215845,0,0x0,8
tick,0x7ff999646dc4,102231240,0,0x0,8
tick,0x7ff999646dc4,102247071,0,0x0,8
tick,0x7ff999646dc4,102261712,0,0x0,8
tick,0x7ff999646dc4,102276474,0,0x0,8
tick,0x7ff999646dc4,102292167,0,0x0,8
tick,0x7ff999646dc4,102307346,0,0x0,8
tick,0x7ff999646dc4,102322773,0,0x0,8
tick,0x7ff999646dc4,102338145,0,0x0,8
tick,0x7ff999646dc4,102353287,0,0x0,8
tick,0x7ff999646dc4,102368453,0,0x0,8
tick,0x7ff999646dc4,102383775,0,0x0,8
tick,0x7ff999646dc4,102399029,0,0x0,8
tick,0x7ff999646dc4,102414595,0,0x0,8
tick,0x7ff999646dc4,102429648,0,0x0,8
tick,0x7ff999646dc4,102445176,0,0x0,8
tick,0x7ff999646dc4,102460617,0,0x0,8
tick,0x7ff999646dc4,102475949,0,0x0,8
tick,0x7ff999646dc4,102491666,0,0x0,8
tick,0x7ff999646dc4,102507021,0,0x0,8
tick,0x7ff999646dc4,102522448,0,0x0,8
tick,0x7ff999646dc4,102537687,0,0x0,8
tick,0x7ff999646dc4,102553249,0,0x0,8
tick,0x7ff999646dc4,102568270,0,0x0,8
tick,0x7ff999646dc4,102583585,0,0x0,8
tick,0x7ff999646dc4,102598786,0,0x0,8
tick,0x7ff999646dc4,102614328,0,0x0,8
tick,0x7ff999646dc4,102629058,0,0x0,8
tick,0x7ff999646dc4,102644633,0,0x0,8
tick,0x7ff999646dc4,102659766,0,0x0,8
tick,0x7ff999646dc4,102675222,0,0x0,8
tick,0x7ff999646dc4,102690677,0,0x0,8
tick,0x7ff999646dc4,102706208,0,0x0,8
tick,0x7ff999646dc4,102721546,0,0x0,8
tick,0x7ff999646dc4,102737045,0,0x0,8
tick,0x7ff999646dc4,102752517,0,0x0,8
tick,0x7ff999646dc4,102767937,0,0x0,8
tick,0x7ff999646dc4,102782939,0,0x0,8
tick,0x7ff999646dc4,102799451,0,0x0,8
tick,0x7ff999646dc4,102813433,0,0x0,8
tick,0x7ff999646dc4,102828755,0,0x0,8
tick,0x7ff999646dc4,102844202,0,0x0,8
tick,0x7ff999646dc4,102859094,0,0x0,8
tick,0x7ff999646dc4,102874642,0,0x0,8
tick,0x7ff999646dc4,102889819,0,0x0,8
tick,0x7ff999646dc4,102905566,0,0x0,8
tick,0x7ff999646dc4,102920478,0,0x0,8
tick,0x7ff999646dc4,102936248,0,0x0,8
tick,0x7ff999646dc4,102951989,0,0x0,8
tick,0x7ff999646dc4,102967330,0,0x0,8
tick,0x7ff999646dc4,102982388,0,0x0,8
tick,0x7ff999646dc4,102997590,0,0x0,8
tick,0x7ff999646dc4,103012944,0,0x0,8
tick,0x7ff999646dc4,103028643,0,0x0,8
tick,0x7ff999646dc4,103043645,0,0x0,8
tick,0x7ff999646dc4,103058769,0,0x0,8
tick,0x7ff999646dc4,103074138,0,0x0,8
tick,0x7ff999646dc4,103088961,0,0x0,8
tick,0x7ff999646dc4,103104340,0,0x0,8
tick,0x7ff999646dc4,103119675,0,0x0,8
tick,0x7ff999646dc4,103134541,0,0x0,8
tick,0x7ff999646dc4,103149770,0,0x0,8
tick,0x7ff999646dc4,103165682,0,0x0,8
tick,0x7ff999646dc4,103181007,0,0x0,8
tick,0x7ff999646dc4,103195894,0,0x0,8
tick,0x7ff999646dc4,103211575,0,0x0,8
tick,0x7ff999646dc4,103226963,0,0x0,8
tick,0x7ff999646dc4,103242424,0,0x0,8
tick,0x7ff999646dc4,103257715,0,0x0,8
tick,0x7ff999646dc4,103273056,0,0x0,8
tick,0x7ff999646dc4,103288211,0,0x0,8
tick,0x7ff999646dc4,103303010,0,0x0,8
tick,0x7ff999646dc4,103318309,0,0x0,8
tick,0x7ff999646dc4,103333694,0,0x0,8
tick,0x7ff999646dc4,103349028,0,0x0,8
tick,0x7ff999646dc4,103364903,0,0x0,8
tick,0x7ff999646dc4,103379970,0,0x0,8
tick,0x7ff999646dc4,103395224,0,0x0,8
tick,0x7ff999646dc4,103410603,0,0x0,8
tick,0x7ff999646dc4,103426511,0,0x0,8
tick,0x7ff999646dc4,103441477,0,0x0,8
tick,0x7ff999646dc4,103457009,0,0x0,8
tick,0x7ff999646dc4,103472225,0,0x0,8
tick,0x7ff999646dc4,103487743,0,0x0,8
tick,0x7ff999646dc4,103503484,0,0x0,8
tick,0x7ff999646dc4,103518742,0,0x0,8
tick,0x7ff999646dc4,103534014,0,0x0,8
tick,0x7ff999646dc4,103549504,0,0x0,8
tick,0x7ff999646dc4,103565057,0,0x0,8
tick,0x7ff999646dc4,103580389,0,0x0,8
tick,0x7ff999646dc4,103595737,0,0x0,8
tick,0x7ff999646dc4,103611042,0,0x0,8
tick,0x7ff999646dc4,103626120,0,0x0,8
tick,0x7ff999646dc4,103641791,0,0x0,8
tick,0x7ff999646dc4,103657174,0,0x0,8
tick,0x7ff999646dc4,103672361,0,0x0,8
tick,0x7ff999646dc4,103688348,0,0x0,8
tick,0x7ff999646dc4,103703482,0,0x0,8
tick,0x7ff999646dc4,103719245,0,0x0,8
tick,0x7ff999646dc4,103734761,0,0x0,8
tick,0x7ff999646dc4,103749595,0,0x0,8
tick,0x7ff999646dc4,103764926,0,0x0,8
tick,0x7ff999646dc4,103779957,0,0x0,8
tick,0x7ff999646dc4,103795082,0,0x0,8
tick,0x7ff999646dc4,103810652,0,0x0,8
tick,0x7ff999646dc4,103825903,0,0x0,8
tick,0x7ff999646dc4,103841310,0,0x0,8
tick,0x7ff999646dc4,103856605,0,0x0,8
tick,0x7ff999646dc4,103871956,0,0x0,8
tick,0x7ff999646dc4,103887397,0,0x0,8
tick,0x7ff999646dc4,103902653,0,0x0,8
tick,0x7ff999646dc4,103918548,0,0x0,8
tick,0x7ff999646dc4,103933513,0,0x0,8
tick,0x7ff999646dc4,103949739,0,0x0,8
tick,0x7ff999646dc4,103964125,0,0x0,8
tick,0x7ff999646dc4,103979400,0,0x0,8
tick,0x7ff999646dc4,103995031,0,0x0,8
tick,0x7ff999646dc4,104010004,0,0x0,8
tick,0x7ff999646dc4,104025122,0,0x0,8
tick,0x7ff999646dc4,104040678,0,0x0,8
tick,0x7ff999646dc4,104056251,0,0x0,8
tick,0x7ff999646dc4,104071049,0,0x0,8
tick,0x7ff999646dc4,104086369,0,0x0,8
tick,0x7ff999646dc4,104101839,0,0x0,8
tick,0x7ff999646dc4,104117482,0,0x0,8
tick,0x7ff999646dc4,104132756,0,0x0,8
tick,0x7ff999646dc4,104147953,0,0x0,8
tick,0x7ff999646dc4,104163298,0,0x0,8
tick,0x7ff999646dc4,104178503,0,0x0,8
tick,0x7ff999646dc4,104194124,0,0x0,8
tick,0x7ff999646dc4,104209452,0,0x0,8
tick,0x7ff999646dc4,104224873,0,0x0,8
tick,0x7ff999646dc4,104240400,0,0x0,8
tick,0x7ff999646dc4,104255894,0,0x0,8
tick,0x7ff999646dc4,104270953,0,0x0,8
tick,0x7ff999646dc4,104285902,0,0x0,8
tick,0x7ff999646dc4,104301185,0,0x0,8
tick,0x7ff999646dc4,104316539,0,0x0,8
tick,0x7ff999646dc4,104332074,0,0x0,8
tick,0x7ff999646dc4,104347286,0,0x0,8
tick,0x7ff999646dc4,104362831,0,0x0,8
tick,0x7ff999646dc4,104378171,0,0x0,8
tick,0x7ff999646dc4,104393412,0,0x0,8
tick,0x7ff999646dc4,104409103,0,0x0,8
tick,0x7ff999646dc4,104424131,0,0x0,8
tick,0x7ff999646dc4,104439327,0,0x0,8
tick,0x7ff999646dc4,104454790,0,0x0,8
tick,0x7ff999646dc4,104470757,0,0x0,8
tick,0x7ff999646dc4,104485599,0,0x0,8
tick,0x7ff999646dc4,104500762,0,0x0,8
tick,0x7ff999646dc4,104516843,0,0x0,8
tick,0x7ff999646dc4,104531601,0,0x0,8
tick,0x7ff999646dc4,104546995,0,0x0,8
tick,0x7ff999646dc4,104562392,0,0x0,8
tick,0x7ff999646dc4,104577806,0,0x0,8
tick,0x7ff999646dc4,104593328,0,0x0,8
tick,0x7ff999646dc4,104608876,0,0x0,8
tick,0x7ff999646dc4,104623654,0,0x0,8
tick,0x7ff999646dc4,104639167,0,0x0,8
tick,0x7ff999646dc4,104653918,0,0x0,8
tick,0x7ff999646dc4,104669333,0,0x0,8
tick,0x7ff999646dc4,104685151,0,0x0,8
tick,0x7ff999646dc4,104700217,0,0x0,8
tick,0x7ff999646dc4,104715478,0,0x0,8
tick,0x7ff999646dc4,104730732,0,0x0,8
tick,0x7ff999646dc4,104746134,0,0x0,8
tick,0x7ff999646dc4,104761530,0,0x0,8
tick,0x7ff999646dc4,104776890,0,0x0,8
tick,0x7ff999646dc4,104792105,0,0x0,8
tick,0x7ff999646dc4,104807032,0,0x0,8
tick,0x7ff999646dc4,104822384,0,0x0,8
tick,0x7ff999646dc4,104837769,0,0x0,8
tick,0x7ff999646dc4,104853429,0,0x0,8
tick,0x7ff999646dc4,104868645,0,0x0,8
tick,0x7ff999646dc4,104883538,0,0x0,8
tick,0x7ff999646dc4,104899389,0,0x0,8
tick,0x7ff999646dc4,104914318,0,0x0,8
tick,0x7ff999646dc4,104929715,0,0x0,8
tick,0x7ff999646dc4,104945286,0,0x0,8
tick,0x7ff999646dc4,104960375,0,0x0,8
tick,0x7ff999646dc4,104975881,0,0x0,8
tick,0x7ff999646dc4,104991668,0,0x0,8
tick,0x7ff999646dc4,105006713,0,0x0,8
tick,0x7ff999646dc4,105022186,0,0x0,8
tick,0x7ff999646dc4,105037017,0,0x0,8
tick,0x7ff999646dc4,105052452,0,0x0,8
tick,0x7ff999646dc4,105067934,0,0x0,8
tick,0x7ff999646dc4,105083680,0,0x0,8
tick,0x7ff999646dc4,105098541,0,0x0,8
tick,0x7ff999646dc4,105114091,0,0x0,8
tick,0x7ff999646dc4,105129357,0,0x0,8
tick,0x7ff999646dc4,105144805,0,0x0,8
tick,0x7ff999646dc4,105159583,0,0x0,8
tick,0x7ff999646dc4,105174925,0,0x0,8
tick,0x7ff999646dc4,105190422,0,0x0,8
tick,0x7ff999646dc4,105206041,0,0x0,8
tick,0x7ff999646dc4,105221576,0,0x0,8
tick,0x7ff999646dc4,105237023,0,0x0,8
tick,0x7ff999646dc4,105252647,0,0x0,8
tick,0x7ff999646dc4,105267725,0,0x0,8
tick,0x7ff999646dc4,105283236,0,0x0,8
tick,0x7ff999646dc4,105297436,0,0x0,8
tick,0x7ff999646dc4,105313181,0,0x0,8
tick,0x7ff999646dc4,105328408,0,0x0,8
tick,0x7ff999646dc4,105343088,0,0x0,8
tick,0x7ff999646dc4,105358481,0,0x0,8
tick,0x7ff999646dc4,105373872,0,0x0,8
tick,0x7ff999646dc4,105389431,0,0x0,8
tick,0x7ff999646dc4,105404720,0,0x0,8
tick,0x7ff999646dc4,105420091,0,0x0,8
tick,0x7ff999646dc4,105435793,0,0x0,8
tick,0x7ff999646dc4,105451324,0,0x0,8
tick,0x7ff999646dc4,105466982,0,0x0,8
tick,0x7ff999646dc4,105482024,0,0x0,8
tick,0x7ff999646dc4,105497889,0,0x0,8
tick,0x7ff999646dc4,105513095,0,0x0,8
tick,0x7ff999646dc4,105527907,0,0x0,8
tick,0x7ff999646dc4,105543290,0,0x0,8
tick,0x7ff999646dc4,105558688,0,0x0,8
tick,0x7ff999646dc4,105573987,0,0x0,8
tick,0x7ff999646dc4,105589376,0,0x0,8
tick,0x7ff999646dc4,105604496,0,0x0,8
tick,0x7ff999646dc4,105619868,0,0x0,8
tick,0x7ff999646dc4,105635624,0,0x0,8
tick,0x7ff999646dc4,105651067,0,0x0,8
tick,0x7ff999646dc4,105665869,0,0x0,8
tick,0x7ff999646dc4,105681281,0,0x0,8
tick,0x7ff999646dc4,105696682,0,0x0,8
tick,0x7ff999646dc4,105711889,0,0x0,8
tick,0x7ff999646dc4,105727482,0,0x0,8
tick,0x7ff999646dc4,105742924,0,0x0,8
tick,0x7ff999646dc4,105758225,0,0x0,8
tick,0x7ff999646dc4,105773695,0,0x0,8
tick,0x7ff999646dc4,105788929,0,0x0,8
tick,0x7ff999646dc4,105804349,0,0x0,8
tick,0x7ff999646dc4,105819348,0,0x0,8
tick,0x7ff999646dc4,105834701,0,0x0,8
tick,0x7ff999646dc4,105850066,0,0x0,8
tick,0x7ff999646dc4,105865483,0,0x0,8
tick,0x7ff999646dc4,105880607,0,0x0,8
tick,0x7ff999646dc4,105896073,0,0x0,8
tick,0x7ff999646dc4,105911405,0,0x0,8
tick,0x7ff999646dc4,105926905,0,0x0,8
tick,0x7ff999646dc4,105942046,0,0x0,8
tick,0x7ff999646dc4,105957528,0,0x0,8
tick,0x7ff999646dc4,105973105,0,0x0,8
tick,0x7ff999646dc4,105988111,0,0x0,8
tick,0x7ff999646dc4,106003131,0,0x0,8
tick,0x7ff999646dc4,106018599,0,0x0,8
tick,0x7ff999646dc4,106033791,0,0x0,8
tick,0x7ff999646dc4,106048748,0,0x0,8
tick,0x7ff999646dc4,106064081,0,0x0,8
tick,0x7ff999646dc4,106079613,0,0x0,8
tick,0x7ff999646dc4,106094751,0,0x0,8
tick,0x7ff999646dc4,106110209,0,0x0,8
tick,0x7ff999646dc4,106125623,0,0x0,8
tick,0x7ff999646dc4,106141132,0,0x0,8
tick,0x7ff999646dc4,106155626,0,0x0,8
tick,0x7ff999646dc4,106171128,0,0x0,8
tick,0x7ff999646dc4,106186339,0,0x0,8
tick,0x7ff999646dc4,106201751,0,0x0,8
tick,0x7ff999646dc4,106217410,0,0x0,8
tick,0x7ff999646dc4,106232646,0,0x0,8
tick,0x7ff999646dc4,106247732,0,0x0,8
tick,0x7ff999646dc4,106262669,0,0x0,8
tick,0x7ff999646dc4,106277497,0,0x0,8
tick,0x7ff999646dc4,106292446,0,0x0,8
tick,0x7ff999646dc4,106307959,0,0x0,8
tick,0x7ff999646dc4,106322813,0,0x0,8
tick,0x7ff999646dc4,106338208,0,0x0,8
tick,0x7ff999646dc4,106353638,0,0x0,8
tick,0x7ff999646dc4,106368987,0,0x0,8
tick,0x7ff999646dc4,106384349,0,0x0,8
tick,0x7ff999646dc4,106399625,0,0x0,8
tick,0x7ff999646dc4,106415050,0,0x0,8
tick,0x7ff999646dc4,106430347,0,0x0,8
tick,0x7ff999646dc4,106445802,0,0x0,8
tick,0x7ff999646dc4,106460939,0,0x0,8
tick,0x7ff999646dc4,106476622,0,0x0,8
tick,0x7ff999646dc4,106491741,0,0x0,8
tick,0x7ff999646dc4,106507362,0,0x0,8
tick,0x7ff999646dc4,106522881,0,0x0,8
tick,0x7ff999646dc4,106537603,0,0x0,8
tick,0x7ff999646dc4,106552646,0,0x0,8
tick,0x7ff999646dc4,106567713,0,0x0,8
tick,0x7ff999646dc4,106582435,0,0x0,8
tick,0x7ff999646dc4,106597819,0,0x0,8
tick,0x7ff999646dc4,106612772,0,0x0,8
tick,0x7ff999646dc4,106628071,0,0x0,8
tick,0x7ff999646dc4,106643495,0,0x0,8
tick,0x7ff999646dc4,106658933,0,0x0,8
tick,0x7ff999646dc4,106674361,0,0x0,8
tick,0x7ff999646dc4,106689632,0,0x0,8
tick,0x7ff999646dc4,106705110,0,0x0,8
tick,0x7ff999646dc4,106720747,0,0x0,8
tick,0x7ff999646dc4,106736117,0,0x0,8
tick,0x7ff999646dc4,106751756,0,0x0,8
tick,0x7ff999646dc4,106766954,0,0x0,8
tick,0x7ff999646dc4,106782029,0,0x0,8
tick,0x7ff999646dc4,106797515,0,0x0,8
tick,0x7ff999646dc4,106812762,0,0x0,8
tick,0x7ff999646dc4,106827580,0,0x0,8
tick,0x7ff999646dc4,106842784,0,0x0,8
tick,0x7ff999646dc4,106858436,0,0x0,8
tick,0x7ff999646dc4,106873569,0,0x0,8
tick,0x7ff999646dc4,106889031,0,0x0,8
tick,0x7ff999646dc4,106904404,0,0x0,8
tick,0x7ff999646dc4,106919553,0,0x0,8
tick,0x7ff999646dc4,106935347,0,0x0,8
tick,0x7ff999646dc4,106950742,0,0x0,8
tick,0x7ff999646dc4,106966306,0,0x0,8
tick,0x7ff999646dc4,106981894,0,0x0,8
tick,0x7ff999646dc4,106996844,0,0x0,8
tick,0x7ff999646dc4,107012421,0,0x0,8
tick,0x7ff999646dc4,107027488,0,0x0,8
tick,0x7ff999646dc4,107042425,0,0x0,8
tick,0x7ff999646dc4,107057763,0,0x0,8
tick,0x7ff999646dc4,107073125,0,0x0,8
tick,0x7ff999646dc4,107088785,0,0x0,8
tick,0x7ff999646dc4,107103417,0,0x0,8
tick,0x7ff999646dc4,107118712,0,0x0,8
tick,0x7ff999646dc4,107134070,0,0x0,8
tick,0x7ff999646dc4,107149563,0,0x0,8
tick,0x7ff999646dc4,107164937,0,0x0,8
tick,0x7ff999646dc4,107180334,0,0x0,8
tick,0x7ff999646dc4,107195769,0,0x0,8
tick,0x7ff999646dc4,107211298,0,0x0,8
tick,0x7ff999646dc4,107226568,0,0x0,8
tick,0x7ff999646dc4,107242205,0,0x0,8
tick,0x7ff999646dc4,107257414,0,0x0,8
tick,0x7ff999646dc4,107272633,0,0x0,8
tick,0x7ff999646dc4,107287940,0,0x0,8
tick,0x7ff999646dc4,107302861,0,0x0,8
tick,0x7ff999646dc4,107318327,0,0x0,8
tick,0x7ff999646dc4,107333722,0,0x0,8
tick,0x7ff999646dc4,107348951,0,0x0,8
tick,0x7ff999646dc4,107364355,0,0x0,8
tick,0x7ff999646dc4,107379761,0,0x0,8
tick,0x7ff999646dc4,107395099,0,0x0,8
tick,0x7ff999646dc4,107410539,0,0x0,8
tick,0x7ff999646dc4,107425885,0,0x0,8
tick,0x7ff999646dc4,107440931,0,0x0,8
tick,0x7ff999646dc4,107456543,0,0x0,8
tick,0x7ff999646dc4,107472117,0,0x0,8
tick,0x7ff999646dc4,107487632,0,0x0,8
tick,0x7ff999646dc4,107502520,0,0x0,8
tick,0x7ff999646dc4,107517888,0,0x0,8
tick,0x7ff999646dc4,107533229,0,0x0,8
tick,0x7ff999646dc4,107548601,0,0x0,8
tick,0x7ff999646dc4,107563510,0,0x0,8
tick,0x7ff999646dc4,107578825,0,0x0,8
tick,0x7ff999646dc4,107594244,0,0x0,8
tick,0x7ff999646dc4,107609538,0,0x0,8
tick,0x7ff999646dc4,107624432,0,0x0,8
tick,0x7ff999646dc4,107640539,0,0x0,8
tick,0x7ff999646dc4,107654932,0,0x0,8
tick,0x7ff999646dc4,107670330,0,0x0,8
tick,0x7ff999646dc4,107686354,0,0x0,8
tick,0x7ff999646dc4,107701455,0,0x0,8
tick,0x7ff999646dc4,107716898,0,0x0,8
tick,0x7ff999646dc4,107732385,0,0x0,8
tick,0x7ff999646dc4,107747820,0,0x0,8
tick,0x7ff999646dc4,107763119,0,0x0,8
tick,0x7ff999646dc4,107779246,0,0x0,8
tick,0x7ff999646dc4,107793828,0,0x0,8
tick,0x7ff999646dc4,107809342,0,0x0,8
tick,0x7ff999646dc4,107824478,0,0x0,8
tick,0x7ff999646dc4,107839394,0,0x0,8
tick,0x7ff999646dc4,107855033,0,0x0,8
tick,0x7ff999646dc4,107869734,0,0x0,8
tick,0x7ff999646dc4,107885090,0,0x0,8
tick,0x7ff999646dc4,107900593,0,0x0,8
tick,0x7ff999646dc4,107916019,0,0x0,8
tick,0x7ff999646dc4,107931167,0,0x0,8
tick,0x7ff999646dc4,107946588,0,0x0,8
tick,0x7ff999646dc4,107962140,0,0x0,8
tick,0x7ff999646dc4,107977719,0,0x0,8
tick,0x7ff999646dc4,107993187,0,0x0,8
tick,0x7ff999646dc4,108008457,0,0x0,8
tick,0x7ff999646dc4,108023981,0,0x0,8
tick,0x7ff999646dc4,108039343,0,0x0,8
tick,0x7ff999646dc4,108054222,0,0x0,8
tick,0x7ff999646dc4,108070010,0,0x0,8
tick,0x7ff999646dc4,108084787,0,0x0,8
tick,0x7ff999646dc4,108100765,0,0x0,8
tick,0x7ff999646dc4,108115945,0,0x0,8
tick,0x7ff999646dc4,108131078,0,0x0,8
tick,0x7ff999646dc4,108146191,0,0x0,8
tick,0x7ff999646dc4,108161332,0,0x0,8
tick,0x7ff999646dc4,108176651,0,0x0,8
tick,0x7ff999646dc4,108191893,0,0x0,8
tick,0x7ff999646dc4,108207550,0,0x0,8
tick,0x7ff999646dc4,108222987,0,0x0,8
tick,0x7ff999646dc4,108238197,0,0x0,8
tick,0x7ff999646dc4,108253580,0,0x0,8
tick,0x7ff999646dc4,108268709,0,0x0,8
tick,0x7ff999646dc4,108284205,0,0x0,8
tick,0x7ff999646dc4,108298841,0,0x0,8
tick,0x7ff999646dc4,108314428,0,0x0,8
tick,0x7ff999646dc4,108329850,0,0x0,8
tick,0x7ff999646dc4,108345029,0,0x0,8
tick,0x7ff999646dc4,108360003,0,0x0,8
tick,0x7ff999646dc4,108375973,0,0x0,8
tick,0x7ff999646dc4,108391125,0,0x0,8
tick,0x7ff999646dc4,108406591,0,0x0,8
tick,0x7ff999646dc4,108421697,0,0x0,8
tick,0x7ff999646dc4,108436889,0,0x0,8
tick,0x7ff999646dc4,108452508,0,0x0,8
tick,0x7ff999646dc4,108467739,0,0x0,8
tick,0x7ff999646dc4,108483304,0,0x0,8
tick,0x7ff999646dc4,108499434,0,0x0,8
tick,0x7ff999646dc4,108514229,0,0x0,8
tick,0x7ff999646dc4,108529653,0,0x0,8
tick,0x7ff999646dc4,108545339,0,0x0,8
tick,0x7ff999646dc4,108560573,0,0x0,8
tick,0x7ff999646dc4,108576028,0,0x0,8
tick,0x7ff999646dc4,108591472,0,0x0,8
tick,0x7ff999646dc4,108606968,0,0x0,8
tick,0x7ff999646dc4,108622146,0,0x0,8
tick,0x7ff999646dc4,108637984,0,0x0,8
tick,0x7ff999646dc4,108652443,0,0x0,8
tick,0x7ff999646dc4,108667880,0,0x0,8
tick,0x7ff999646dc4,108683192,0,0x0,8
tick,0x7ff999646dc4,108698758,0,0x0,8
tick,0x7ff999646dc4,108713228,0,0x0,8
tick,0x7ff999646dc4,108728715,0,0x0,8
tick,0x7ff999646dc4,108744382,0,0x0,8
tick,0x7ff999646dc4,108760035,0,0x0,8
tick,0x7ff999646dc4,108774716,0,0x0,8
tick,0x7ff999646dc4,108790281,0,0x0,8
tick,0x7ff999646dc4,108805511,0,0x0,8
tick,0x7ff999646dc4,108821014,0,0x0,8
tick,0x7ff999646dc4,108836144,0,0x0,8
tick,0x7ff999646dc4,108851561,0,0x0,8
tick,0x7ff999646dc4,108866808,0,0x0,8
tick,0x7ff999646dc4,108881591,0,0x0,8
tick,0x7ff999646dc4,108897308,0,0x0,8
tick,0x7ff999646dc4,108911878,0,0x0,8
tick,0x7ff999646dc4,108927254,0,0x0,8
tick,0x7ff999646dc4,108943934,0,0x0,8
tick,0x7ff999646dc4,108957885,0,0x0,8
tick,0x7ff999646dc4,108974278,0,0x0,8
tick,0x7ff999646dc4,108989452,0,0x0,8
tick,0x7ff999646dc4,109005708,0,0x0,8
tick,0x7ff999646dc4,109019737,0,0x0,8
tick,0x7ff999646dc4,109034391,0,0x0,8
tick,0x7ff999646dc4,109049950,0,0x0,8
tick,0x7ff999646dc4,109065172,0,0x0,8
tick,0x7ff999646dc4,109079901,0,0x0,8
tick,0x7ff999646dc4,109095189,0,0x0,8
tick,0x7ff999646dc4,109111328,0,0x0,8
tick,0x7ff999646dc4,109126151,0,0x0,8
tick,0x7ff999646dc4,109141526,0,0x0,8
tick,0x7ff999646dc4,109157653,0,0x0,8
tick,0x7ff999646dc4,109190960,0,0x0,8
tick,0x7ff999646dc4,109204552,0,0x0,8
tick,0x7ff999646dc4,109219571,0,0x0,8
tick,0x7ff999646dc4,109233898,0,0x0,8
tick,0x7ff999646dc4,109249191,0,0x0,8
tick,0x7ff999646dc4,109264383,0,0x0,8
tick,0x7ff999646dc4,109280136,0,0x0,8
tick,0x7ff999646dc4,109295217,0,0x0,8
tick,0x7ff999646dc4,109310354,0,0x0,8
tick,0x7ff999646dc4,109325973,0,0x0,8
tick,0x7ff999646dc4,109342016,0,0x0,8
tick,0x7ff999646dc4,109356529,0,0x0,8
tick,0x7ff999646dc4,109371799,0,0x0,8
tick,0x7ff999646dc4,109387099,0,0x0,8
tick,0x7ff999646dc4,109402680,0,0x0,8
tick,0x7ff999646dc4,109418586,0,0x0,8
tick,0x7ff999646dc4,109433506,0,0x0,8
tick,0x7ff999646dc4,109448920,0,0x0,8
tick,0x7ff999646dc4,109464572,0,0x0,8
tick,0x7ff999646dc4,109479746,0,0x0,8
tick,0x7ff999646dc4,109495356,0,0x0,8
tick,0x7ff999646dc4,109510202,0,0x0,8
tick,0x7ff999646dc4,109525353,0,0x0,8
tick,0x7ff999646dc4,109540366,0,0x0,8
tick,0x7ff999646dc4,109556628,0,0x0,8
tick,0x7ff999646dc4,109571148,0,0x0,8
tick,0x7ff999646dc4,109586707,0,0x0,8
tick,0x7ff999646dc4,109601748,0,0x0,8
tick,0x7ff999646dc4,109616988,0,0x0,8
tick,0x7ff999646dc4,109632647,0,0x0,8
tick,0x7ff999646dc4,109648562,0,0x0,8
tick,0x7ff999646dc4,109663521,0,0x0,8
tick,0x7ff999646dc4,109679912,0,0x0,8
tick,0x7ff999646dc4,109694670,0,0x0,8
tick,0x7ff999646dc4,109709207,0,0x0,8
tick,0x7ff999646dc4,109724652,0,0x0,8
tick,0x7ff999646dc4,109740093,0,0x0,8
tick,0x7ff999646dc4,109755280,0,0x0,8
tick,0x7ff999646dc4,109770219,0,0x0,8
tick,0x7ff999646dc4,109785479,0,0x0,8
tick,0x7ff999646dc4,109800757,0,0x0,8
tick,0x7ff999646dc4,109815997,0,0x0,8
tick,0x7ff999646dc4,109831405,0,0x0,8
tick,0x7ff999646dc4,109846725,0,0x0,8
tick,0x7ff999646dc4,109862150,0,0x0,8
tick,0x7ff999646dc4,109877508,0,0x0,8
tick,0x7ff999646dc4,109892946,0,0x0,8
tick,0x7ff999646dc4,109908356,0,0x0,8
tick,0x7ff999646dc4,109923959,0,0x0,8
tick,0x7ff999646dc4,109939356,0,0x0,8
tick,0x7ff999646dc4,109954183,0,0x0,8
tick,0x7ff999646dc4,109969351,0,0x0,8
tick,0x7ff999646dc4,109984622,0,0x0,8
tick,0x7ff999646dc4,109999786,0,0x0,8
tick,0x7ff999646dc4,110015080,0,0x0,8
tick,0x7ff999646dc4,110030257,0,0x0,8
tick,0x7ff999646dc4,110045651,0,0x0,8
tick,0x7ff999646dc4,110061311,0,0x0,8
tick,0x7ff999646dc4,110076609,0,0x0,8
tick,0x7ff999646dc4,110092130,0,0x0,8
tick,0x7ff999646dc4,110107397,0,0x0,8
tick,0x7ff999646dc4,110123290,0,0x0,8
tick,0x7ff999646dc4,110138413,0,0x0,8
tick,0x7ff999646dc4,110153775,0,0x0,8
tick,0x7ff999646dc4,110168949,0,0x0,8
tick,0x7ff999646dc4,110184552,0,0x0,8
tick,0x7ff999646dc4,110199947,0,0x0,8
tick,0x7ff999646dc4,110214641,0,0x0,8
tick,0x7ff999646dc4,110230113,0,0x0,8
tick,0x7ff999646dc4,110245347,0,0x0,8
tick,0x7ff999646dc4,110260674,0,0x0,8
tick,0x7ff999646dc4,110276235,0,0x0,8
tick,0x7ff999646dc4,110290979,0,0x0,8
tick,0x7ff999646dc4,110306703,0,0x0,8
tick,0x7ff999646dc4,110321917,0,0x0,8
tick,0x7ff999646dc4,110336989,0,0x0,8
tick,0x7ff999646dc4,110352230,0,0x0,8
tick,0x7ff999646dc4,110367614,0,0x0,8
tick,0x7ff999646dc4,110383225,0,0x0,8
tick,0x7ff999646dc4,110398661,0,0x0,8
tick,0x7ff999646dc4,110414301,0,0x0,8
tick,0x7ff999646dc4,110429507,0,0x0,8
tick,0x7ff999646dc4,110444945,0,0x0,8
tick,0x7ff999646dc4,110460598,0,0x0,8
tick,0x7ff999646dc4,110475319,0,0x0,8
tick,0x7ff999646dc4,110491020,0,0x0,8
tick,0x7ff999646dc4,110506146,0,0x0,8
tick,0x7ff999646dc4,110520899,0,0x0,8
tick,0x7ff999646dc4,110536206,0,0x0,8
tick,0x7ff999646dc4,110551762,0,0x0,8
tick,0x7ff999646dc4,110567219,0,0x0,8
tick,0x7ff999646dc4,110582560,0,0x0,8
tick,0x7ff999646dc4,110597831,0,0x0,8
tick,0x7ff999646dc4,110613163,0,0x0,8
tick,0x7ff999646dc4,110628349,0,0x0,8
tick,0x7ff999646dc4,110643536,0,0x0,8
tick,0x7ff999646dc4,110658718,0,0x0,8
tick,0x7ff999646dc4,110674111,0,0x0,8
tick,0x7ff999646dc4,110689403,0,0x0,8
tick,0x7ff999646dc4,110704510,0,0x0,8
tick,0x7ff999646dc4,110719929,0,0x0,8
tick,0x7ff999646dc4,110734898,0,0x0,8
tick,0x7ff999646dc4,110750116,0,0x0,8
tick,0x7ff999646dc4,110765311,0,0x0,8
tick,0x7ff999646dc4,110780863,0,0x0,8
tick,0x7ff999646dc4,110795985,0,0x0,8
tick,0x7ff999646dc4,110811641,0,0x0,8
tick,0x7ff999646dc4,110826872,0,0x0,8
tick,0x7ff999646dc4,110842641,0,0x0,8
tick,0x7ff999646dc4,110858063,0,0x0,8
tick,0x7ff999646dc4,110873695,0,0x0,8
tick,0x7ff999646dc4,110888577,0,0x0,8
tick,0x7ff999646dc4,110904015,0,0x0,8
tick,0x7ff999646dc4,110919585,0,0x0,8
tick,0x7ff999646dc4,110934809,0,0x0,8
tick,0x7ff999646dc4,110950108,0,0x0,8
tick,0x7ff999646dc4,110965801,0,0x0,8
tick,0x7ff999646dc4,110981232,0,0x0,8
tick,0x7ff999646dc4,110996045,0,0x0,8
tick,0x7ff999646dc4,111011525,0,0x0,8
tick,0x7ff999646dc4,111026918,0,0x0,8
tick,0x7ff999646dc4,111042188,0,0x0,8
tick,0x7ff999646dc4,111057331,0,0x0,8
tick,0x7ff999646dc4,111072993,0,0x0,8
tick,0x7ff999646dc4,111087887,0,0x0,8
tick,0x7ff999646dc4,111103225,0,0x0,8
tick,0x7ff999646dc4,111118727,0,0x0,8
tick,0x7ff999646dc4,111135168,0,0x0,8
tick,0x7ff999646dc4,111149512,0,0x0,8
tick,0x7ff999646dc4,111165154,0,0x0,8
tick,0x7ff999646dc4,111180709,0,0x0,8
tick,0x7ff999646dc4,111195707,0,0x0,8
tick,0x7ff999646dc4,111210525,0,0x0,8
tick,0x7ff999646dc4,111225995,0,0x0,8
tick,0x7ff999646dc4,111241516,0,0x0,8
tick,0x7ff999646dc4,111256924,0,0x0,8
tick,0x7ff999646dc4,111272024,0,0x0,8
tick,0x7ff999646dc4,111287428,0,0x0,8
tick,0x7ff999646dc4,111302370,0,0x0,8
tick,0x7ff999646dc4,111317586,0,0x0,8
tick,0x7ff999646dc4,111333294,0,0x0,8
tick,0x7ff999646dc4,111348483,0,0x0,8
tick,0x7ff999646dc4,111364338,0,0x0,8
tick,0x7ff999646dc4,111379908,0,0x0,8
tick,0x7ff999646dc4,111395462,0,0x0,8
tick,0x7ff999646dc4,111410380,0,0x0,8
tick,0x7ff999646dc4,111425763,0,0x0,8
tick,0x7ff999646dc4,111441201,0,0x0,8
tick,0x7ff999646dc4,111456575,0,0x0,8
tick,0x7ff999646dc4,111471871,0,0x0,8
tick,0x7ff999646dc4,111486989,0,0x0,8
tick,0x7ff999646dc4,111502301,0,0x0,8
tick,0x7ff999646dc4,111517436,0,0x0,8
tick,0x7ff999646dc4,111532994,0,0x0,8
tick,0x7ff999646dc4,111548206,0,0x0,8
tick,0x7ff999646dc4,111563789,0,0x0,8
tick,0x7ff999646dc4,111579248,0,0x0,8
tick,0x7ff999646dc4,111594997,0,0x0,8
tick,0x7ff999646dc4,111610178,0,0x0,8
tick,0x7ff999646dc4,111625957,0,0x0,8
tick,0x7ff999646dc4,111640882,0,0x0,8
tick,0x7ff999646dc4,111656258,0,0x0,8
tick,0x7ff999646dc4,111671523,0,0x0,8
tick,0x7ff999646dc4,111686800,0,0x0,8
tick,0x7ff999646dc4,111702004,0,0x0,8
tick,0x7ff999646dc4,111717071,0,0x0,8
tick,0x7ff999646dc4,111732181,0,0x0,8
tick,0x7ff999646dc4,111747705,0,0x0,8
tick,0x7ff999646dc4,111762655,0,0x0,8
tick,0x7ff999646dc4,111777288,0,0x0,8
tick,0x7ff999646dc4,111792558,0,0x0,8
tick,0x7ff999646dc4,111809504,0,0x0,8
tick,0x7ff999646dc4,111822609,0,0x0,8
tick,0x7ff999646dc4,111837725,0,0x0,8
tick,0x7ff999646dc4,111852921,0,0x0,8
tick,0x7ff999646dc4,111868026,0,0x0,8
tick,0x7ff999646dc4,111882917,0,0x0,8
tick,0x7ff999646dc4,111898223,0,0x0,8
tick,0x7ff999646dc4,111913508,0,0x0,8
tick,0x7ff999646dc4,111928835,0,0x0,8
tick,0x7ff999646dc4,111943934,0,0x0,8
tick,0x7ff999646dc4,111959114,0,0x0,8
tick,0x7ff999646dc4,111974932,0,0x0,8
tick,0x7ff999646dc4,111990396,0,0x0,8
tick,0x7ff999646dc4,112005416,0,0x0,8
tick,0x7ff999646dc4,112021231,0,0x0,8
tick,0x7ff999646dc4,112036537,0,0x0,8
tick,0x7ff999646dc4,112052242,0,0x0,8
tick,0x7ff999646dc4,112067316,0,0x0,8
tick,0x7ff999646dc4,112082867,0,0x0,8
tick,0x7ff999646dc4,112098522,0,0x0,8
tick,0x7ff999646dc4,112113890,0,0x0,8
tick,0x7ff999646dc4,112129040,0,0x0,8
tick,0x7ff999646dc4,112145474,0,0x0,8
tick,0x7ff999646dc4,112160157,0,0x0,8
tick,0x7ff999646dc4,112175296,0,0x0,8
tick,0x7ff999646dc4,112190115,0,0x0,8
tick,0x7ff999646dc4,112205695,0,0x0,8
tick,0x7ff999646dc4,112221082,0,0x0,8
tick,0x7ff999646dc4,112235925,0,0x0,8
tick,0x7ff999646dc4,112251496,0,0x0,8
tick,0x7ff999646dc4,112267009,0,0x0,8
tick,0x7ff999646dc4,112281992,0,0x0,8
tick,0x7ff999646dc4,112297362,0,0x0,8
tick,0x7ff999646dc4,112312686,0,0x0,8
tick,0x7ff999646dc4,112328285,0,0x0,8
tick,0x7ff999646dc4,112343764,0,0x0,8
tick,0x7ff999646dc4,112359233,0,0x0,8
tick,0x7ff999646dc4,112374226,0,0x0,8
tick,0x7ff999646dc4,112389600,0,0x0,8
tick,0x7ff999646dc4,112404849,0,0x0,8
tick,0x7ff999646dc4,112420249,0,0x0,8
tick,0x7ff999646dc4,112435620,0,0x0,8
tick,0x7ff999646dc4,112450385,0,0x0,8
tick,0x7ff999646dc4,112465839,0,0x0,8
tick,0x7ff999646dc4,112481330,0,0x0,8
tick,0x7ff999646dc4,112496517,0,0x0,8
tick,0x7ff999646dc4,112512196,0,0x0,8
tick,0x7ff999646dc4,112527748,0,0x0,8
tick,0x7ff999646dc4,112543093,0,0x0,8
tick,0x7ff999646dc4,112558430,0,0x0,8
tick,0x7ff999646dc4,112573974,0,0x0,8
tick,0x7ff999646dc4,112589160,0,0x0,8
tick,0x7ff999646dc4,112604688,0,0x0,8
tick,0x7ff999646dc4,112620339,0,0x0,8
tick,0x7ff999646dc4,112635561,0,0x0,8
tick,0x7ff999646dc4,112650836,0,0x0,8
tick,0x7ff999646dc4,112666300,0,0x0,8
tick,0x7ff999646dc4,112683039,0,0x0,8
tick,0x7ff999646dc4,112697222,0,0x0,8
tick,0x7ff999646dc4,112712490,0,0x0,8
tick,0x7ff999646dc4,112728138,0,0x0,8
tick,0x7ff999646dc4,112743266,0,0x0,8
tick,0x7ff999646dc4,112759360,0,0x0,8
tick,0x7ff999646dc4,112774828,0,0x0,8
tick,0x7ff999646dc4,112789735,0,0x0,8
tick,0x7ff999646dc4,112806212,0,0x0,8
tick,0x7ff999646dc4,112820995,0,0x0,8
tick,0x7ff999646dc4,112836924,0,0x0,8
tick,0x7ff999646dc4,112852297,0,0x0,8
tick,0x7ff999646dc4,112867235,0,0x0,8
tick,0x7ff999646dc4,112882861,0,0x0,8
tick,0x7ff999646dc4,112898116,0,0x0,8
tick,0x7ff999646dc4,112913514,0,0x0,8
tick,0x7ff999646dc4,112928567,0,0x0,8
tick,0x7ff999646dc4,112943587,0,0x0,8
tick,0x7ff999646dc4,112959439,0,0x0,8
tick,0x7ff999646dc4,112974373,0,0x0,8
tick,0x7ff999646dc4,112989891,0,0x0,8
tick,0x7ff999646dc4,113005255,0,0x0,8
tick,0x7ff999646dc4,113020386,0,0x0,8
tick,0x7ff999646dc4,113035927,0,0x0,8
tick,0x7ff999646dc4,113051406,0,0x0,8
tick,0x7ff999646dc4,113066870,0,0x0,8
tick,0x7ff999646dc4,113082092,0,0x0,8
tick,0x7ff999646dc4,113097352,0,0x0,8
tick,0x7ff999646dc4,113112787,0,0x0,8
tick,0x7ff999646dc4,113127852,0,0x0,8
tick,0x7ff999646dc4,113143254,0,0x0,8
tick,0x7ff999646dc4,113159266,0,0x0,8
tick,0x7ff999646dc4,113173624,0,0x0,8
tick,0x7ff999646dc4,113189105,0,0x0,8
tick,0x7ff999646dc4,113204272,0,0x0,8
tick,0x7ff999646dc4,113219673,0,0x0,8
tick,0x7ff999646dc4,113234929,0,0x0,8
tick,0x7ff999646dc4,113250473,0,0x0,8
tick,0x7ff999646dc4,113265838,0,0x0,8
tick,0x7ff999646dc4,113281036,0,0x0,8
tick,0x7ff999646dc4,113296634,0,0x0,8
tick,0x7ff999646dc4,113312339,0,0x0,8
tick,0x7ff999646dc4,113327631,0,0x0,8
tick,0x7ff999646dc4,113342900,0,0x0,8
tick,0x7ff999646dc4,113358412,0,0x0,8
tick,0x7ff999646dc4,113373676,0,0x0,8
tick,0x7ff999646dc4,113388533,0,0x0,8
tick,0x7ff999646dc4,113404163,0,0x0,8
tick,0x7ff999646dc4,113419410,0,0x0,8
tick,0x7ff999646dc4,113435021,0,0x0,8
tick,0x7ff999646dc4,113450466,0,0x0,8
tick,0x7ff999646dc4,113465421,0,0x0,8
tick,0x7ff999646dc4,113480802,0,0x0,8
tick,0x7ff999646dc4,113496018,0,0x0,8
tick,0x7ff999646dc4,113511296,0,0x0,8
tick,0x7ff999646dc4,113526822,0,0x0,8
tick,0x7ff999646dc4,113542780,0,0x0,8
tick,0x7ff999646dc4,113557733,0,0x0,8
tick,0x7ff999646dc4,113573057,0,0x0,8
tick,0x7ff999646dc4,113589082,0,0x0,8
tick,0x7ff999646dc4,113603775,0,0x0,8
tick,0x7ff999646dc4,113619122,0,0x0,8
tick,0x7ff999646dc4,113634758,0,0x0,8
tick,0x7ff999646dc4,113650243,0,0x0,8
tick,0x7ff999646dc4,113665713,0,0x0,8
tick,0x7ff999646dc4,113681129,0,0x0,8
tick,0x7ff999646dc4,113696488,0,0x0,8
tick,0x7ff999646dc4,113711976,0,0x0,8
tick,0x7ff999646dc4,113727159,0,0x0,8
tick,0x7ff999646dc4,113742815,0,0x0,8
tick,0x7ff999646dc4,113758167,0,0x0,8
tick,0x7ff999646dc4,113773787,0,0x0,8
tick,0x7ff999646dc4,113788838,0,0x0,8
tick,0x7ff999646dc4,113804367,0,0x0,8
tick,0x7ff999646dc4,113819720,0,0x0,8
tick,0x7ff999646dc4,113835119,0,0x0,8
tick,0x7ff999646dc4,113851362,0,0x0,8
tick,0x7ff999646dc4,113865846,0,0x0,8
tick,0x7ff999646dc4,113881220,0,0x0,8
tick,0x7ff999646dc4,113896467,0,0x0,8
tick,0x7ff999646dc4,113911820,0,0x0,8
tick,0x7ff999646dc4,113927117,0,0x0,8
tick,0x7ff999646dc4,113941828,0,0x0,8
tick,0x7ff999646dc4,113957311,0,0x0,8
tick,0x7ff999646dc4,113973055,0,0x0,8
tick,0x7ff999646dc4,113988687,0,0x0,8
tick,0x7ff999646dc4,114003971,0,0x0,8
tick,0x7ff999646dc4,114018972,0,0x0,8
tick,0x7ff999646dc4,114034566,0,0x0,8
tick,0x7ff999646dc4,114049702,0,0x0,8
tick,0x7ff999646dc4,114065418,0,0x0,8
tick,0x7ff999646dc4,114080329,0,0x0,8
tick,0x7ff999646dc4,114095933,0,0x0,8
tick,0x7ff999646dc4,114112713,0,0x0,8
tick,0x7ff999646dc4,114126758,0,0x0,8
tick,0x7ff999646dc4,114142069,0,0x0,8
tick,0x7ff999646dc4,114157197,0,0x0,8
tick,0x7ff999646dc4,114172826,0,0x0,8
tick,0x7ff999646dc4,114188260,0,0x0,8
tick,0x7ff999646dc4,114203424,0,0x0,8
tick,0x7ff999646dc4,114218486,0,0x0,8
tick,0x7ff999646dc4,114234140,0,0x0,8
tick,0x7ff999646dc4,114249311,0,0x0,8
tick,0x7ff999646dc4,114264384,0,0x0,8
tick,0x7ff999646dc4,114279827,0,0x0,8
tick,0x7ff999646dc4,114295008,0,0x0,8
tick,0x7ff999646dc4,114310191,0,0x0,8
tick,0x7ff999646dc4,114325350,0,0x0,8
tick,0x7ff999646dc4,114340791,0,0x0,8
tick,0x7ff999646dc4,114356178,0,0x0,8
tick,0x7ff999646dc4,114371728,0,0x0,8
tick,0x7ff999646dc4,114386994,0,0x0,8
tick,0x7ff999646dc4,114402580,0,0x0,8
tick,0x7ff999646dc4,114418285,0,0x0,8
tick,0x7ff999646dc4,114433732,0,0x0,8
tick,0x7ff999646dc4,114449299,0,0x0,8
tick,0x7ff999646dc4,114464459,0,0x0,8
tick,0x7ff999646dc4,114480243,0,0x0,8
tick,0x7ff999646dc4,114495793,0,0x0,8
tick,0x7ff999646dc4,114511357,0,0x0,8
tick,0x7ff999646dc4,114526220,0,0x0,8
tick,0x7ff999646dc4,114541409,0,0x0,8
tick,0x7ff999646dc4,114556854,0,0x0,8
tick,0x7ff999646dc4,114572036,0,0x0,8
tick,0x7ff999646dc4,114587376,0,0x0,8
tick,0x7ff999646dc4,114602534,0,0x0,8
tick,0x7ff999646dc4,114617971,0,0x0,8
tick,0x7ff999646dc4,114634678,0,0x0,8
tick,0x7ff999646dc4,114648961,0,0x0,8
tick,0x7ff999646dc4,114664527,0,0x0,8
tick,0x7ff999646dc4,114680712,0,0x0,8
tick,0x7ff999646dc4,114695338,0,0x0,8
tick,0x7ff999646dc4,114710943,0,0x0,8
tick,0x7ff999646dc4,114726174,0,0x0,8
tick,0x7ff999646dc4,114741411,0,0x0,8
tick,0x7ff999646dc4,114756998,0,0x0,8
tick,0x7ff999646dc4,114773175,0,0x0,8
tick,0x7ff999646dc4,114788133,0,0x0,8
tick,0x7ff999646dc4,114803812,0,0x0,8
tick,0x7ff999646dc4,114818965,0,0x0,8
tick,0x7ff999646dc4,114834460,0,0x0,8
tick,0x7ff999646dc4,114849994,0,0x0,8
tick,0x7ff999646dc4,114865943,0,0x0,8
tick,0x7ff999646dc4,114880748,0,0x0,8
tick,0x7ff999646dc4,114896934,0,0x0,8
tick,0x7ff999646dc4,114911686,0,0x0,8
tick,0x7ff999646dc4,114927395,0,0x0,8
tick,0x7ff999646dc4,114942175,0,0x0,8
tick,0x7ff999646dc4,114957527,0,0x0,8
tick,0x7ff999646dc4,114972958,0,0x0,8
tick,0x7ff999646dc4,114988204,0,0x0,8
tick,0x7ff999646dc4,115003957,0,0x0,8
tick,0x7ff999646dc4,115019128,0,0x0,8
tick,0x7ff999646dc4,115033917,0,0x0,8
tick,0x7ff999646dc4,115049663,0,0x0,8
tick,0x7ff999646dc4,115065463,0,0x0,8
tick,0x7ff999646dc4,115080846,0,0x0,8
tick,0x7ff999646dc4,115096627,0,0x0,8
tick,0x7ff999646dc4,115111606,0,0x0,8
tick,0x7ff999646dc4,115127283,0,0x0,8
tick,0x7ff999646dc4,115142290,0,0x0,8
tick,0x7ff999646dc4,115158018,0,0x0,8
tick,0x7ff999646dc4,115172817,0,0x0,8
tick,0x7ff999646dc4,115188127,0,0x0,8
tick,0x7ff999646dc4,115202843,0,0x0,8
tick,0x7ff999646dc4,115218028,0,0x0,8
tick,0x7ff999646dc4,115233116,0,0x0,8
tick,0x7ff999646dc4,115248503,0,0x0,8
tick,0x7ff999646dc4,115264235,0,0x0,8
tick,0x7ff999646dc4,115280004,0,0x0,8
tick,0x7ff999646dc4,115294728,0,0x0,8
tick,0x7ff999646dc4,115310195,0,0x0,8
tick,0x7ff999646dc4,115325701,0,0x0,8
tick,0x7ff999646dc4,115340796,0,0x0,8
tick,0x7ff999646dc4,115356121,0,0x0,8
tick,0x7ff999646dc4,115371206,0,0x0,8
tick,0x7ff999646dc4,115386659,0,0x0,8
tick,0x7ff999646dc4,115401995,0,0x0,8
tick,0x7ff999646dc4,115417510,0,0x0,8
tick,0x7ff999646dc4,115432559,0,0x0,8
tick,0x7ff999646dc4,115447924,0,0x0,8
tick,0x7ff999646dc4,115463521,0,0x0,8
tick,0x7ff999646dc4,115478847,0,0x0,8
tick,0x7ff999646dc4,115494314,0,0x0,8
tick,0x7ff999646dc4,115509702,0,0x0,8
tick,0x7ff999646dc4,115524664,0,0x0,8
tick,0x7ff999646dc4,115540088,0,0x0,8
tick,0x7ff999646dc4,115555359,0,0x0,8
tick,0x7ff999646dc4,115570417,0,0x0,8
tick,0x7ff999646dc4,115585672,0,0x0,8
tick,0x7ff999646dc4,115601183,0,0x0,8
tick,0x7ff999646dc4,115616824,0,0x0,8
tick,0x7ff999646dc4,115631950,0,0x0,8
tick,0x7ff999646dc4,115647262,0,0x0,8
tick,0x7ff999646dc4,115662352,0,0x0,8
tick,0x7ff999646dc4,115678060,0,0x0,8
tick,0x7ff999646dc4,115692732,0,0x0,8
tick,0x7ff999646dc4,115708141,0,0x0,8
tick,0x7ff999646dc4,115723412,0,0x0,8
tick,0x7ff999646dc4,115738793,0,0x0,8
tick,0x7ff999646dc4,115753998,0,0x0,8
tick,0x7ff999646dc4,115769439,0,0x0,8
tick,0x7ff999646dc4,115785136,0,0x0,8
tick,0x7ff999646dc4,115800194,0,0x0,8
tick,0x7ff999646dc4,115815381,0,0x0,8
tick,0x7ff999646dc4,115830909,0,0x0,8
tick,0x7ff999646dc4,115846151,0,0x0,8
tick,0x7ff999646dc4,115861432,0,0x0,8
tick,0x7ff999646dc4,115876843,0,0x0,8
tick,0x7ff999646dc4,115891856,0,0x0,8
tick,0x7ff999646dc4,115907298,0,0x0,8
tick,0x7ff999646dc4,115922904,0,0x0,8
tick,0x7ff999646dc4,115938269,0,0x0,8
tick,0x7ff999646dc4,115953512,0,0x0,8
tick,0x7ff999646dc4,115969101,0,0x0,8
tick,0x7ff999646dc4,115984089,0,0x0,8
tick,0x7ff999646dc4,115999182,0,0x0,8
tick,0x7ff999646dc4,116014705,0,0x0,8
tick,0x7ff999646dc4,116030311,0,0x0,8
tick,0x7ff999646dc4,116045589,0,0x0,8
tick,0x7ff999646dc4,116061460,0,0x0,8
tick,0x7ff999646dc4,116076709,0,0x0,8
tick,0x7ff999646dc4,116092271,0,0x0,8
tick,0x7ff999646dc4,116107563,0,0x0,8
tick,0x7ff999646dc4,116123016,0,0x0,8
tick,0x7ff999646dc4,116138573,0,0x0,8
tick,0x7ff999646dc4,116153463,0,0x0,8
tick,0x7ff999646dc4,116168990,0,0x0,8
tick,0x7ff999646dc4,116184434,0,0x0,8
tick,0x7ff999646dc4,116200460,0,0x0,8
tick,0x7ff999646dc4,116215414,0,0x0,8
tick,0x7ff999646dc4,116230958,0,0x0,8
tick,0x7ff999646dc4,116246373,0,0x0,8
tick,0x7ff999646dc4,116261662,0,0x0,8
tick,0x7ff999646dc4,116276664,0,0x0,8
tick,0x7ff999646dc4,116292299,0,0x0,8
tick,0x7ff999646dc4,116307937,0,0x0,8
tick,0x7ff999646dc4,116323702,0,0x0,8
tick,0x7ff999646dc4,116338674,0,0x0,8
tick,0x7ff999646dc4,116353993,0,0x0,8
tick,0x7ff999646dc4,116369290,0,0x0,8
tick,0x7ff999646dc4,116384734,0,0x0,8
tick,0x7ff999646dc4,116399622,0,0x0,8
tick,0x7ff999646dc4,116415094,0,0x0,8
tick,0x7ff999646dc4,116430433,0,0x0,8
tick,0x7ff999646dc4,116446013,0,0x0,8
tick,0x7ff999646dc4,116461303,0,0x0,8
tick,0x7ff999646dc4,116476785,0,0x0,8
tick,0x7ff999646dc4,116492388,0,0x0,8
tick,0x7ff999646dc4,116507649,0,0x0,8
tick,0x7ff999646dc4,116522978,0,0x0,8
tick,0x7ff999646dc4,116538560,0,0x0,8
tick,0x7ff999646dc4,116553847,0,0x0,8
tick,0x7ff999646dc4,116569336,0,0x0,8
tick,0x7ff999646dc4,116584725,0,0x0,8
tick,0x7ff999646dc4,116599815,0,0x0,8
tick,0x7ff999646dc4,116615041,0,0x0,8
tick,0x7ff999646dc4,116630340,0,0x0,8
tick,0x7ff999646dc4,116645676,0,0x0,8
tick,0x7ff999646dc4,116660710,0,0x0,8
tick,0x7ff999646dc4,116676418,0,0x0,8
tick,0x7ff999646dc4,116692037,0,0x0,8
tick,0x7ff999646dc4,116707188,0,0x0,8
tick,0x7ff999646dc4,116723019,0,0x0,8
tick,0x7ff999646dc4,116737939,0,0x0,8
tick,0x7ff999646dc4,116753276,0,0x0,8
tick,0x7ff999646dc4,116768538,0,0x0,8
tick,0x7ff999646dc4,116784045,0,0x0,8
tick,0x7ff999646dc4,116799674,0,0x0,8
tick,0x7ff999646dc4,116814963,0,0x0,8
tick,0x7ff999646dc4,116830512,0,0x0,8
tick,0x7ff999646dc4,116846512,0,0x0,8
tick,0x7ff999646dc4,116861149,0,0x0,8
tick,0x7ff999646dc4,116876592,0,0x0,8
tick,0x7ff999646dc4,116892202,0,0x0,8
tick,0x7ff999646dc4,116907631,0,0x0,8
tick,0x7ff999646dc4,116922727,0,0x0,8
tick,0x7ff999646dc4,116938347,0,0x0,8
tick,0x7ff999646dc4,116953481,0,0x0,8
tick,0x7ff999646dc4,116969219,0,0x0,8
tick,0x7ff999646dc4,116984796,0,0x0,8
tick,0x7ff999646dc4,116999796,0,0x0,8
tick,0x7ff999646dc4,117014796,0,0x0,8
tick,0x7ff999646dc4,117030502,0,0x0,8
tick,0x7ff999646dc4,117045434,0,0x0,8
tick,0x7ff999646dc4,117060696,0,0x0,8
tick,0x7ff999646dc4,117075905,0,0x0,8
tick,0x7ff999646dc4,117091387,0,0x0,8
tick,0x7ff999646dc4,117106818,0,0x0,8
tick,0x7ff999646dc4,117122245,0,0x0,8
tick,0x7ff999646dc4,117137356,0,0x0,8
tick,0x7ff999646dc4,117152709,0,0x0,8
tick,0x7ff999646dc4,117168048,0,0x0,8
tick,0x7ff999646dc4,117184868,0,0x0,8
tick,0x7ff999646dc4,117198734,0,0x0,8
tick,0x7ff999646dc4,117214851,0,0x0,8
tick,0x7ff999646dc4,117229756,0,0x0,8
tick,0x7ff999646dc4,117245128,0,0x0,8
tick,0x7ff999646dc4,117260591,0,0x0,8
tick,0x7ff999646dc4,117276030,0,0x0,8
tick,0x7ff999646dc4,117291394,0,0x0,8
tick,0x7ff999646dc4,117306898,0,0x0,8
tick,0x7ff999646dc4,117322326,0,0x0,8
tick,0x7ff999646dc4,117337914,0,0x0,8
tick,0x7ff999646dc4,117353328,0,0x0,8
tick,0x7ff999646dc4,117369127,0,0x0,8
tick,0x7ff999646dc4,117384189,0,0x0,8
tick,0x7ff999646dc4,117399643,0,0x0,8
tick,0x7ff999646dc4,117414915,0,0x0,8
tick,0x7ff999646dc4,117430321,0,0x0,8
tick,0x7ff999646dc4,117445760,0,0x0,8
tick,0x7ff999646dc4,117460819,0,0x0,8
tick,0x7ff999646dc4,117476589,0,0x0,8
tick,0x7ff999646dc4,117492269,0,0x0,8
tick,0x7ff999646dc4,117507914,0,0x0,8
tick,0x7ff999646dc4,117523275,0,0x0,8
tick,0x7ff999646dc4,117538697,0,0x0,8
tick,0x7ff999646dc4,117554040,0,0x0,8
tick,0x7ff999646dc4,117569158,0,0x0,8
tick,0x7ff999646dc4,117584950,0,0x0,8
tick,0x7ff999646dc4,117599935,0,0x0,8
tick,0x7ff999646dc4,117614836,0,0x0,8
tick,0x7ff999646dc4,117630190,0,0x0,8
tick,0x7ff999646dc4,117645471,0,0x0,8
tick,0x7ff999646dc4,117660750,0,0x0,8
tick,0x7ff999646dc4,117675492,0,0x0,8
tick,0x7ff999646dc4,117691000,0,0x0,8
tick,0x7ff999646dc4,117706335,0,0x0,8
tick,0x7ff999646dc4,117721756,0,0x0,8
tick,0x7ff999646dc4,117737036,0,0x0,8
tick,0x7ff999646dc4,117752481,0,0x0,8
tick,0x7ff999646dc4,117767763,0,0x0,8
tick,0x7ff999646dc4,117783387,0,0x0,8
tick,0x7ff999646dc4,117798490,0,0x0,8
tick,0x7ff999646dc4,117814038,0,0x0,8
tick,0x7ff999646dc4,117829330,0,0x0,8
tick,0x7ff999646dc4,117844766,0,0x0,8
tick,0x7ff999646dc4,117860290,0,0x0,8
tick,0x7ff999646dc4,117875187,0,0x0,8
tick,0x7ff999646dc4,117890787,0,0x0,8
tick,0x7ff999646dc4,117905882,0,0x0,8
tick,0x7ff999646dc4,117921253,0,0x0,8
tick,0x7ff999646dc4,117936487,0,0x0,8
tick,0x7ff999646dc4,117951876,0,0x0,8
tick,0x7ff999646dc4,117967260,0,0x0,8
tick,0x7ff999646dc4,117982770,0,0x0,8
tick,0x7ff999646dc4,117998947,0,0x0,8
tick,0x7ff999646dc4,118013182,0,0x0,8
tick,0x7ff999646dc4,118029215,0,0x0,8
tick,0x7ff999646dc4,118043960,0,0x0,8
tick,0x7ff999646dc4,118059403,0,0x0,8
tick,0x7ff999646dc4,118074645,0,0x0,8
tick,0x7ff999646dc4,118090344,0,0x0,8
tick,0x7ff999646dc4,118105499,0,0x0,8
tick,0x7ff999646dc4,118121522,0,0x0,8
tick,0x7ff999646dc4,118136107,0,0x0,8
tick,0x7ff999646dc4,118151694,0,0x0,8
tick,0x7ff999646dc4,118166766,0,0x0,8
tick,0x7ff999646dc4,118182146,0,0x0,8
tick,0x7ff999646dc4,118197590,0,0x0,8
tick,0x7ff999646dc4,118212844,0,0x0,8
tick,0x7ff999646dc4,118228772,0,0x0,8
tick,0x7ff999646dc4,118243804,0,0x0,8
tick,0x7ff999646dc4,118259485,0,0x0,8
tick,0x7ff999646dc4,118274517,0,0x0,8
tick,0x7ff999646dc4,118289905,0,0x0,8
tick,0x7ff999646dc4,118305320,0,0x0,8
tick,0x7ff999646dc4,118320632,0,0x0,8
tick,0x7ff999646dc4,118335556,0,0x0,8
tick,0x7ff999646dc4,118350971,0,0x0,8
tick,0x7ff999646dc4,118366193,0,0x0,8
tick,0x7ff999646dc4,118381891,0,0x0,8
tick,0x7ff999646dc4,118396563,0,0x0,8
tick,0x7ff999646dc4,118412094,0,0x0,8
tick,0x7ff999646dc4,118427434,0,0x0,8
tick,0x7ff999646dc4,118442637,0,0x0,8
tick,0x7ff999646dc4,118457812,0,0x0,8
tick,0x7ff999646dc4,118473372,0,0x0,8
tick,0x7ff999646dc4,118488807,0,0x0,8
tick,0x7ff999646dc4,118504410,0,0x0,8
tick,0x7ff999646dc4,118519597,0,0x0,8
tick,0x7ff999646dc4,118535184,0,0x0,8
tick,0x7ff999646dc4,118551188,0,0x0,8
tick,0x7ff999646dc4,118565948,0,0x0,8
tick,0x7ff999646dc4,118581139,0,0x0,8
tick,0x7ff999646dc4,118596722,0,0x0,8
tick,0x7ff999646dc4,118612069,0,0x0,8
tick,0x7ff999646dc4,118627709,0,0x0,8
tick,0x7ff999646dc4,118642845,0,0x0,8
tick,0x7ff999646dc4,118657880,0,0x0,8
tick,0x7ff999646dc4,118673498,0,0x0,8
tick,0x7ff999646dc4,118688519,0,0x0,8
tick,0x7ff999646dc4,118703940,0,0x0,8
tick,0x7ff999646dc4,118719474,0,0x0,8
tick,0x7ff999646dc4,118734733,0,0x0,8
tick,0x7ff999646dc4,118750065,0,0x0,8
tick,0x7ff999646dc4,118766412,0,0x0,8
tick,0x7ff999646dc4,118780701,0,0x0,8
tick,0x7ff999646dc4,118796840,0,0x0,8
tick,0x7ff999646dc4,118812387,0,0x0,8
tick,0x7ff999646dc4,118827013,0,0x0,8
tick,0x7ff999646dc4,118842662,0,0x0,8
tick,0x7ff999646dc4,118858235,0,0x0,8
tick,0x7ff999646dc4,118873855,0,0x0,8
tick,0x7ff999646dc4,118889561,0,0x0,8
tick,0x7ff999646dc4,118905120,0,0x0,8
tick,0x7ff999646dc4,118921066,0,0x0,8
tick,0x7ff999646dc4,118935856,0,0x0,8
tick,0x7ff999646dc4,118951353,0,0x0,8
tick,0x7ff999646dc4,118966331,0,0x0,8
tick,0x7ff999646dc4,118981968,0,0x0,8
tick,0x7ff999646dc4,118997039,0,0x0,8
tick,0x7ff999646dc4,119012447,0,0x0,8
tick,0x7ff999646dc4,119028219,0,0x0,8
tick,0x7ff999646dc4,119044686,0,0x0,8
tick,0x7ff999646dc4,119059509,0,0x0,8
tick,0x7ff999646dc4,119073760,0,0x0,8
tick,0x7ff999646dc4,119088735,0,0x0,8
tick,0x7ff999646dc4,119104111,0,0x0,8
tick,0x7ff999646dc4,119119589,0,0x0,8
tick,0x7ff999646dc4,119135491,0,0x0,8
tick,0x7ff999646dc4,119149736,0,0x0,8
tick,0x7ff999646dc4,119165024,0,0x0,8
tick,0x7ff999646dc4,119180397,0,0x0,8
tick,0x7ff999646dc4,119195695,0,0x0,8
tick,0x7ff999646dc4,119210845,0,0x0,8
tick,0x7ff999646dc4,119225932,0,0x0,8
tick,0x7ff999646dc4,119241927,0,0x0,8
tick,0x7ff999646dc4,119256964,0,0x0,8
tick,0x7ff999646dc4,119272401,0,0x0,8
tick,0x7ff999646dc4,119287503,0,0x0,8
tick,0x7ff999646dc4,119302993,0,0x0,8
tick,0x7ff999646dc4,119318324,0,0x0,8
tick,0x7ff999646dc4,119333848,0,0x0,8
tick,0x7ff999646dc4,119349394,0,0x0,8
tick,0x7ff999646dc4,119364642,0,0x0,8
tick,0x7ff999646dc4,119379935,0,0x0,8
tick,0x7ff999646dc4,119395104,0,0x0,8
tick,0x7ff999646dc4,119410578,0,0x0,8
tick,0x7ff999646dc4,119426025,0,0x0,8
tick,0x7ff999646dc4,119441574,0,0x0,8
tick,0x7ff999646dc4,119456773,0,0x0,8
tick,0x7ff999646dc4,119471790,0,0x0,8
tick,0x7ff999646dc4,119487604,0,0x0,8
tick,0x7ff999646dc4,119503058,0,0x0,8
tick,0x7ff999646dc4,119518613,0,0x0,8
tick,0x7ff999646dc4,119534289,0,0x0,8
tick,0x7ff999646dc4,119550166,0,0x0,8
tick,0x7ff999646dc4,119564893,0,0x0,8
tick,0x7ff999646dc4,119579850,0,0x0,8
tick,0x7ff999646dc4,119595450,0,0x0,8
tick,0x7ff999646dc4,119610938,0,0x0,8
tick,0x7ff999646dc4,119626281,0,0x0,8
tick,0x7ff999646dc4,119641948,0,0x0,8
tick,0x7ff999646dc4,119657038,0,0x0,8
tick,0x7ff999646dc4,119672829,0,0x0,8
tick,0x7ff999646dc4,119688008,0,0x0,8
tick,0x7ff999646dc4,119703291,0,0x0,8
tick,0x7ff999646dc4,119719085,0,0x0,8
tick,0x7ff999646dc4,119734105,0,0x0,8
tick,0x7ff999646dc4,119750669,0,0x0,8
tick,0x7ff999646dc4,119764525,0,0x0,8
tick,0x7ff999646dc4,119779652,0,0x0,8
tick,0x7ff999646dc4,119795096,0,0x0,8
tick,0x7ff999646dc4,119810388,0,0x0,8
tick,0x7ff999646dc4,119825894,0,0x0,8
tick,0x7ff999646dc4,119841028,0,0x0,8
tick,0x7ff999646dc4,119856800,0,0x0,8
tick,0x7ff999646dc4,119871757,0,0x0,8
tick,0x7ff999646dc4,119887218,0,0x0,8
tick,0x7ff999646dc4,119902575,0,0x0,8
tick,0x7ff999646dc4,119917965,0,0x0,8
tick,0x7ff999646dc4,119933557,0,0x0,8
tick,0x7ff999646dc4,119949609,0,0x0,8
tick,0x7ff999646dc4,119964286,0,0x0,8
tick,0x7ff999646dc4,119979139,0,0x0,8
tick,0x7ff999646dc4,119994401,0,0x0,8
tick,0x7ff999646dc4,120009807,0,0x0,8
tick,0x7ff999646dc4,120025062,0,0x0,8
tick,0x7ff999646dc4,120040735,0,0x0,8
tick,0x7ff999646dc4,120056197,0,0x0,8
tick,0x7ff999646dc4,120071101,0,0x0,8
tick,0x7ff999646dc4,120086600,0,0x0,8
tick,0x7ff999646dc4,120101970,0,0x0,8
tick,0x7ff999646dc4,120117743,0,0x0,8
tick,0x7ff999646dc4,120133200,0,0x0,8
tick,0x7ff999646dc4,120148402,0,0x0,8
tick,0x7ff999646dc4,120163743,0,0x0,8
tick,0x7ff999646dc4,120178320,0,0x0,8
tick,0x7ff999646dc4,120193668,0,0x0,8
tick,0x7ff999646dc4,120208984,0,0x0,8
tick,0x7ff999646dc4,120224576,0,0x0,8
tick,0x7ff999646dc4,120240028,0,0x0,8
tick,0x7ff999646dc4,120255975,0,0x0,8
tick,0x7ff999646dc4,120270507,0,0x0,8
tick,0x7ff999646dc4,120286057,0,0x0,8
tick,0x7ff999646dc4,120301731,0,0x0,8
tick,0x7ff999646dc4,120316982,0,0x0,8
tick,0x7ff999646dc4,120332236,0,0x0,8
tick,0x7ff999646dc4,120347742,0,0x0,8
tick,0x7ff999646dc4,120363445,0,0x0,8
tick,0x7ff999646dc4,120379087,0,0x0,8
tick,0x7ff999646dc4,120394189,0,0x0,8
tick,0x7ff999646dc4,120409255,0,0x0,8
tick,0x7ff999646dc4,120424108,0,0x0,8
tick,0x7ff999646dc4,120439664,0,0x0,8
tick,0x7ff999646dc4,120455343,0,0x0,8
tick,0x7ff999646dc4,120470507,0,0x0,8
tick,0x7ff999646dc4,120485817,0,0x0,8
tick,0x7ff999646dc4,120501097,0,0x0,8
tick,0x7ff999646dc4,120516588,0,0x0,8
tick,0x7ff999646dc4,120531961,0,0x0,8
tick,0x7ff999646dc4,120547216,0,0x0,8
tick,0x7ff999646dc4,120562828,0,0x0,8
tick,0x7ff999646dc4,120577951,0,0x0,8
tick,0x7ff999646dc4,120593217,0,0x0,8
tick,0x7ff999646dc4,120608859,0,0x0,8
tick,0x7ff999646dc4,120624029,0,0x0,8
tick,0x7ff999646dc4,120639157,0,0x0,8
tick,0x7ff999646dc4,120654212,0,0x0,8
tick,0x7ff999646dc4,120669330,0,0x0,8
tick,0x7ff999646dc4,120684588,0,0x0,8
tick,0x7ff999646dc4,120700143,0,0x0,8
tick,0x7ff999646dc4,120715157,0,0x0,8
tick,0x7ff999646dc4,120730376,0,0x0,8
tick,0x7ff999646dc4,120745807,0,0x0,8
tick,0x7ff999646dc4,120761648,0,0x0,8
tick,0x7ff999646dc4,120776949,0,0x0,8
tick,0x7ff999646dc4,120792681,0,0x0,8
tick,0x7ff999646dc4,120808206,0,0x0,8
tick,0x7ff999646dc4,120823343,0,0x0,8
tick,0x7ff999646dc4,120838658,0,0x0,8
tick,0x7ff999646dc4,120853816,0,0x0,8
tick,0x7ff999646dc4,120868839,0,0x0,8
tick,0x7ff999646dc4,120884348,0,0x0,8
tick,0x7ff999646dc4,120899606,0,0x0,8
tick,0x7ff999646dc4,120915154,0,0x0,8
tick,0x7ff999646dc4,120930224,0,0x0,8
tick,0x7ff999646dc4,120945233,0,0x0,8
tick,0x7ff999646dc4,120960431,0,0x0,8
tick,0x7ff999646dc4,120975160,0,0x0,8
tick,0x7ff999646dc4,120990549,0,0x0,8
tick,0x7ff999646dc4,121005887,0,0x0,8
tick,0x7ff999646dc4,121020481,0,0x0,8
tick,0x7ff999646dc4,121035893,0,0x0,8
tick,0x7ff999646dc4,121051505,0,0x0,8
tick,0x7ff999646dc4,121066445,0,0x0,8
tick,0x7ff999646dc4,121081938,0,0x0,8
tick,0x7ff999646dc4,121097499,0,0x0,8
tick,0x7ff999646dc4,121112528,0,0x0,8
tick,0x7ff999646dc4,121128179,0,0x0,8
tick,0x7ff999646dc4,121143646,0,0x0,8
tick,0x7ff999646dc4,121158617,0,0x0,8
tick,0x7ff999646dc4,121174035,0,0x0,8
tick,0x7ff999646dc4,121189113,0,0x0,8
tick,0x7ff999646dc4,121203868,0,0x0,8
tick,0x7ff999646dc4,121218877,0,0x0,8
tick,0x7ff999646dc4,121234329,0,0x0,8
tick,0x7ff999646dc4,121249958,0,0x0,8
tick,0x7ff999646dc4,121265944,0,0x0,8
tick,0x7ff999646dc4,121280242,0,0x0,8
tick,0x7ff999646dc4,121295608,0,0x0,8
tick,0x7ff999646dc4,121310968,0,0x0,8
tick,0x7ff999646dc4,121326239,0,0x0,8
tick,0x7ff999646dc4,121341954,0,0x0,8
tick,0x7ff999646dc4,121357187,0,0x0,8
tick,0x7ff999646dc4,121372559,0,0x0,8
tick,0x7ff999646dc4,121387825,0,0x0,8
tick,0x7ff999646dc4,121403080,0,0x0,8
tick,0x7ff999646dc4,121418770,0,0x0,8
tick,0x7ff999646dc4,121433632,0,0x0,8
tick,0x7ff999646dc4,121448831,0,0x0,8
tick,0x7ff999646dc4,121464382,0,0x0,8
tick,0x7ff999646dc4,121479725,0,0x0,8
tick,0x7ff999646dc4,121495376,0,0x0,8
tick,0x7ff999646dc4,121511021,0,0x0,8
tick,0x7ff999646dc4,121526502,0,0x0,8
tick,0x7ff999646dc4,121541841,0,0x0,8
tick,0x7ff999646dc4,121557320,0,0x0,8
tick,0x7ff999646dc4,121572239,0,0x0,8
tick,0x7ff999646dc4,121587600,0,0x0,8
tick,0x7ff999646dc4,121602890,0,0x0,8
tick,0x7ff999646dc4,121617812,0,0x0,8
tick,0x7ff999646dc4,121633003,0,0x0,8
tick,0x7ff999646dc4,121648614,0,0x0,8
tick,0x7ff999646dc4,121663762,0,0x0,8
tick,0x7ff999646dc4,121679165,0,0x0,8
tick,0x7ff999646dc4,121694269,0,0x0,8
tick,0x7ff999646dc4,121709797,0,0x0,8
tick,0x7ff999646dc4,121725149,0,0x0,8
tick,0x7ff999646dc4,121740373,0,0x0,8
tick,0x7ff999646dc4,121755638,0,0x0,8
tick,0x7ff999646dc4,121771041,0,0x0,8
tick,0x7ff999646dc4,121786488,0,0x0,8
tick,0x7ff999646dc4,121801743,0,0x0,8
tick,0x7ff999646dc4,121816659,0,0x0,8
tick,0x7ff999646dc4,121831931,0,0x0,8
tick,0x7ff999646dc4,121847658,0,0x0,8
tick,0x7ff999646dc4,121863169,0,0x0,8
tick,0x7ff999646dc4,121878471,0,0x0,8
tick,0x7ff999646dc4,121893806,0,0x0,8
tick,0x7ff999646dc4,121908937,0,0x0,8
tick,0x7ff999646dc4,121923921,0,0x0,8
tick,0x7ff999646dc4,121939354,0,0x0,8
tick,0x7ff999646dc4,121954473,0,0x0,8
tick,0x7ff999646dc4,121969704,0,0x0,8
tick,0x7ff999646dc4,121984883,0,0x0,8
tick,0x7ff999646dc4,122000273,0,0x0,8
tick,0x7ff999646dc4,122015396,0,0x0,8
tick,0x7ff999646dc4,122030574,0,0x0,8
tick,0x7ff999646dc4,122046072,0,0x0,8
tick,0x7ff999646dc4,122061710,0,0x0,8
tick,0x7ff999646dc4,122077103,0,0x0,8
tick,0x7ff999646dc4,122092304,0,0x0,8
tick,0x7ff999646dc4,122107947,0,0x0,8
tick,0x7ff999646dc4,122123182,0,0x0,8
tick,0x7ff999646dc4,122138799,0,0x0,8
tick,0x7ff999646dc4,122153965,0,0x0,8
tick,0x7ff999646dc4,122169562,0,0x0,8
tick,0x7ff999646dc4,122184531,0,0x0,8
tick,0x7ff999646dc4,122200200,0,0x0,8
tick,0x7ff999646dc4,122215135,0,0x0,8
tick,0x7ff999646dc4,122230389,0,0x0,8
tick,0x7ff999646dc4,122245809,0,0x0,8
tick,0x7ff999646dc4,122261050,0,0x0,8
tick,0x7ff999646dc4,122276358,0,0x0,8
tick,0x7ff999646dc4,122291524,0,0x0,8
tick,0x7ff999646dc4,122306871,0,0x0,8
tick,0x7ff999646dc4,122322425,0,0x0,8
tick,0x7ff999646dc4,122337971,0,0x0,8
tick,0x7ff999646dc4,122353417,0,0x0,8
tick,0x7ff999646dc4,122368398,0,0x0,8
tick,0x7ff999646dc4,122383735,0,0x0,8
tick,0x7ff999646dc4,122399223,0,0x0,8
tick,0x7ff999646dc4,122414437,0,0x0,8
tick,0x7ff999646dc4,122430117,0,0x0,8
tick,0x7ff999646dc4,122445053,0,0x0,8
tick,0x7ff999646dc4,122460651,0,0x0,8
tick,0x7ff999646dc4,122475628,0,0x0,8
tick,0x7ff999646dc4,122490925,0,0x0,8
tick,0x7ff999646dc4,122506234,0,0x0,8
tick,0x7ff999646dc4,122521695,0,0x0,8
tick,0x7ff999646dc4,122536947,0,0x0,8
tick,0x7ff999646dc4,122552215,0,0x0,8
tick,0x7ff999646dc4,122567470,0,0x0,8
tick,0x7ff999646dc4,122583034,0,0x0,8
tick,0x7ff999646dc4,122598334,0,0x0,8
tick,0x7ff999646dc4,122613407,0,0x0,8
tick,0x7ff999646dc4,122628611,0,0x0,8
tick,0x7ff999646dc4,122644006,0,0x0,8
tick,0x7ff999646dc4,122659475,0,0x0,8
tick,0x7ff999646dc4,122674335,0,0x0,8
tick,0x7ff999646dc4,122689692,0,0x0,8
tick,0x7ff999646dc4,122705168,0,0x0,8
tick,0x7ff999646dc4,122720804,0,0x0,8
tick,0x7ff999646dc4,122735852,0,0x0,8
tick,0x7ff999646dc4,122751283,0,0x0,8
tick,0x7ff999646dc4,122767114,0,0x0,8
tick,0x7ff999646dc4,122782384,0,0x0,8
tick,0x7ff999646dc4,122797614,0,0x0,8
tick,0x7ff999646dc4,122813132,0,0x0,8
tick,0x7ff999646dc4,122828493,0,0x0,8
tick,0x7ff999646dc4,122844476,0,0x0,8
tick,0x7ff999646dc4,122859370,0,0x0,8
tick,0x7ff999646dc4,122874233,0,0x0,8
tick,0x7ff999646dc4,122889595,0,0x0,8
tick,0x7ff999646dc4,122905238,0,0x0,8
tick,0x7ff999646dc4,122920614,0,0x0,8
tick,0x7ff999646dc4,122936007,0,0x0,8
tick,0x7ff999646dc4,122952766,0,0x0,8
tick,0x7ff999646dc4,122966902,0,0x0,8
tick,0x7ff999646dc4,122982279,0,0x0,8
tick,0x7ff999646dc4,122996992,0,0x0,8
tick,0x7ff999646dc4,123012332,0,0x0,8
tick,0x7ff999646dc4,123027479,0,0x0,8
tick,0x7ff999646dc4,123042903,0,0x0,8
tick,0x7ff999646dc4,123057719,0,0x0,8
tick,0x7ff999646dc4,123073523,0,0x0,8
tick,0x7ff999646dc4,123089093,0,0x0,8
tick,0x7ff999646dc4,123103998,0,0x0,8
tick,0x7ff999646dc4,123120638,0,0x0,8
tick,0x7ff999646dc4,123134280,0,0x0,8
tick,0x7ff999646dc4,123149514,0,0x0,8
tick,0x7ff999646dc4,123164726,0,0x0,8
tick,0x7ff999646dc4,123180566,0,0x0,8
tick,0x7ff999646dc4,123195724,0,0x0,8
tick,0x7ff999646dc4,123211186,0,0x0,8
tick,0x7ff999646dc4,123226545,0,0x0,8
tick,0x7ff999646dc4,123241732,0,0x0,8
tick,0x7ff999646dc4,123257132,0,0x0,8
tick,0x7ff999646dc4,123273549,0,0x0,8
tick,0x7ff999646dc4,123290099,0,0x0,8
tick,0x7ff999646dc4,123303212,0,0x0,8
tick,0x7ff999646dc4,123318056,0,0x0,8
tick,0x7ff999646dc4,123333400,0,0x0,8
tick,0x7ff999646dc4,123349214,0,0x0,8
tick,0x7ff999646dc4,123363945,0,0x0,8
tick,0x7ff999646dc4,123379504,0,0x0,8
tick,0x7ff999646dc4,123395174,0,0x0,8
tick,0x7ff999646dc4,123410649,0,0x0,8
tick,0x7ff999646dc4,123425894,0,0x0,8
tick,0x7ff999646dc4,123441397,0,0x0,8
tick,0x7ff999646dc4,123457375,0,0x0,8
tick,0x7ff999646dc4,123472773,0,0x0,8
tick,0x7ff999646dc4,123487804,0,0x0,8
tick,0x7ff999646dc4,123503874,0,0x0,8
tick,0x7ff999646dc4,123517924,0,0x0,8
tick,0x7ff999646dc4,123533333,0,0x0,8
tick,0x7ff999646dc4,123548565,0,0x0,8
tick,0x7ff999646dc4,123563496,0,0x0,8
tick,0x7ff999646dc4,123578387,0,0x0,8
tick,0x7ff999646dc4,123593750,0,0x0,8
tick,0x7ff999646dc4,123609115,0,0x0,8
tick,0x7ff999646dc4,123624869,0,0x0,8
tick,0x7ff999646dc4,123640213,0,0x0,8
tick,0x7ff999646dc4,123657510,0,0x0,8
tick,0x7ff999646dc4,123671312,0,0x0,8
tick,0x7ff999646dc4,123686025,0,0x0,8
tick,0x7ff999646dc4,123701535,0,0x0,8
tick,0x7ff999646dc4,123716967,0,0x0,8
tick,0x7ff999646dc4,123732365,0,0x0,8
tick,0x7ff999646dc4,123747836,0,0x0,8
tick,0x7ff999646dc4,123763431,0,0x0,8
tick,0x7ff999646dc4,123778325,0,0x0,8
tick,0x7ff999646dc4,123793853,0,0x0,8
tick,0x7ff999646dc4,123808858,0,0x0,8
tick,0x7ff999646dc4,123823908,0,0x0,8
tick,0x7ff999646dc4,123839673,0,0x0,8
tick,0x7ff999646dc4,123854749,0,0x0,8
tick,0x7ff999646dc4,123870083,0,0x0,8
tick,0x7ff999646dc4,123885982,0,0x0,8
tick,0x7ff999646dc4,123900992,0,0x0,8
tick,0x7ff999646dc4,123916209,0,0x0,8
tick,0x7ff999646dc4,123931790,0,0x0,8
tick,0x7ff999646dc4,123947155,0,0x0,8
tick,0x7ff999646dc4,123962621,0,0x0,8
tick,0x7ff999646dc4,123978488,0,0x0,8
tick,0x7ff999646dc4,123993623,0,0x0,8
tick,0x7ff999646dc4,124008838,0,0x0,8
tick,0x7ff999646dc4,124024957,0,0x0,8
tick,0x7ff999646dc4,124039958,0,0x0,8
tick,0x7ff999646dc4,124055460,0,0x0,8
tick,0x7ff999646dc4,124070825,0,0x0,8
tick,0x7ff999646dc4,124086512,0,0x0,8
tick,0x7ff999646dc4,124102106,0,0x0,8
tick,0x7ff999646dc4,124116890,0,0x0,8
tick,0x7ff999646dc4,124136626,0,0x0,8
tick,0x7ff999646dc4,124147616,0,0x0,8
tick,0x7ff999646dc4,124162518,0,0x0,8
tick,0x7ff999646dc4,124178090,0,0x0,8
tick,0x7ff999646dc4,124193395,0,0x0,8
tick,0x7ff999646dc4,124208666,0,0x0,8
tick,0x7ff999646dc4,124223366,0,0x0,8
tick,0x7ff999646dc4,124248768,0,0x0,8
tick,0x7ff999646dc4,124258516,0,0x0,8
tick,0x7ff999646dc4,124269380,0,0x0,8
tick,0x7ff999646dc4,124285009,0,0x0,8
tick,0x7ff999646dc4,124300892,0,0x0,8
tick,0x7ff999646dc4,124319397,0,0x0,8
tick,0x7ff999646dc4,124333760,0,0x0,8
tick,0x7ff999646dc4,124345331,0,0x0,8
tick,0x7ff999646dc4,124360921,0,0x0,8
tick,0x7ff999646dc4,124376644,0,0x0,8
tick,0x7ff999646dc4,124391060,0,0x0,8
tick,0x7ff999646dc4,124406289,0,0x0,8
tick,0x7ff999646dc4,124422072,0,0x0,8
tick,0x7ff999646dc4,124436569,0,0x0,8
tick,0x7ff999646dc4,124452103,0,0x0,8
tick,0x7ff999646dc4,124468026,0,0x0,8
tick,0x7ff999646dc4,124482827,0,0x0,8
tick,0x7ff999646dc4,124498015,0,0x0,8
tick,0x7ff999646dc4,124513998,0,0x0,8
tick,0x7ff999646dc4,124529038,0,0x0,8
tick,0x7ff999646dc4,124544482,0,0x0,8
tick,0x7ff999646dc4,124559818,0,0x0,8
tick,0x7ff999646dc4,124575117,0,0x0,8
tick,0x7ff999646dc4,124591058,0,0x0,8
tick,0x7ff999646dc4,124606183,0,0x0,8
tick,0x7ff999646dc4,124620251,0,0x0,8
tick,0x7ff999646dc4,124635633,0,0x0,8
tick,0x7ff999646dc4,124650804,0,0x0,8
tick,0x7ff999646dc4,124666844,0,0x0,8
tick,0x7ff999646dc4,124681781,0,0x0,8
tick,0x7ff999646dc4,124697467,0,0x0,8
tick,0x7ff999646dc4,124713785,0,0x0,8
tick,0x7ff999646dc4,124728148,0,0x0,8
tick,0x7ff999646dc4,124743263,0,0x0,8
tick,0x7ff999646dc4,124759298,0,0x0,8
tick,0x7ff999646dc4,124774450,0,0x0,8
tick,0x7ff999646dc4,124789666,0,0x0,8
tick,0x7ff999646dc4,124805997,0,0x0,8
tick,0x7ff999646dc4,124820402,0,0x0,8
tick,0x7ff999646dc4,124836195,0,0x0,8
tick,0x7ff999646dc4,124850600,0,0x0,8
tick,0x7ff999646dc4,124865919,0,0x0,8
tick,0x7ff999646dc4,124880764,0,0x0,8
tick,0x7ff999646dc4,124896172,0,0x0,8
tick,0x7ff999646dc4,124911635,0,0x0,8
tick,0x7ff999646dc4,124927002,0,0x0,8
tick,0x7ff999646dc4,124941865,0,0x0,8
tick,0x7ff999646dc4,124957412,0,0x0,8
tick,0x7ff999646dc4,124972793,0,0x0,8
tick,0x7ff999646dc4,124987666,0,0x0,8
tick,0x7ff999646dc4,125003145,0,0x0,8
tick,0x7ff999646dc4,125018285,0,0x0,8
tick,0x7ff999646dc4,125033735,0,0x0,8
tick,0x7ff999646dc4,125049008,0,0x0,8
tick,0x7ff999646dc4,125064571,0,0x0,8
tick,0x7ff999646dc4,125079417,0,0x0,8
tick,0x7ff999646dc4,125094688,0,0x0,8
tick,0x7ff999646dc4,125110445,0,0x0,8
tick,0x7ff999646dc4,125126239,0,0x0,8
tick,0x7ff999646dc4,125141128,0,0x0,8
tick,0x7ff999646dc4,125155883,0,0x0,8
tick,0x7ff999646dc4,125171183,0,0x0,8
tick,0x7ff999646dc4,125186769,0,0x0,8
tick,0x7ff999646dc4,125201885,0,0x0,8
tick,0x7ff999646dc4,125217429,0,0x0,8
tick,0x7ff999646dc4,125232876,0,0x0,8
tick,0x7ff999646dc4,125249164,0,0x0,8
tick,0x7ff999646dc4,125263645,0,0x0,8
tick,0x7ff999646dc4,125279206,0,0x0,8
tick,0x7ff999646dc4,125294798,0,0x0,8
tick,0x7ff999646dc4,125312239,0,0x0,8
tick,0x7ff999646dc4,125325416,0,0x0,8
tick,0x7ff999646dc4,125340240,0,0x0,8
tick,0x7ff999646dc4,125355776,0,0x0,8
tick,0x7ff999646dc4,125371011,0,0x0,8
tick,0x7ff999646dc4,125386516,0,0x0,8
tick,0x7ff999646dc4,125401175,0,0x0,8
tick,0x7ff999646dc4,125416773,0,0x0,8
tick,0x7ff999646dc4,125432443,0,0x0,8
tick,0x7ff999646dc4,125447746,0,0x0,8
tick,0x7ff999646dc4,125462774,0,0x0,8
tick,0x7ff999646dc4,125478767,0,0x0,8
tick,0x7ff999646dc4,125493834,0,0x0,8
tick,0x7ff999646dc4,125509254,0,0x0,8
tick,0x7ff999646dc4,125524814,0,0x0,8
tick,0x7ff999646dc4,125540165,0,0x0,8
tick,0x7ff999646dc4,125555549,0,0x0,8
tick,0x7ff999646dc4,125570309,0,0x0,8
tick,0x7ff999646dc4,125585987,0,0x0,8
tick,0x7ff999646dc4,125600975,0,0x0,8
tick,0x7ff999646dc4,125615922,0,0x0,8
tick,0x7ff999646dc4,125631525,0,0x0,8
tick,0x7ff999646dc4,125647268,0,0x0,8
tick,0x7ff999646dc4,125662275,0,0x0,8
tick,0x7ff999646dc4,125678111,0,0x0,8
tick,0x7ff999646dc4,125693603,0,0x0,8
tick,0x7ff999646dc4,125709554,0,0x0,8
tick,0x7ff999646dc4,125724005,0,0x0,8
tick,0x7ff999646dc4,125739904,0,0x0,8
tick,0x7ff999646dc4,125754625,0,0x0,8
tick,0x7ff999646dc4,125770385,0,0x0,8
tick,0x7ff999646dc4,125785636,0,0x0,8
tick,0x7ff999646dc4,125801205,0,0x0,8
tick,0x7ff999646dc4,125816615,0,0x0,8
tick,0x7ff999646dc4,125831761,0,0x0,8
tick,0x7ff999646dc4,125847202,0,0x0,8
tick,0x7ff999646dc4,125862417,0,0x0,8
tick,0x7ff999646dc4,125877858,0,0x0,8
tick,0x7ff999646dc4,125893299,0,0x0,8
tick,0x7ff999646dc4,125908232,0,0x0,8
tick,0x7ff999646dc4,125923804,0,0x0,8
tick,0x7ff999646dc4,125938719,0,0x0,8
tick,0x7ff999646dc4,125954261,0,0x0,8
tick,0x7ff999646dc4,125969983,0,0x0,8
tick,0x7ff999646dc4,125984864,0,0x0,8
tick,0x7ff999646dc4,126000254,0,0x0,8
tick,0x7ff999646dc4,126015681,0,0x0,8
tick,0x7ff999646dc4,126031111,0,0x0,8
tick,0x7ff999646dc4,126046440,0,0x0,8
tick,0x7ff999646dc4,126061960,0,0x0,8
tick,0x7ff999646dc4,126077215,0,0x0,8
tick,0x7ff999646dc4,126092886,0,0x0,8
tick,0x7ff999646dc4,126108566,0,0x0,8
tick,0x7ff999646dc4,126123544,0,0x0,8
tick,0x7ff999646dc4,126139200,0,0x0,8
tick,0x7ff999646dc4,126154430,0,0x0,8
tick,0x7ff999646dc4,126169656,0,0x0,8
tick,0x7ff999646dc4,126184908,0,0x0,8
tick,0x7ff999646dc4,126199858,0,0x0,8
tick,0x7ff999646dc4,126215580,0,0x0,8
tick,0x7ff999646dc4,126230974,0,0x0,8
tick,0x7ff999646dc4,126245997,0,0x0,8
tick,0x7ff999646dc4,126261181,0,0x0,8
tick,0x7ff999646dc4,126276784,0,0x0,8
tick,0x7ff999646dc4,126292152,0,0x0,8
tick,0x7ff999646dc4,126307676,0,0x0,8
tick,0x7ff999646dc4,126323647,0,0x0,8
tick,0x7ff999646dc4,126338728,0,0x0,8
tick,0x7ff999646dc4,126353754,0,0x0,8
tick,0x7ff999646dc4,126369052,0,0x0,8
tick,0x7ff999646dc4,126383775,0,0x0,8
tick,0x7ff999646dc4,126399076,0,0x0,8
tick,0x7ff999646dc4,126414426,0,0x0,8
tick,0x7ff999646dc4,126429649,0,0x0,8
tick,0x7ff999646dc4,126444847,0,0x0,8
tick,0x7ff999646dc4,126460482,0,0x0,8
tick,0x7ff999646dc4,126476063,0,0x0,8
tick,0x7ff999646dc4,126491425,0,0x0,8
tick,0x7ff999646dc4,126506610,0,0x0,8
tick,0x7ff999646dc4,126521912,0,0x0,8
tick,0x7ff999646dc4,126537232,0,0x0,8
tick,0x7ff999646dc4,126552521,0,0x0,8
tick,0x7ff999646dc4,126567900,0,0x0,8
tick,0x7ff999646dc4,126583455,0,0x0,8
tick,0x7ff999646dc4,126598474,0,0x0,8
tick,0x7ff999646dc4,126614111,0,0x0,8
tick,0x7ff999646dc4,126629410,0,0x0,8
tick,0x7ff999646dc4,126645003,0,0x0,8
tick,0x7ff999646dc4,126660359,0,0x0,8
tick,0x7ff999646dc4,126675684,0,0x0,8
tick,0x7ff999646dc4,126691067,0,0x0,8
tick,0x7ff999646dc4,126706166,0,0x0,8
tick,0x7ff999646dc4,126721487,0,0x0,8
tick,0x7ff999646dc4,126736694,0,0x0,8
tick,0x7ff999646dc4,126752074,0,0x0,8
tick,0x7ff999646dc4,126767473,0,0x0,8
tick,0x7ff999646dc4,126782570,0,0x0,8
tick,0x7ff999646dc4,126798009,0,0x0,8
tick,0x7ff999646dc4,126813670,0,0x0,8
tick,0x7ff999646dc4,126828834,0,0x0,8
tick,0x7ff999646dc4,126844366,0,0x0,8
tick,0x7ff999646dc4,126859305,0,0x0,8
tick,0x7ff999646dc4,126875091,0,0x0,8
tick,0x7ff999646dc4,126890536,0,0x0,8
tick,0x7ff999646dc4,126905724,0,0x0,8
tick,0x7ff999646dc4,126921384,0,0x0,8
tick,0x7ff999646dc4,126936997,0,0x0,8
tick,0x7ff999646dc4,126952173,0,0x0,8
tick,0x7ff999646dc4,126967286,0,0x0,8
tick,0x7ff999646dc4,126982742,0,0x0,8
tick,0x7ff999646dc4,126998017,0,0x0,8
tick,0x7ff999646dc4,127013225,0,0x0,8
tick,0x7ff999646dc4,127028751,0,0x0,8
tick,0x7ff999646dc4,127043921,0,0x0,8
tick,0x7ff999646dc4,127059267,0,0x0,8
tick,0x7ff999646dc4,127074539,0,0x0,8
tick,0x7ff999646dc4,127089762,0,0x0,8
tick,0x7ff999646dc4,127105182,0,0x0,8
tick,0x7ff999646dc4,127120521,0,0x0,8
tick,0x7ff999646dc4,127136061,0,0x0,8
tick,0x7ff999646dc4,127151599,0,0x0,8
tick,0x7ff999646dc4,127166735,0,0x0,8
tick,0x7ff999646dc4,127182594,0,0x0,8
tick,0x7ff999646dc4,127197575,0,0x0,8
tick,0x7ff999646dc4,127213206,0,0x0,8
tick,0x7ff999646dc4,127228723,0,0x0,8
tick,0x7ff999646dc4,127243541,0,0x0,8
tick,0x7ff999646dc4,127258997,0,0x0,8
tick,0x7ff999646dc4,127274655,0,0x0,8
tick,0x7ff999646dc4,127289965,0,0x0,8
tick,0x7ff999646dc4,127305110,0,0x0,8
tick,0x7ff999646dc4,127320434,0,0x0,8
tick,0x7ff999646dc4,127335566,0,0x0,8
tick,0x7ff999646dc4,127350888,0,0x0,8
tick,0x7ff999646dc4,127366419,0,0x0,8
tick,0x7ff999646dc4,127381209,0,0x0,8
tick,0x7ff999646dc4,127397072,0,0x0,8
tick,0x7ff999646dc4,127412402,0,0x0,8
tick,0x7ff999646dc4,127427224,0,0x0,8
tick,0x7ff999646dc4,127442477,0,0x0,8
tick,0x7ff999646dc4,127458134,0,0x0,8
tick,0x7ff999646dc4,127472837,0,0x0,8
tick,0x7ff999646dc4,127488670,0,0x0,8
tick,0x7ff999646dc4,127504074,0,0x0,8
tick,0x7ff999646dc4,127519197,0,0x0,8
tick,0x7ff999646dc4,127534610,0,0x0,8
tick,0x7ff999646dc4,127549989,0,0x0,8
tick,0x7ff999646dc4,127565159,0,0x0,8
tick,0x7ff999646dc4,127580388,0,0x0,8
tick,0x7ff999646dc4,127595919,0,0x0,8
tick,0x7ff999646dc4,127611336,0,0x0,8
tick,0x7ff999646dc4,127626731,0,0x0,8
tick,0x7ff999646dc4,127642202,0,0x0,8
tick,0x7ff999646dc4,127656977,0,0x0,8
tick,0x7ff999646dc4,127672370,0,0x0,8
tick,0x7ff999646dc4,127687569,0,0x0,8
tick,0x7ff999646dc4,127702871,0,0x0,8
tick,0x7ff999646dc4,127718213,0,0x0,8
tick,0x7ff999646dc4,127733418,0,0x0,8
tick,0x7ff999646dc4,127748866,0,0x0,8
tick,0x7ff999646dc4,127764139,0,0x0,8
tick,0x7ff999646dc4,127779374,0,0x0,8
tick,0x7ff999646dc4,127794973,0,0x0,8
tick,0x7ff999646dc4,127810337,0,0x0,8
tick,0x7ff999646dc4,127826233,0,0x0,8
tick,0x7ff999646dc4,127841736,0,0x0,8
tick,0x7ff999646dc4,127857119,0,0x0,8
tick,0x7ff999646dc4,127872485,0,0x0,8
tick,0x7ff999646dc4,127887818,0,0x0,8
tick,0x7ff999646dc4,127903002,0,0x0,8
tick,0x7ff999646dc4,127918382,0,0x0,8
tick,0x7ff999646dc4,127933858,0,0x0,8
tick,0x7ff999646dc4,127949057,0,0x0,8
tick,0x7ff999646dc4,127964291,0,0x0,8
tick,0x7ff999646dc4,127979653,0,0x0,8
tick,0x7ff999646dc4,127994945,0,0x0,8
tick,0x7ff999646dc4,128010622,0,0x0,8
tick,0x7ff999646dc4,128025670,0,0x0,8
tick,0x7ff999646dc4,128041148,0,0x0,8
tick,0x7ff999646dc4,128056685,0,0x0,8
tick,0x7ff999646dc4,128072061,0,0x0,8
tick,0x7ff999646dc4,128087594,0,0x0,8
tick,0x7ff999646dc4,128103234,0,0x0,8
tick,0x7ff999646dc4,128118470,0,0x0,8
tick,0x7ff999646dc4,128133936,0,0x0,8
tick,0x7ff999646dc4,128148782,0,0x0,8
tick,0x7ff999646dc4,128164565,0,0x0,8
tick,0x7ff999646dc4,128179834,0,0x0,8
tick,0x7ff999646dc4,128195551,0,0x0,8
tick,0x7ff999646dc4,128210857,0,0x0,8
tick,0x7ff999646dc4,128225881,0,0x0,8
tick,0x7ff999646dc4,128241644,0,0x0,8
tick,0x7ff999646dc4,128257000,0,0x0,8
tick,0x7ff999646dc4,128272494,0,0x0,8
tick,0x7ff999646dc4,128287416,0,0x0,8
tick,0x7ff999646dc4,128302935,0,0x0,8
tick,0x7ff999646dc4,128318186,0,0x0,8
tick,0x7ff999646dc4,128333218,0,0x0,8
tick,0x7ff999646dc4,128349013,0,0x0,8
tick,0x7ff999646dc4,128363822,0,0x0,8
tick,0x7ff999646dc4,128379159,0,0x0,8
tick,0x7ff999646dc4,128394311,0,0x0,8
tick,0x7ff999646dc4,128409879,0,0x0,8
tick,0x7ff999646dc4,128425228,0,0x0,8
tick,0x7ff999646dc4,128440732,0,0x0,8
tick,0x7ff999646dc4,128456449,0,0x0,8
tick,0x7ff999646dc4,128471999,0,0x0,8
tick,0x7ff999646dc4,128487104,0,0x0,8
tick,0x7ff999646dc4,128502611,0,0x0,8
tick,0x7ff999646dc4,128517965,0,0x0,8
tick,0x7ff999646dc4,128533466,0,0x0,8
tick,0x7ff999646dc4,128548784,0,0x0,8
tick,0x7ff999646dc4,128564530,0,0x0,8
tick,0x7ff999646dc4,128580025,0,0x0,8
tick,0x7ff999646dc4,128595392,0,0x0,8
tick,0x7ff999646dc4,128610803,0,0x0,8
tick,0x7ff999646dc4,128626218,0,0x0,8
tick,0x7ff999646dc4,128641278,0,0x0,8
tick,0x7ff999646dc4,128656485,0,0x0,8
tick,0x7ff999646dc4,128672041,0,0x0,8
tick,0x7ff999646dc4,128687388,0,0x0,8
tick,0x7ff999646dc4,128702477,0,0x0,8
tick,0x7ff999646dc4,128717987,0,0x0,8
tick,0x7ff999646dc4,128732983,0,0x0,8
tick,0x7ff999646dc4,128748996,0,0x0,8
tick,0x7ff999646dc4,128764268,0,0x0,8
tick,0x7ff999646dc4,128779543,0,0x0,8
tick,0x7ff999646dc4,128794894,0,0x0,8
tick,0x7ff999646dc4,128810556,0,0x0,8
tick,0x7ff999646dc4,128825838,0,0x0,8
tick,0x7ff999646dc4,128841556,0,0x0,8
tick,0x7ff999646dc4,128856365,0,0x0,8
tick,0x7ff999646dc4,128871595,0,0x0,8
tick,0x7ff999646dc4,128886948,0,0x0,8
tick,0x7ff999646dc4,128902145,0,0x0,8
tick,0x7ff999646dc4,128917404,0,0x0,8
tick,0x7ff999646dc4,128932748,0,0x0,8
tick,0x7ff999646dc4,128948385,0,0x0,8
tick,0x7ff999646dc4,128963387,0,0x0,8
tick,0x7ff999646dc4,128979047,0,0x0,8
tick,0x7ff999646dc4,128994004,0,0x0,8
tick,0x7ff999646dc4,129008826,0,0x0,8
tick,0x7ff999646dc4,129023938,0,0x0,8
tick,0x7ff999646dc4,129039101,0,0x0,8
tick,0x7ff999646dc4,129054406,0,0x0,8
tick,0x7ff999646dc4,129069868,0,0x0,8
tick,0x7ff999646dc4,129085705,0,0x0,8
tick,0x7ff999646dc4,129101520,0,0x0,8
tick,0x7ff999646dc4,129116463,0,0x0,8
tick,0x7ff999646dc4,129132343,0,0x0,8
tick,0x7ff999646dc4,129147235,0,0x0,8
tick,0x7ff999646dc4,129162761,0,0x0,8
tick,0x7ff999646dc4,129178579,0,0x0,8
tick,0x7ff999646dc4,129193978,0,0x0,8
tick,0x7ff999646dc4,129209582,0,0x0,8
tick,0x7ff999646dc4,129224514,0,0x0,8
tick,0x7ff999646dc4,129240110,0,0x0,8
tick,0x7ff999646dc4,129255507,0,0x0,8
tick,0x7ff999646dc4,129270632,0,0x0,8
tick,0x7ff999646dc4,129285895,0,0x0,8
tick,0x7ff999646dc4,129301188,0,0x0,8
tick,0x7ff999646dc4,129316488,0,0x0,8
tick,0x7ff999646dc4,129332087,0,0x0,8
tick,0x7ff999646dc4,129347626,0,0x0,8
tick,0x7ff999646dc4,129364183,0,0x0,8
tick,0x7ff999646dc4,129377822,0,0x0,8
tick,0x7ff999646dc4,129393638,0,0x0,8
tick,0x7ff999646dc4,129409039,0,0x0,8
tick,0x7ff999646dc4,129424560,0,0x0,8
tick,0x7ff999646dc4,129439736,0,0x0,8
tick,0x7ff999646dc4,129454921,0,0x0,8
tick,0x7ff999646dc4,129470495,0,0x0,8
tick,0x7ff999646dc4,129485960,0,0x0,8
tick,0x7ff999646dc4,129501269,0,0x0,8
tick,0x7ff999646dc4,129515941,0,0x0,8
tick,0x7ff999646dc4,129531341,0,0x0,8
tick,0x7ff999646dc4,129546830,0,0x0,8
tick,0x7ff999646dc4,129562345,0,0x0,8
tick,0x7ff999646dc4,129577362,0,0x0,8
tick,0x7ff999646dc4,129592631,0,0x0,8
tick,0x7ff999646dc4,129608448,0,0x0,8
tick,0x7ff999646dc4,129623246,0,0x0,8
tick,0x7ff999646dc4,129638413,0,0x0,8
tick,0x7ff999646dc4,129654235,0,0x0,8
tick,0x7ff999646dc4,129669602,0,0x0,8
tick,0x7ff999646dc4,129684349,0,0x0,8
tick,0x7ff999646dc4,129700030,0,0x0,8
tick,0x7ff999646dc4,129715281,0,0x0,8
tick,0x7ff999646dc4,129730611,0,0x0,8
tick,0x7ff999646dc4,129746454,0,0x0,8
tick,0x7ff999646dc4,129761780,0,0x0,8
tick,0x7ff999646dc4,129776147,0,0x0,8
tick,0x7ff999646dc4,129791634,0,0x0,8
tick,0x7ff999646dc4,129806832,0,0x0,8
tick,0x7ff999646dc4,129822187,0,0x0,8
tick,0x7ff999646dc4,129837785,0,0x0,8
tick,0x7ff999646dc4,129852989,0,0x0,8
tick,0x7ff999646dc4,129868323,0,0x0,8
tick,0x7ff999646dc4,129883699,0,0x0,8
tick,0x7ff999646dc4,129898526,0,0x0,8
tick,0x7ff999646dc4,129913966,0,0x0,8
tick,0x7ff999646dc4,129929260,0,0x0,8
tick,0x7ff999646dc4,129944766,0,0x0,8
tick,0x7ff999646dc4,129959758,0,0x0,8
tick,0x7ff999646dc4,129975115,0,0x0,8
tick,0x7ff999646dc4,129990742,0,0x0,8
tick,0x7ff999646dc4,130005872,0,0x0,8
tick,0x7ff999646dc4,130021145,0,0x0,8
tick,0x7ff999646dc4,130036358,0,0x0,8
tick,0x7ff999646dc4,130051979,0,0x0,8
tick,0x7ff999646dc4,130067754,0,0x0,8
tick,0x7ff999646dc4,130082808,0,0x0,8
tick,0x7ff999646dc4,130098031,0,0x0,8
tick,0x7ff999646dc4,130113197,0,0x0,8
tick,0x7ff999646dc4,130129424,0,0x0,8
tick,0x7ff999646dc4,130144207,0,0x0,8
tick,0x7ff999646dc4,130160171,0,0x0,8
tick,0x7ff999646dc4,130174327,0,0x0,8
tick,0x7ff999646dc4,130189396,0,0x0,8
tick,0x7ff999646dc4,130205718,0,0x0,8
tick,0x7ff999646dc4,130219685,0,0x0,8
tick,0x7ff999646dc4,130234867,0,0x0,8
tick,0x7ff999646dc4,130250196,0,0x0,8
tick,0x7ff999646dc4,130265366,0,0x0,8
tick,0x7ff999646dc4,130281655,0,0x0,8
tick,0x7ff999646dc4,130296244,0,0x0,8
tick,0x7ff999646dc4,130311600,0,0x0,8
tick,0x7ff999646dc4,130327219,0,0x0,8
tick,0x7ff999646dc4,130342078,0,0x0,8
tick,0x7ff999646dc4,130357783,0,0x0,8
tick,0x7ff999646dc4,130373417,0,0x0,8
tick,0x7ff999646dc4,130388404,0,0x0,8
tick,0x7ff999646dc4,130403378,0,0x0,8
tick,0x7ff999646dc4,130418724,0,0x0,8
tick,0x7ff999646dc4,130434114,0,0x0,8
tick,0x7ff999646dc4,130449819,0,0x0,8
tick,0x7ff999646dc4,130465487,0,0x0,8
tick,0x7ff999646dc4,130481149,0,0x0,8
tick,0x7ff999646dc4,130496722,0,0x0,8
tick,0x7ff999646dc4,130512335,0,0x0,8
tick,0x7ff999646dc4,130527849,0,0x0,8
tick,0x7ff999646dc4,130543455,0,0x0,8
tick,0x7ff999646dc4,130558563,0,0x0,8
tick,0x7ff999646dc4,130573934,0,0x0,8
tick,0x7ff999646dc4,130589121,0,0x0,8
tick,0x7ff999646dc4,130604569,0,0x0,8
tick,0x7ff999646dc4,130619869,0,0x0,8
tick,0x7ff999646dc4,130635257,0,0x0,8
tick,0x7ff999646dc4,130650516,0,0x0,8
tick,0x7ff999646dc4,130666138,0,0x0,8
tick,0x7ff999646dc4,130681220,0,0x0,8
tick,0x7ff999646dc4,130696314,0,0x0,8
tick,0x7ff999646dc4,130711508,0,0x0,8
tick,0x7ff999646dc4,130726617,0,0x0,8
tick,0x7ff999646dc4,130742341,0,0x0,8
tick,0x7ff999646dc4,130757522,0,0x0,8
tick,0x7ff999646dc4,130772577,0,0x0,8
tick,0x7ff999646dc4,130788198,0,0x0,8
tick,0x7ff999646dc4,130804877,0,0x0,8
tick,0x7ff999646dc4,130818384,0,0x0,8
tick,0x7ff999646dc4,130833841,0,0x0,8
tick,0x7ff999646dc4,130849131,0,0x0,8
tick,0x7ff999646dc4,130864660,0,0x0,8
tick,0x7ff999646dc4,130879834,0,0x0,8
tick,0x7ff999646dc4,130895532,0,0x0,8
tick,0x7ff999646dc4,130910469,0,0x0,8
tick,0x7ff999646dc4,130926276,0,0x0,8
tick,0x7ff999646dc4,130941786,0,0x0,8
tick,0x7ff999646dc4,130956665,0,0x0,8
tick,0x7ff999646dc4,130971777,0,0x0,8
tick,0x7ff999646dc4,130987118,0,0x0,8
tick,0x7ff999646dc4,131002655,0,0x0,8
tick,0x7ff999646dc4,131018107,0,0x0,8
tick,0x7ff999646dc4,131033484,0,0x0,8
tick,0x7ff999646dc4,131048771,0,0x0,8
tick,0x7ff999646dc4,131064076,0,0x0,8
tick,0x7ff999646dc4,131079086,0,0x0,8
tick,0x7ff999646dc4,131094214,0,0x0,8
tick,0x7ff999646dc4,131109684,0,0x0,8
tick,0x7ff999646dc4,131124689,0,0x0,8
tick,0x7ff999646dc4,131140200,0,0x0,8
tick,0x7ff999646dc4,131154876,0,0x0,8
tick,0x7ff999646dc4,131170894,0,0x0,8
tick,0x7ff999646dc4,131185956,0,0x0,8
tick,0x7ff999646dc4,131200832,0,0x0,8
tick,0x7ff999646dc4,131215748,0,0x0,8
tick,0x7ff999646dc4,131230740,0,0x0,8
tick,0x7ff999646dc4,131246001,0,0x0,8
tick,0x7ff999646dc4,131261480,0,0x0,8
tick,0x7ff999646dc4,131276942,0,0x0,8
tick,0x7ff999646dc4,131292516,0,0x0,8
tick,0x7ff999646dc4,131307219,0,0x0,8
tick,0x7ff999646dc4,131322991,0,0x0,8
tick,0x7ff999646dc4,131338139,0,0x0,8
tick,0x7ff999646dc4,131353475,0,0x0,8
tick,0x7ff999646dc4,131368565,0,0x0,8
tick,0x7ff999646dc4,131385279,0,0x0,8
tick,0x7ff999646dc4,131399358,0,0x0,8
tick,0x7ff999646dc4,131414708,0,0x0,8
tick,0x7ff999646dc4,131429787,0,0x0,8
tick,0x7ff999646dc4,131445134,0,0x0,8
tick,0x7ff999646dc4,131460030,0,0x0,8
tick,0x7ff999646dc4,131475809,0,0x0,8
tick,0x7ff999646dc4,131491398,0,0x0,8
tick,0x7ff999646dc4,131507008,0,0x0,8
tick,0x7ff999646dc4,131521963,0,0x0,8
tick,0x7ff999646dc4,131537359,0,0x0,8
tick,0x7ff999646dc4,131552652,0,0x0,8
tick,0x7ff999646dc4,131568337,0,0x0,8
tick,0x7ff999646dc4,131584032,0,0x0,8
tick,0x7ff999646dc4,131598989,0,0x0,8
tick,0x7ff999646dc4,131614294,0,0x0,8
tick,0x7ff999646dc4,131629828,0,0x0,8
tick,0x7ff999646dc4,131645338,0,0x0,8
tick,0x7ff999646dc4,131660422,0,0x0,8
tick,0x7ff999646dc4,131675724,0,0x0,8
tick,0x7ff999646dc4,131691196,0,0x0,8
tick,0x7ff999646dc4,131706559,0,0x0,8
tick,0x7ff999646dc4,131721728,0,0x0,8
tick,0x7ff999646dc4,131737247,0,0x0,8
tick,0x7ff999646dc4,131752349,0,0x0,8
tick,0x7ff999646dc4,131767926,0,0x0,8
tick,0x7ff999646dc4,131783176,0,0x0,8
tick,0x7ff999646dc4,131798373,0,0x0,8
tick,0x7ff999646dc4,131813674,0,0x0,8
tick,0x7ff999646dc4,131828769,0,0x0,8
tick,0x7ff999646dc4,131844271,0,0x0,8
tick,0x7ff999646dc4,131859465,0,0x0,8
tick,0x7ff999646dc4,131874740,0,0x0,8
tick,0x7ff999646dc4,131890332,0,0x0,8
tick,0x7ff999646dc4,131905613,0,0x0,8
tick,0x7ff999646dc4,131920842,0,0x0,8
tick,0x7ff999646dc4,131935941,0,0x0,8
tick,0x7ff999646dc4,131950871,0,0x0,8
tick,0x7ff999646dc4,131965642,0,0x0,8
tick,0x7ff999646dc4,131981115,0,0x0,8
tick,0x7ff999646dc4,131995943,0,0x0,8
tick,0x7ff999646dc4,132011427,0,0x0,8
tick,0x7ff999646dc4,132026812,0,0x0,8
tick,0x7ff999646dc4,132042023,0,0x0,8
tick,0x7ff999646dc4,132057436,0,0x0,8
tick,0x7ff999646dc4,132072871,0,0x0,8
tick,0x7ff999646dc4,132088086,0,0x0,8
tick,0x7ff999646dc4,132103449,0,0x0,8
tick,0x7ff999646dc4,132118696,0,0x0,8
tick,0x7ff999646dc4,132134288,0,0x0,8
tick,0x7ff999646dc4,132149920,0,0x0,8
tick,0x7ff999646dc4,132165409,0,0x0,8
tick,0x7ff999646dc4,132180146,0,0x0,8
tick,0x7ff999646dc4,132195852,0,0x0,8
tick,0x7ff999646dc4,132210942,0,0x0,8
tick,0x7ff999646dc4,132226315,0,0x0,8
tick,0x7ff999646dc4,132241907,0,0x0,8
tick,0x7ff999646dc4,132257397,0,0x0,8
tick,0x7ff999646dc4,132272273,0,0x0,8
tick,0x7ff999646dc4,132287686,0,0x0,8
tick,0x7ff999646dc4,132302997,0,0x0,8
tick,0x7ff999646dc4,132318188,0,0x0,8
tick,0x7ff999646dc4,132333627,0,0x0,8
tick,0x7ff999646dc4,132349074,0,0x0,8
tick,0x7ff999646dc4,132364424,0,0x0,8
tick,0x7ff999646dc4,132379717,0,0x0,8
tick,0x7ff999646dc4,132395802,0,0x0,8
tick,0x7ff999646dc4,132410395,0,0x0,8
tick,0x7ff999646dc4,132425897,0,0x0,8
tick,0x7ff999646dc4,132441096,0,0x0,8
tick,0x7ff999646dc4,132456384,0,0x0,8
tick,0x7ff999646dc4,132471793,0,0x0,8
tick,0x7ff999646dc4,132486814,0,0x0,8
tick,0x7ff999646dc4,132501641,0,0x0,8
tick,0x7ff999646dc4,132517159,0,0x0,8
tick,0x7ff999646dc4,132532511,0,0x0,8
tick,0x7ff999646dc4,132547925,0,0x0,8
tick,0x7ff999646dc4,132563037,0,0x0,8
tick,0x7ff999646dc4,132578201,0,0x0,8
tick,0x7ff999646dc4,132593384,0,0x0,8
tick,0x7ff999646dc4,132608463,0,0x0,8
tick,0x7ff999646dc4,132624239,0,0x0,8
tick,0x7ff999646dc4,132639564,0,0x0,8
tick,0x7ff999646dc4,132655232,0,0x0,8
tick,0x7ff999646dc4,132670688,0,0x0,8
tick,0x7ff999646dc4,132685972,0,0x0,8
tick,0x7ff999646dc4,132701155,0,0x0,8
tick,0x7ff999646dc4,132716542,0,0x0,8
tick,0x7ff999646dc4,132732237,0,0x0,8
tick,0x7ff999646dc4,132748071,0,0x0,8
tick,0x7ff999646dc4,132763402,0,0x0,8
tick,0x7ff999646dc4,132778731,0,0x0,8
tick,0x7ff999646dc4,132794134,0,0x0,8
tick,0x7ff999646dc4,132809898,0,0x0,8
tick,0x7ff999646dc4,132824556,0,0x0,8
tick,0x7ff999646dc4,132840049,0,0x0,8
tick,0x7ff999646dc4,132855811,0,0x0,8
tick,0x7ff999646dc4,132870862,0,0x0,8
tick,0x7ff999646dc4,132887545,0,0x0,8
tick,0x7ff999646dc4,132901930,0,0x0,8
tick,0x7ff999646dc4,132917432,0,0x0,8
tick,0x7ff999646dc4,132932422,0,0x0,8
tick,0x7ff999646dc4,132947838,0,0x0,8
tick,0x7ff999646dc4,132963515,0,0x0,8
tick,0x7ff999646dc4,132979222,0,0x0,8
tick,0x7ff999646dc4,132994748,0,0x0,8
tick,0x7ff999646dc4,133009617,0,0x0,8
tick,0x7ff999646dc4,133024701,0,0x0,8
tick,0x7ff999646dc4,133039926,0,0x0,8
tick,0x7ff999646dc4,133055336,0,0x0,8
tick,0x7ff999646dc4,133070598,0,0x0,8
tick,0x7ff999646dc4,133085687,0,0x0,8
tick,0x7ff999646dc4,133101234,0,0x0,8
tick,0x7ff999646dc4,133116935,0,0x0,8
tick,0x7ff999646dc4,133132161,0,0x0,8
tick,0x7ff999646dc4,133147709,0,0x0,8
tick,0x7ff999646dc4,133162928,0,0x0,8
tick,0x7ff999646dc4,133178176,0,0x0,8
tick,0x7ff999646dc4,133193559,0,0x0,8
tick,0x7ff999646dc4,133209056,0,0x0,8
tick,0x7ff999646dc4,133224709,0,0x0,8
tick,0x7ff999646dc4,133240296,0,0x0,8
tick,0x7ff999646dc4,133255491,0,0x0,8
tick,0x7ff999646dc4,133271091,0,0x0,8
tick,0x7ff999646dc4,133286118,0,0x0,8
tick,0x7ff999646dc4,133301499,0,0x0,8
tick,0x7ff999646dc4,133316915,0,0x0,8
tick,0x7ff999646dc4,133331940,0,0x0,8
tick,0x7ff999646dc4,133347080,0,0x0,8
tick,0x7ff999646dc4,133362706,0,0x0,8
tick,0x7ff999646dc4,133378199,0,0x0,8
tick,0x7ff999646dc4,133393369,0,0x0,8
tick,0x7ff999646dc4,133409101,0,0x0,8
tick,0x7ff999646dc4,133423805,0,0x0,8
tick,0x7ff999646dc4,133438996,0,0x0,8
tick,0x7ff999646dc4,133454310,0,0x0,8
tick,0x7ff999646dc4,133470029,0,0x0,8
tick,0x7ff999646dc4,133485183,0,0x0,8
tick,0x7ff999646dc4,133500423,0,0x0,8
tick,0x7ff999646dc4,133515977,0,0x0,8
tick,0x7ff999646dc4,133531541,0,0x0,8
tick,0x7ff999646dc4,133546896,0,0x0,8
tick,0x7ff999646dc4,133562375,0,0x0,8
tick,0x7ff999646dc4,133577297,0,0x0,8
tick,0x7ff999646dc4,133592807,0,0x0,8
tick,0x7ff999646dc4,133607418,0,0x0,8
tick,0x7ff999646dc4,133622789,0,0x0,8
tick,0x7ff999646dc4,133637956,0,0x0,8
tick,0x7ff999646dc4,133653489,0,0x0,8
tick,0x7ff999646dc4,133669004,0,0x0,8
tick,0x7ff999646dc4,133684402,0,0x0,8
tick,0x7ff999646dc4,133699247,0,0x0,8
tick,0x7ff999646dc4,133714731,0,0x0,8
tick,0x7ff999646dc4,133729953,0,0x0,8
tick,0x7ff999646dc4,133745572,0,0x0,8
tick,0x7ff999646dc4,133760476,0,0x0,8
tick,0x7ff999646dc4,133776172,0,0x0,8
tick,0x7ff999646dc4,133791315,0,0x0,8
tick,0x7ff999646dc4,133806528,0,0x0,8
tick,0x7ff999646dc4,133821795,0,0x0,8
tick,0x7ff999646dc4,133837407,0,0x0,8
tick,0x7ff999646dc4,133852735,0,0x0,8
tick,0x7ff999646dc4,133867844,0,0x0,8
tick,0x7ff999646dc4,133883255,0,0x0,8
tick,0x7ff999646dc4,133898341,0,0x0,8
tick,0x7ff999646dc4,133913785,0,0x0,8
tick,0x7ff999646dc4,133929770,0,0x0,8
tick,0x7ff999646dc4,133944536,0,0x0,8
tick,0x7ff999646dc4,133959716,0,0x0,8
tick,0x7ff999646dc4,133974871,0,0x0,8
tick,0x7ff999646dc4,133990522,0,0x0,8
tick,0x7ff999646dc4,134005730,0,0x0,8
tick,0x7ff999646dc4,134020914,0,0x0,8
tick,0x7ff999646dc4,134036140,0,0x0,8
tick,0x7ff999646dc4,134051808,0,0x0,8
tick,0x7ff999646dc4,134066979,0,0x0,8
tick,0x7ff999646dc4,134082305,0,0x0,8
tick,0x7ff999646dc4,134097795,0,0x0,8
tick,0x7ff999646dc4,134113094,0,0x0,8
tick,0x7ff999646dc4,134128494,0,0x0,8
tick,0x7ff999646dc4,134143631,0,0x0,8
tick,0x7ff999646dc4,134159033,0,0x0,8
tick,0x7ff999646dc4,134174299,0,0x0,8
tick,0x7ff999646dc4,134189965,0,0x0,8
tick,0x7ff999646dc4,134205101,0,0x0,8
tick,0x7ff999646dc4,134220335,0,0x0,8
tick,0x7ff999646dc4,134235661,0,0x0,8
tick,0x7ff999646dc4,134251103,0,0x0,8
tick,0x7ff999646dc4,134266214,0,0x0,8
tick,0x7ff999646dc4,134281649,0,0x0,8
tick,0x7ff999646dc4,134296981,0,0x0,8
tick,0x7ff999646dc4,134312398,0,0x0,8
tick,0x7ff999646dc4,134327828,0,0x0,8
tick,0x7ff999646dc4,134342787,0,0x0,8
tick,0x7ff999646dc4,134358197,0,0x0,8
tick,0x7ff999646dc4,134373431,0,0x0,8
tick,0x7ff999646dc4,134389009,0,0x0,8
tick,0x7ff999646dc4,134403717,0,0x0,8
tick,0x7ff999646dc4,134419264,0,0x0,8
tick,0x7ff999646dc4,134434457,0,0x0,8
tick,0x7ff999646dc4,134449818,0,0x0,8
tick,0x7ff999646dc4,134465287,0,0x0,8
tick,0x7ff999646dc4,134480679,0,0x0,8
tick,0x7ff999646dc4,134495808,0,0x0,8
tick,0x7ff999646dc4,134510983,0,0x0,8
tick,0x7ff999646dc4,134526453,0,0x0,8
tick,0x7ff999646dc4,134541689,0,0x0,8
tick,0x7ff999646dc4,134557936,0,0x0,8
tick,0x7ff999646dc4,134572759,0,0x0,8
tick,0x7ff999646dc4,134587936,0,0x0,8
tick,0x7ff999646dc4,134603126,0,0x0,8
tick,0x7ff999646dc4,134618447,0,0x0,8
tick,0x7ff999646dc4,134633860,0,0x0,8
tick,0x7ff999646dc4,134649389,0,0x0,8
tick,0x7ff999646dc4,134664354,0,0x0,8
tick,0x7ff999646dc4,134679897,0,0x0,8
tick,0x7ff999646dc4,134695306,0,0x0,8
tick,0x7ff999646dc4,134711182,0,0x0,8
tick,0x7ff999646dc4,134726212,0,0x0,8
tick,0x7ff999646dc4,134741484,0,0x0,8
tick,0x7ff999646dc4,134756701,0,0x0,8
tick,0x7ff999646dc4,134771836,0,0x0,8
tick,0x7ff999646dc4,134786976,0,0x0,8
tick,0x7ff999646dc4,134802619,0,0x0,8
tick,0x7ff999646dc4,134817866,0,0x0,8
tick,0x7ff999646dc4,134832896,0,0x0,8
tick,0x7ff999646dc4,134848353,0,0x0,8
tick,0x7ff999646dc4,134863856,0,0x0,8
tick,0x7ff999646dc4,134879283,0,0x0,8
tick,0x7ff999646dc4,134894716,0,0x0,8
tick,0x7ff999646dc4,134909908,0,0x0,8
tick,0x7ff999646dc4,134925057,0,0x0,8
tick,0x7ff999646dc4,134940424,0,0x0,8
tick,0x7ff999646dc4,134956013,0,0x0,8
tick,0x7ff999646dc4,134971340,0,0x0,8
tick,0x7ff999646dc4,134986476,0,0x0,8
tick,0x7ff999646dc4,135001706,0,0x0,8
tick,0x7ff999646dc4,135016843,0,0x0,8
tick,0x7ff999646dc4,135032336,0,0x0,8
tick,0x7ff999646dc4,135047617,0,0x0,8
tick,0x7ff999646dc4,135062982,0,0x0,8
tick,0x7ff999646dc4,135078193,0,0x0,8
tick,0x7ff999646dc4,135093698,0,0x0,8
tick,0x7ff999646dc4,135108942,0,0x0,8
tick,0x7ff999646dc4,135124502,0,0x0,8
tick,0x7ff999646dc4,135139720,0,0x0,8
tick,0x7ff999646dc4,135155245,0,0x0,8
tick,0x7ff999646dc4,135170318,0,0x0,8
tick,0x7ff999646dc4,135185395,0,0x0,8
tick,0x7ff999646dc4,135200601,0,0x0,8
tick,0x7ff999646dc4,135215805,0,0x0,8
tick,0x7ff999646dc4,135231669,0,0x0,8
tick,0x7ff999646dc4,135246444,0,0x0,8
tick,0x7ff999646dc4,135261669,0,0x0,8
tick,0x7ff999646dc4,135276316,0,0x0,8
tick,0x7ff999646dc4,135291452,0,0x0,8
tick,0x7ff999646dc4,135306814,0,0x0,8
tick,0x7ff999646dc4,135322197,0,0x0,8
tick,0x7ff999646dc4,135337530,0,0x0,8
tick,0x7ff999646dc4,135352832,0,0x0,8
tick,0x7ff999646dc4,135367900,0,0x0,8
tick,0x7ff999646dc4,135383543,0,0x0,8
tick,0x7ff999646dc4,135399171,0,0x0,8
tick,0x7ff999646dc4,135414410,0,0x0,8
tick,0x7ff999646dc4,135430306,0,0x0,8
tick,0x7ff999646dc4,135444983,0,0x0,8
tick,0x7ff999646dc4,135460619,0,0x0,8
tick,0x7ff999646dc4,135475786,0,0x0,8
tick,0x7ff999646dc4,135491241,0,0x0,8
tick,0x7ff999646dc4,135506759,0,0x0,8
tick,0x7ff999646dc4,135522431,0,0x0,8
tick,0x7ff999646dc4,135537843,0,0x0,8
tick,0x7ff999646dc4,135553280,0,0x0,8
tick,0x7ff999646dc4,135568390,0,0x0,8
tick,0x7ff999646dc4,135583610,0,0x0,8
tick,0x7ff999646dc4,135599278,0,0x0,8
tick,0x7ff999646dc4,135614709,0,0x0,8
tick,0x7ff999646dc4,135629782,0,0x0,8
tick,0x7ff999646dc4,135645212,0,0x0,8
tick,0x7ff999646dc4,135660531,0,0x0,8
tick,0x7ff999646dc4,135676039,0,0x0,8
tick,0x7ff999646dc4,135691275,0,0x0,8
tick,0x7ff999646dc4,135706450,0,0x0,8
tick,0x7ff999646dc4,135721600,0,0x0,8
tick,0x7ff999646dc4,135737081,0,0x0,8
tick,0x7ff999646dc4,135751950,0,0x0,8
tick,0x7ff999646dc4,135767397,0,0x0,8
tick,0x7ff999646dc4,135782719,0,0x0,8
tick,0x7ff999646dc4,135798071,0,0x0,8
tick,0x7ff999646dc4,135813257,0,0x0,8
tick,0x7ff999646dc4,135828781,0,0x0,8
tick,0x7ff999646dc4,135844165,0,0x0,8
tick,0x7ff999646dc4,135859131,0,0x0,8
tick,0x7ff999646dc4,135874714,0,0x0,8
tick,0x7ff999646dc4,135889647,0,0x0,8
tick,0x7ff999646dc4,135905014,0,0x0,8
tick,0x7ff999646dc4,135920231,0,0x0,8
tick,0x7ff999646dc4,135935374,0,0x0,8
tick,0x7ff999646dc4,135951042,0,0x0,8
tick,0x7ff999646dc4,135966653,0,0x0,8
tick,0x7ff999646dc4,135981835,0,0x0,8
tick,0x7ff999646dc4,135997264,0,0x0,8
tick,0x7ff999646dc4,136012714,0,0x0,8
tick,0x7ff999646dc4,136027837,0,0x0,8
tick,0x7ff999646dc4,136042994,0,0x0,8
tick,0x7ff999646dc4,136058382,0,0x0,8
tick,0x7ff999646dc4,136074177,0,0x0,8
tick,0x7ff999646dc4,136089411,0,0x0,8
tick,0x7ff999646dc4,136104404,0,0x0,8
tick,0x7ff999646dc4,136119818,0,0x0,8
tick,0x7ff999646dc4,136135115,0,0x0,8
tick,0x7ff999646dc4,136150592,0,0x0,8
tick,0x7ff999646dc4,136165670,0,0x0,8
tick,0x7ff999646dc4,136180925,0,0x0,8
tick,0x7ff999646dc4,136196563,0,0x0,8
tick,0x7ff999646dc4,136211775,0,0x0,8
tick,0x7ff999646dc4,136227070,0,0x0,8
tick,0x7ff999646dc4,136242274,0,0x0,8
tick,0x7ff999646dc4,136257594,0,0x0,8
tick,0x7ff999646dc4,136273140,0,0x0,8
tick,0x7ff999646dc4,136287800,0,0x0,8
tick,0x7ff999646dc4,136303232,0,0x0,8
tick,0x7ff999646dc4,136318600,0,0x0,8
tick,0x7ff999646dc4,136333839,0,0x0,8
tick,0x7ff999646dc4,136349081,0,0x0,8
tick,0x7ff999646dc4,136364328,0,0x0,8
tick,0x7ff999646dc4,136379529,0,0x0,8
tick,0x7ff999646dc4,136395222,0,0x0,8
tick,0x7ff999646dc4,136410520,0,0x0,8
tick,0x7ff999646dc4,136426026,0,0x0,8
tick,0x7ff999646dc4,136441506,0,0x0,8
tick,0x7ff999646dc4,136456583,0,0x0,8
tick,0x7ff999646dc4,136471967,0,0x0,8
tick,0x7ff999646dc4,136487167,0,0x0,8
tick,0x7ff999646dc4,136502599,0,0x0,8
tick,0x7ff999646dc4,136517807,0,0x0,8
tick,0x7ff999646dc4,136533372,0,0x0,8
tick,0x7ff999646dc4,136548159,0,0x0,8
tick,0x7ff999646dc4,136564112,0,0x0,8
tick,0x7ff999646dc4,136578756,0,0x0,8
tick,0x7ff999646dc4,136594097,0,0x0,8
tick,0x7ff999646dc4,136609333,0,0x0,8
tick,0x7ff999646dc4,136624543,0,0x0,8
tick,0x7ff999646dc4,136639887,0,0x0,8
tick,0x7ff999646dc4,136655251,0,0x0,8
tick,0x7ff999646dc4,136670309,0,0x0,8
tick,0x7ff999646dc4,136685817,0,0x0,8
tick,0x7ff999646dc4,136700928,0,0x0,8
tick,0x7ff999646dc4,136716489,0,0x0,8
tick,0x7ff999646dc4,136731660,0,0x0,8
tick,0x7ff999646dc4,136747150,0,0x0,8
tick,0x7ff999646dc4,136762370,0,0x0,8
tick,0x7ff999646dc4,136777700,0,0x0,8
tick,0x7ff999646dc4,136793501,0,0x0,8
tick,0x7ff999646dc4,136809014,0,0x0,8
tick,0x7ff999646dc4,136824757,0,0x0,8
tick,0x7ff999646dc4,136840302,0,0x0,8
tick,0x7ff999646dc4,136855581,0,0x0,8
tick,0x7ff999646dc4,136871187,0,0x0,8
tick,0x7ff999646dc4,136886769,0,0x0,8
tick,0x7ff999646dc4,136902354,0,0x0,8
tick,0x7ff999646dc4,136917153,0,0x0,8
tick,0x7ff999646dc4,136932374,0,0x0,8
tick,0x7ff999646dc4,136947830,0,0x0,8
tick,0x7ff999646dc4,136963002,0,0x0,8
tick,0x7ff999646dc4,136978284,0,0x0,8
tick,0x7ff999646dc4,136993721,0,0x0,8
tick,0x7ff999646dc4,137008935,0,0x0,8
tick,0x7ff999646dc4,137024348,0,0x0,8
tick,0x7ff999646dc4,137039866,0,0x0,8
tick,0x7ff999646dc4,137055269,0,0x0,8
tick,0x7ff999646dc4,137070615,0,0x0,8
tick,0x7ff999646dc4,137085796,0,0x0,8
tick,0x7ff999646dc4,137101112,0,0x0,8
tick,0x7ff999646dc4,137116503,0,0x0,8
tick,0x7ff999646dc4,137131851,0,0x0,8
tick,0x7ff999646dc4,137147259,0,0x0,8
tick,0x7ff999646dc4,137162810,0,0x0,8
tick,0x7ff999646dc4,137178529,0,0x0,8
tick,0x7ff999646dc4,137193139,0,0x0,8
tick,0x7ff999646dc4,137208765,0,0x0,8
tick,0x7ff999646dc4,137224450,0,0x0,8
tick,0x7ff999646dc4,137239766,0,0x0,8
tick,0x7ff999646dc4,137255414,0,0x0,8
tick,0x7ff999646dc4,137269937,0,0x0,8
tick,0x7ff999646dc4,137285336,0,0x0,8
tick,0x7ff999646dc4,137300665,0,0x0,8
tick,0x7ff999646dc4,137316078,0,0x0,8
tick,0x7ff999646dc4,137331068,0,0x0,8
tick,0x7ff999646dc4,137346434,0,0x0,8
tick,0x7ff999646dc4,137362034,0,0x0,8
tick,0x7ff999646dc4,137377399,0,0x0,8
tick,0x7ff999646dc4,137393143,0,0x0,8
tick,0x7ff999646dc4,137408400,0,0x0,8
tick,0x7ff999646dc4,137423682,0,0x0,8
tick,0x7ff999646dc4,137439377,0,0x0,8
tick,0x7ff999646dc4,137454747,0,0x0,8
tick,0x7ff999646dc4,137469594,0,0x0,8
tick,0x7ff999646dc4,137485179,0,0x0,8
tick,0x7ff999646dc4,137500460,0,0x0,8
tick,0x7ff999646dc4,137515301,0,0x0,8
tick,0x7ff999646dc4,137530854,0,0x0,8
tick,0x7ff999646dc4,137546245,0,0x0,8
tick,0x7ff999646dc4,137561753,0,0x0,8
tick,0x7ff999646dc4,137577119,0,0x0,8
tick,0x7ff999646dc4,137592613,0,0x0,8
tick,0x7ff999646dc4,137607929,0,0x0,8
tick,0x7ff999646dc4,137623205,0,0x0,8
tick,0x7ff999646dc4,137638632,0,0x0,8
tick,0x7ff999646dc4,137653891,0,0x0,8
tick,0x7ff999646dc4,137669349,0,0x0,8
tick,0x7ff999646dc4,137684529,0,0x0,8
tick,0x7ff999646dc4,137699871,0,0x0,8
tick,0x7ff999646dc4,137715062,0,0x0,8
tick,0x7ff999646dc4,137730249,0,0x0,8
tick,0x7ff999646dc4,137745514,0,0x0,8
tick,0x7ff999646dc4,137761711,0,0x0,8
tick,0x7ff999646dc4,137776284,0,0x0,8
tick,0x7ff999646dc4,137791951,0,0x0,8
tick,0x7ff999646dc4,137807439,0,0x0,8
tick,0x7ff999646dc4,137822573,0,0x0,8
tick,0x7ff999646dc4,137837879,0,0x0,8
tick,0x7ff999646dc4,137853087,0,0x0,8
tick,0x7ff999646dc4,137868291,0,0x0,8
tick,0x7ff999646dc4,137884121,0,0x0,8
tick,0x7ff999646dc4,137899652,0,0x0,8
tick,0x7ff999646dc4,137915184,0,0x0,8
tick,0x7ff999646dc4,137930510,0,0x0,8
tick,0x7ff999646dc4,137945850,0,0x0,8
tick,0x7ff999646dc4,137961180,0,0x0,8
tick,0x7ff999646dc4,137976205,0,0x0,8
tick,0x7ff999646dc4,137991618,0,0x0,8
tick,0x7ff999646dc4,138007167,0,0x0,8
tick,0x7ff999646dc4,138022761,0,0x0,8
tick,0x7ff999646dc4,138037977,0,0x0,8
tick,0x7ff999646dc4,138052773,0,0x0,8
tick,0x7ff999646dc4,138068313,0,0x0,8
tick,0x7ff999646dc4,138083841,0,0x0,8
tick,0x7ff999646dc4,138099209,0,0x0,8
tick,0x7ff999646dc4,138114817,0,0x0,8
tick,0x7ff999646dc4,138130468,0,0x0,8
tick,0x7ff999646dc4,138145476,0,0x0,8
tick,0x7ff999646dc4,138161161,0,0x0,8
tick,0x7ff999646dc4,138176327,0,0x0,8
tick,0x7ff999646dc4,138191870,0,0x0,8
tick,0x7ff999646dc4,138207356,0,0x0,8
tick,0x7ff999646dc4,138222593,0,0x0,8
tick,0x7ff999646dc4,138237903,0,0x0,8
tick,0x7ff999646dc4,138253055,0,0x0,8
tick,0x7ff999646dc4,138268161,0,0x0,8
tick,0x7ff999646dc4,138284609,0,0x0,8
tick,0x7ff999646dc4,138299768,0,0x0,8
tick,0x7ff999646dc4,138314591,0,0x0,8
tick,0x7ff999646dc4,138329651,0,0x0,8
tick,0x7ff999646dc4,138345024,0,0x0,8
tick,0x7ff999646dc4,138360809,0,0x0,8
tick,0x7ff999646dc4,138375779,0,0x0,8
tick,0x7ff999646dc4,138391303,0,0x0,8
tick,0x7ff999646dc4,138406382,0,0x0,8
tick,0x7ff999646dc4,138421778,0,0x0,8
tick,0x7ff999646dc4,138436583,0,0x0,8
tick,0x7ff999646dc4,138452326,0,0x0,8
tick,0x7ff999646dc4,138468282,0,0x0,8
tick,0x7ff999646dc4,138483692,0,0x0,8
tick,0x7ff999646dc4,138498453,0,0x0,8
tick,0x7ff999646dc4,138513725,0,0x0,8
tick,0x7ff999646dc4,138529249,0,0x0,8
tick,0x7ff999646dc4,138544417,0,0x0,8
tick,0x7ff999646dc4,138559316,0,0x0,8
tick,0x7ff999646dc4,138575021,0,0x0,8
tick,0x7ff999646dc4,138590286,0,0x0,8
tick,0x7ff999646dc4,138605500,0,0x0,8
tick,0x7ff999646dc4,138621133,0,0x0,8
tick,0x7ff999646dc4,138635905,0,0x0,8
tick,0x7ff999646dc4,138651594,0,0x0,8
tick,0x7ff999646dc4,138666838,0,0x0,8
tick,0x7ff999646dc4,138682207,0,0x0,8
tick,0x7ff999646dc4,138697812,0,0x0,8
tick,0x7ff999646dc4,138712866,0,0x0,8
tick,0x7ff999646dc4,138727820,0,0x0,8
tick,0x7ff999646dc4,138743383,0,0x0,8
tick,0x7ff999646dc4,138758752,0,0x0,8
tick,0x7ff999646dc4,138773894,0,0x0,8
tick,0x7ff999646dc4,138789130,0,0x0,8
tick,0x7ff999646dc4,138804324,0,0x0,8
tick,0x7ff999646dc4,138819841,0,0x0,8
tick,0x7ff999646dc4,138835110,0,0x0,8
tick,0x7ff999646dc4,138850312,0,0x0,8
tick,0x7ff999646dc4,138865675,0,0x0,8
tick,0x7ff999646dc4,138881816,0,0x0,8
tick,0x7ff999646dc4,138896502,0,0x0,8
tick,0x7ff999646dc4,138911829,0,0x0,8
tick,0x7ff999646dc4,138927651,0,0x0,8
tick,0x7ff999646dc4,138941830,0,0x0,8
tick,0x7ff999646dc4,138957238,0,0x0,8
tick,0x7ff999646dc4,138972345,0,0x0,8
tick,0x7ff999646dc4,138987526,0,0x0,8
tick,0x7ff999646dc4,139003004,0,0x0,8
tick,0x7ff999646dc4,139017994,0,0x0,8
tick,0x7ff999646dc4,139033314,0,0x0,8
tick,0x7ff999646dc4,139048895,0,0x0,8
tick,0x7ff999646dc4,139064140,0,0x0,8
tick,0x7ff999646dc4,139079459,0,0x0,8
tick,0x7ff999646dc4,139095280,0,0x0,8
tick,0x7ff999646dc4,139110348,0,0x0,8
tick,0x7ff999646dc4,139125909,0,0x0,8
tick,0x7ff999646dc4,139141863,0,0x0,8
tick,0x7ff999646dc4,139156375,0,0x0,8
tick,0x7ff999646dc4,139171841,0,0x0,8
tick,0x7ff999646dc4,139186766,0,0x0,8
tick,0x7ff999646dc4,139202035,0,0x0,8
tick,0x7ff999646dc4,139217315,0,0x0,8
tick,0x7ff999646dc4,139232549,0,0x0,8
tick,0x7ff999646dc4,139248022,0,0x0,8
tick,0x7ff999646dc4,139263139,0,0x0,8
tick,0x7ff999646dc4,139278360,0,0x0,8
tick,0x7ff999646dc4,139293682,0,0x0,8
tick,0x7ff999646dc4,139309091,0,0x0,8
tick,0x7ff999646dc4,139324222,0,0x0,8
tick,0x7ff999646dc4,139339621,0,0x0,8
tick,0x7ff999646dc4,139354838,0,0x0,8
tick,0x7ff999646dc4,139370146,0,0x0,8
tick,0x7ff999646dc4,139385854,0,0x0,8
tick,0x7ff999646dc4,139402084,0,0x0,8
tick,0x7ff999646dc4,139416609,0,0x0,8
tick,0x7ff999646dc4,139432045,0,0x0,8
tick,0x7ff999646dc4,139447622,0,0x0,8
tick,0x7ff999646dc4,139463125,0,0x0,8
tick,0x7ff999646dc4,139478213,0,0x0,8
tick,0x7ff999646dc4,139493692,0,0x0,8
tick,0x7ff999646dc4,139509122,0,0x0,8
tick,0x7ff999646dc4,139525032,0,0x0,8
tick,0x7ff999646dc4,139540026,0,0x0,8
tick,0x7ff999646dc4,139555548,0,0x0,8
tick,0x7ff999646dc4,139571145,0,0x0,8
tick,0x7ff999646dc4,139586511,0,0x0,8
tick,0x7ff999646dc4,139602229,0,0x0,8
tick,0x7ff999646dc4,139617453,0,0x0,8
tick,0x7ff999646dc4,139632774,0,0x0,8
tick,0x7ff999646dc4,139647863,0,0x0,8
tick,0x7ff999646dc4,139663184,0,0x0,8
tick,0x7ff999646dc4,139678598,0,0x0,8
tick,0x7ff999646dc4,139693584,0,0x0,8
tick,0x7ff999646dc4,139709218,0,0x0,8
tick,0x7ff999646dc4,139724003,0,0x0,8
tick,0x7ff999646dc4,139739419,0,0x0,8
tick,0x7ff999646dc4,139754799,0,0x0,8
tick,0x7ff999646dc4,139770022,0,0x0,8
tick,0x7ff999646dc4,139785712,0,0x0,8
tick,0x7ff999646dc4,139800473,0,0x0,8
tick,0x7ff999646dc4,139815725,0,0x0,8
tick,0x7ff999646dc4,139831276,0,0x0,8
tick,0x7ff999646dc4,139847361,0,0x0,8
tick,0x7ff999646dc4,139862309,0,0x0,8
tick,0x7ff999646dc4,139877728,0,0x0,8
tick,0x7ff999646dc4,139893001,0,0x0,8
tick,0x7ff999646dc4,139908367,0,0x0,8
tick,0x7ff999646dc4,139923553,0,0x0,8
tick,0x7ff999646dc4,139938645,0,0x0,8
tick,0x7ff999646dc4,139954311,0,0x0,8
tick,0x7ff999646dc4,139969592,0,0x0,8
tick,0x7ff999646dc4,139984959,0,0x0,8
tick,0x7ff999646dc4,140000465,0,0x0,8
tick,0x7ff999646dc4,140015651,0,0x0,8
tick,0x7ff999646dc4,140030827,0,0x0,8
tick,0x7ff999646dc4,140046163,0,0x0,8
tick,0x7ff999646dc4,140061329,0,0x0,8
tick,0x7ff999646dc4,140076431,0,0x0,8
tick,0x7ff999646dc4,140091833,0,0x0,8
tick,0x7ff999646dc4,140107417,0,0x0,8
tick,0x7ff999646dc4,140122762,0,0x0,8
tick,0x7ff999646dc4,140138564,0,0x0,8
tick,0x7ff999646dc4,140153615,0,0x0,8
tick,0x7ff999646dc4,140168896,0,0x0,8
tick,0x7ff999646dc4,140184447,0,0x0,8
tick,0x7ff999646dc4,140199355,0,0x0,8
tick,0x7ff999646dc4,140214913,0,0x0,8
tick,0x7ff999646dc4,140230426,0,0x0,8
tick,0x7ff999646dc4,140245925,0,0x0,8
tick,0x7ff999646dc4,140260913,0,0x0,8
tick,0x7ff999646dc4,140275856,0,0x0,8
tick,0x7ff999646dc4,140291380,0,0x0,8
tick,0x7ff999646dc4,140306655,0,0x0,8
tick,0x7ff999646dc4,140322259,0,0x0,8
tick,0x7ff999646dc4,140338104,0,0x0,8
tick,0x7ff999646dc4,140353321,0,0x0,8
tick,0x7ff999646dc4,140368221,0,0x0,8
tick,0x7ff999646dc4,140383596,0,0x0,8
tick,0x7ff999646dc4,140399032,0,0x0,8
tick,0x7ff999646dc4,140414562,0,0x0,8
tick,0x7ff999646dc4,140429781,0,0x0,8
tick,0x7ff999646dc4,140445159,0,0x0,8
tick,0x7ff999646dc4,140460764,0,0x0,8
tick,0x7ff999646dc4,140476131,0,0x0,8
tick,0x7ff999646dc4,140491977,0,0x0,8
tick,0x7ff999646dc4,140507060,0,0x0,8
tick,0x7ff999646dc4,140522155,0,0x0,8
tick,0x7ff999646dc4,140537576,0,0x0,8
tick,0x7ff999646dc4,140553211,0,0x0,8
tick,0x7ff999646dc4,140568379,0,0x0,8
tick,0x7ff999646dc4,140583982,0,0x0,8
tick,0x7ff999646dc4,140599432,0,0x0,8
tick,0x7ff999646dc4,140614798,0,0x0,8
tick,0x7ff999646dc4,140629525,0,0x0,8
tick,0x7ff999646dc4,140645036,0,0x0,8
tick,0x7ff999646dc4,140660361,0,0x0,8
tick,0x7ff999646dc4,140675781,0,0x0,8
tick,0x7ff999646dc4,140690773,0,0x0,8
tick,0x7ff999646dc4,140706339,0,0x0,8
tick,0x7ff999646dc4,140721550,0,0x0,8
tick,0x7ff999646dc4,140736851,0,0x0,8
tick,0x7ff999646dc4,140752273,0,0x0,8
tick,0x7ff999646dc4,140767702,0,0x0,8
tick,0x7ff999646dc4,140783173,0,0x0,8
tick,0x7ff999646dc4,140798583,0,0x0,8
tick,0x7ff999646dc4,140813778,0,0x0,8
tick,0x7ff999646dc4,140829181,0,0x0,8
tick,0x7ff999646dc4,140844446,0,0x0,8
tick,0x7ff999646dc4,140859747,0,0x0,8
tick,0x7ff999646dc4,140875159,0,0x0,8
tick,0x7ff999646dc4,140890419,0,0x0,8
tick,0x7ff999646dc4,140906143,0,0x0,8
tick,0x7ff999646dc4,140921409,0,0x0,8
tick,0x7ff999646dc4,140936726,0,0x0,8
tick,0x7ff999646dc4,140951956,0,0x0,8
tick,0x7ff999646dc4,140967463,0,0x0,8
tick,0x7ff999646dc4,140982862,0,0x0,8
tick,0x7ff999646dc4,140997902,0,0x0,8
tick,0x7ff999646dc4,141013104,0,0x0,8
tick,0x7ff999646dc4,141028442,0,0x0,8
tick,0x7ff999646dc4,141043741,0,0x0,8
tick,0x7ff999646dc4,141059037,0,0x0,8
tick,0x7ff999646dc4,141073799,0,0x0,8
tick,0x7ff999646dc4,141089566,0,0x0,8
tick,0x7ff999646dc4,141105144,0,0x0,8
tick,0x7ff999646dc4,141120679,0,0x0,8
tick,0x7ff999646dc4,141136340,0,0x0,8
tick,0x7ff999646dc4,141151704,0,0x0,8
tick,0x7ff999646dc4,141166842,0,0x0,8
tick,0x7ff999646dc4,141182392,0,0x0,8
tick,0x7ff999646dc4,141198024,0,0x0,8
tick,0x7ff999646dc4,141212995,0,0x0,8
tick,0x7ff999646dc4,141228417,0,0x0,8
tick,0x7ff999646dc4,141242992,0,0x0,8
tick,0x7ff999646dc4,141258458,0,0x0,8
tick,0x7ff999646dc4,141273782,0,0x0,8
tick,0x7ff999646dc4,141289010,0,0x0,8
tick,0x7ff999646dc4,141304361,0,0x0,8
tick,0x7ff999646dc4,141319483,0,0x0,8
tick,0x7ff999646dc4,141334852,0,0x0,8
tick,0x7ff999646dc4,141350205,0,0x0,8
tick,0x7ff999646dc4,141365541,0,0x0,8
tick,0x7ff999646dc4,141380723,0,0x0,8
tick,0x7ff999646dc4,141396258,0,0x0,8
tick,0x7ff999646dc4,141411398,0,0x0,8
tick,0x7ff999646dc4,141426825,0,0x0,8
tick,0x7ff999646dc4,141441925,0,0x0,8
tick,0x7ff999646dc4,141457054,0,0x0,8
tick,0x7ff999646dc4,141472748,0,0x0,8
tick,0x7ff999646dc4,141488036,0,0x0,8
tick,0x7ff999646dc4,141503917,0,0x0,8
tick,0x7ff999646dc4,141518816,0,0x0,8
tick,0x7ff999646dc4,141533983,0,0x0,8
tick,0x7ff999646dc4,141549553,0,0x0,8
tick,0x7ff999646dc4,141564870,0,0x0,8
tick,0x7ff999646dc4,141580080,0,0x0,8
tick,0x7ff999646dc4,141595222,0,0x0,8
tick,0x7ff999646dc4,141610475,0,0x0,8
tick,0x7ff999646dc4,141625974,0,0x0,8
tick,0x7ff999646dc4,141641481,0,0x0,8
tick,0x7ff999646dc4,141656823,0,0x0,8
tick,0x7ff999646dc4,141672202,0,0x0,8
tick,0x7ff999646dc4,141687271,0,0x0,8
tick,0x7ff999646dc4,141702756,0,0x0,8
tick,0x7ff999646dc4,141717695,0,0x0,8
tick,0x7ff999646dc4,141733334,0,0x0,8
tick,0x7ff999646dc4,141748962,0,0x0,8
tick,0x7ff999646dc4,141764229,0,0x0,8
tick,0x7ff999646dc4,141779905,0,0x0,8
tick,0x7ff999646dc4,141795007,0,0x0,8
tick,0x7ff999646dc4,141810095,0,0x0,8
tick,0x7ff999646dc4,141825737,0,0x0,8
tick,0x7ff999646dc4,141841037,0,0x0,8
tick,0x7ff999646dc4,141856266,0,0x0,8
tick,0x7ff999646dc4,141871603,0,0x0,8
tick,0x7ff999646dc4,141887034,0,0x0,8
tick,0x7ff999646dc4,141902556,0,0x0,8
tick,0x7ff999646dc4,141917923,0,0x0,8
tick,0x7ff999646dc4,141933158,0,0x0,8
tick,0x7ff999646dc4,141948141,0,0x0,8
tick,0x7ff999646dc4,141963505,0,0x0,8
tick,0x7ff999646dc4,141978210,0,0x0,8
tick,0x7ff999646dc4,141993740,0,0x0,8
tick,0x7ff999646dc4,142008603,0,0x0,8
tick,0x7ff999646dc4,142023710,0,0x0,8
tick,0x7ff999646dc4,142038596,0,0x0,8
tick,0x7ff999646dc4,142053967,0,0x0,8
tick,0x7ff999646dc4,142069203,0,0x0,8
tick,0x7ff999646dc4,142084382,0,0x0,8
tick,0x7ff999646dc4,142099735,0,0x0,8
tick,0x7ff999646dc4,142115303,0,0x0,8
tick,0x7ff999646dc4,142130767,0,0x0,8
tick,0x7ff999646dc4,142145872,0,0x0,8
tick,0x7ff999646dc4,142161296,0,0x0,8
tick,0x7ff999646dc4,142176988,0,0x0,8
tick,0x7ff999646dc4,142192650,0,0x0,8
tick,0x7ff999646dc4,142208335,0,0x0,8
tick,0x7ff999646dc4,142223676,0,0x0,8
tick,0x7ff999646dc4,142238458,0,0x0,8
tick,0x7ff999646dc4,142254052,0,0x0,8
tick,0x7ff999646dc4,142269666,0,0x0,8
tick,0x7ff999646dc4,142284795,0,0x0,8
tick,0x7ff999646dc4,142300499,0,0x0,8
tick,0x7ff999646dc4,142315653,0,0x0,8
tick,0x7ff999646dc4,142330890,0,0x0,8
tick,0x7ff999646dc4,142346412,0,0x0,8
tick,0x7ff999646dc4,142361784,0,0x0,8
tick,0x7ff999646dc4,142377213,0,0x0,8
tick,0x7ff999646dc4,142392922,0,0x0,8
tick,0x7ff999646dc4,142407859,0,0x0,8
tick,0x7ff999646dc4,142423318,0,0x0,8
tick,0x7ff999646dc4,142438205,0,0x0,8
tick,0x7ff999646dc4,142453467,0,0x0,8
tick,0x7ff999646dc4,142468338,0,0x0,8
tick,0x7ff999646dc4,142483816,0,0x0,8
tick,0x7ff999646dc4,142499328,0,0x0,8
tick,0x7ff999646dc4,142514405,0,0x0,8
tick,0x7ff999646dc4,142529558,0,0x0,8
tick,0x7ff999646dc4,142544922,0,0x0,8
tick,0x7ff999646dc4,142560272,0,0x0,8
tick,0x7ff999646dc4,142576148,0,0x0,8
tick,0x7ff999646dc4,142591702,0,0x0,8
tick,0x7ff999646dc4,142606424,0,0x0,8
tick,0x7ff999646dc4,142622018,0,0x0,8
tick,0x7ff999646dc4,142637457,0,0x0,8
tick,0x7ff999646dc4,142652758,0,0x0,8
tick,0x7ff999646dc4,142668058,0,0x0,8
tick,0x7ff999646dc4,142683111,0,0x0,8
tick,0x7ff999646dc4,142698663,0,0x0,8
tick,0x7ff999646dc4,142714307,0,0x0,8
tick,0x7ff999646dc4,142729881,0,0x0,8
tick,0x7ff999646dc4,142744610,0,0x0,8
tick,0x7ff999646dc4,142759881,0,0x0,8
tick,0x7ff999646dc4,142775339,0,0x0,8
tick,0x7ff999646dc4,142792573,0,0x0,8
tick,0x7ff999646dc4,142806304,0,0x0,8
tick,0x7ff999646dc4,142821666,0,0x0,8
tick,0x7ff999646dc4,142837260,0,0x0,8
tick,0x7ff999646dc4,142852590,0,0x0,8
tick,0x7ff999646dc4,142868047,0,0x0,8
tick,0x7ff999646dc4,142882974,0,0x0,8
tick,0x7ff999646dc4,142898355,0,0x0,8
tick,0x7ff999646dc4,142913607,0,0x0,8
tick,0x7ff999646dc4,142929109,0,0x0,8
tick,0x7ff999646dc4,142944695,0,0x0,8
tick,0x7ff999646dc4,142959800,0,0x0,8
tick,0x7ff999646dc4,142975565,0,0x0,8
tick,0x7ff999646dc4,142990314,0,0x0,8
tick,0x7ff999646dc4,143005887,0,0x0,8
tick,0x7ff999646dc4,143021163,0,0x0,8
tick,0x7ff999646dc4,143036305,0,0x0,8
tick,0x7ff999646dc4,143051796,0,0x0,8
tick,0x7ff999646dc4,143066968,0,0x0,8
tick,0x7ff999646dc4,143082452,0,0x0,8
tick,0x7ff999646dc4,143097600,0,0x0,8
tick,0x7ff999646dc4,143112749,0,0x0,8
tick,0x7ff999646dc4,143128201,0,0x0,8
tick,0x7ff999646dc4,143143992,0,0x0,8
tick,0x7ff999646dc4,143159478,0,0x0,8
tick,0x7ff999646dc4,143175212,0,0x0,8
tick,0x7ff999646dc4,143190387,0,0x0,8
tick,0x7ff999646dc4,143205498,0,0x0,8
tick,0x7ff999646dc4,143220895,0,0x0,8
tick,0x7ff999646dc4,143236194,0,0x0,8
tick,0x7ff999646dc4,143251533,0,0x0,8
tick,0x7ff999646dc4,143267091,0,0x0,8
tick,0x7ff999646dc4,143282595,0,0x0,8
tick,0x7ff999646dc4,143298082,0,0x0,8
tick,0x7ff999646dc4,143313713,0,0x0,8
tick,0x7ff999646dc4,143328773,0,0x0,8
tick,0x7ff999646dc4,143344055,0,0x0,8
tick,0x7ff999646dc4,143359728,0,0x0,8
tick,0x7ff999646dc4,143374761,0,0x0,8
tick,0x7ff999646dc4,143390572,0,0x0,8
tick,0x7ff999646dc4,143405511,0,0x0,8
tick,0x7ff999646dc4,143420861,0,0x0,8
tick,0x7ff999646dc4,143436810,0,0x0,8
tick,0x7ff999646dc4,143451757,0,0x0,8
tick,0x7ff999646dc4,143467043,0,0x0,8
tick,0x7ff999646dc4,143482268,0,0x0,8
tick,0x7ff999646dc4,143497557,0,0x0,8
tick,0x7ff999646dc4,143513269,0,0x0,8
tick,0x7ff999646dc4,143529025,0,0x0,8
tick,0x7ff999646dc4,143543913,0,0x0,8
tick,0x7ff999646dc4,143559236,0,0x0,8
tick,0x7ff999646dc4,143575296,0,0x0,8
tick,0x7ff999646dc4,143590253,0,0x0,8
tick,0x7ff999646dc4,143605266,0,0x0,8
tick,0x7ff999646dc4,143620264,0,0x0,8
tick,0x7ff999646dc4,143635432,0,0x0,8
tick,0x7ff999646dc4,143651100,0,0x0,8
tick,0x7ff999646dc4,143666334,0,0x0,8
tick,0x7ff999646dc4,143681725,0,0x0,8
tick,0x7ff999646dc4,143697094,0,0x0,8
tick,0x7ff999646dc4,143712359,0,0x0,8
tick,0x7ff999646dc4,143727791,0,0x0,8
tick,0x7ff999646dc4,143742793,0,0x0,8
tick,0x7ff999646dc4,143758238,0,0x0,8
tick,0x7ff999646dc4,143773480,0,0x0,8
tick,0x7ff999646dc4,143788804,0,0x0,8
tick,0x7ff999646dc4,143804750,0,0x0,8
tick,0x7ff999646dc4,143819635,0,0x0,8
tick,0x7ff999646dc4,143835547,0,0x0,8
tick,0x7ff999646dc4,143850536,0,0x0,8
tick,0x7ff999646dc4,143865876,0,0x0,8
tick,0x7ff999646dc4,143881184,0,0x0,8
tick,0x7ff999646dc4,143896885,0,0x0,8
tick,0x7ff999646dc4,143912513,0,0x0,8
tick,0x7ff999646dc4,143928050,0,0x0,8
tick,0x7ff999646dc4,143943235,0,0x0,8
tick,0x7ff999646dc4,143958763,0,0x0,8
tick,0x7ff999646dc4,143973840,0,0x0,8
tick,0x7ff999646dc4,143989385,0,0x0,8
tick,0x7ff999646dc4,144004848,0,0x0,8
tick,0x7ff999646dc4,144020461,0,0x0,8
tick,0x7ff999646dc4,144035543,0,0x0,8
tick,0x7ff999646dc4,144050772,0,0x0,8
tick,0x7ff999646dc4,144065950,0,0x0,8
tick,0x7ff999646dc4,144081324,0,0x0,8
tick,0x7ff999646dc4,144096918,0,0x0,8
tick,0x7ff999646dc4,144111709,0,0x0,8
tick,0x7ff999646dc4,144127205,0,0x0,8
tick,0x7ff999646dc4,144142939,0,0x0,8
tick,0x7ff999646dc4,144158221,0,0x0,8
tick,0x7ff999646dc4,144173775,0,0x0,8
tick,0x7ff999646dc4,144188628,0,0x0,8
tick,0x7ff999646dc4,144203855,0,0x0,8
tick,0x7ff999646dc4,144219459,0,0x0,8
tick,0x7ff999646dc4,144234770,0,0x0,8
tick,0x7ff999646dc4,144250212,0,0x0,8
tick,0x7ff999646dc4,144265916,0,0x0,8
tick,0x7ff999646dc4,144280603,0,0x0,8
tick,0x7ff999646dc4,144296039,0,0x0,8
tick,0x7ff999646dc4,144311337,0,0x0,8
tick,0x7ff999646dc4,144326548,0,0x0,8
tick,0x7ff999646dc4,144341685,0,0x0,8
tick,0x7ff999646dc4,144357355,0,0x0,8
tick,0x7ff999646dc4,144372528,0,0x0,8
tick,0x7ff999646dc4,144387995,0,0x0,8
tick,0x7ff999646dc4,144403716,0,0x0,8
tick,0x7ff999646dc4,144418169,0,0x0,8
tick,0x7ff999646dc4,144433563,0,0x0,8
tick,0x7ff999646dc4,144449055,0,0x0,8
tick,0x7ff999646dc4,144464046,0,0x0,8
tick,0x7ff999646dc4,144479527,0,0x0,8
tick,0x7ff999646dc4,144494744,0,0x0,8
tick,0x7ff999646dc4,144510444,0,0x0,8
tick,0x7ff999646dc4,144525940,0,0x0,8
tick,0x7ff999646dc4,144541876,0,0x0,8
tick,0x7ff999646dc4,144556424,0,0x0,8
tick,0x7ff999646dc4,144572076,0,0x0,8
tick,0x7ff999646dc4,144587147,0,0x0,8
tick,0x7ff999646dc4,144602455,0,0x0,8
tick,0x7ff999646dc4,144617724,0,0x0,8
tick,0x7ff999646dc4,144632970,0,0x0,8
tick,0x7ff999646dc4,144648225,0,0x0,8
tick,0x7ff999646dc4,144663519,0,0x0,8
tick,0x7ff999646dc4,144679337,0,0x0,8
tick,0x7ff999646dc4,144694431,0,0x0,8
tick,0x7ff999646dc4,144709655,0,0x0,8
tick,0x7ff999646dc4,144725324,0,0x0,8
tick,0x7ff999646dc4,144741070,0,0x0,8
tick,0x7ff999646dc4,144756108,0,0x0,8
tick,0x7ff999646dc4,144770774,0,0x0,8
tick,0x7ff999646dc4,144786222,0,0x0,8
tick,0x7ff999646dc4,144801648,0,0x0,8
tick,0x7ff999646dc4,144817067,0,0x0,8
tick,0x7ff999646dc4,144832086,0,0x0,8
tick,0x7ff999646dc4,144847350,0,0x0,8
tick,0x7ff999646dc4,144862752,0,0x0,8
tick,0x7ff999646dc4,144878573,0,0x0,8
tick,0x7ff999646dc4,144893613,0,0x0,8
tick,0x7ff999646dc4,144908982,0,0x0,8
tick,0x7ff999646dc4,144924566,0,0x0,8
tick,0x7ff999646dc4,144940060,0,0x0,8
tick,0x7ff999646dc4,144955536,0,0x0,8
tick,0x7ff999646dc4,144970626,0,0x0,8
tick,0x7ff999646dc4,144986056,0,0x0,8
tick,0x7ff999646dc4,145001691,0,0x0,8
tick,0x7ff999646dc4,145016610,0,0x0,8
tick,0x7ff999646dc4,145032407,0,0x0,8
tick,0x7ff999646dc4,145047790,0,0x0,8
tick,0x7ff999646dc4,145062821,0,0x0,8
tick,0x7ff999646dc4,145077924,0,0x0,8
tick,0x7ff999646dc4,145093079,0,0x0,8
tick,0x7ff999646dc4,145108878,0,0x0,8
tick,0x7ff999646dc4,145124232,0,0x0,8
tick,0x7ff999646dc4,145140421,0,0x0,8
tick,0x7ff999646dc4,145155132,0,0x0,8
tick,0x7ff999646dc4,145170320,0,0x0,8
tick,0x7ff999646dc4,145185992,0,0x0,8
tick,0x7ff999646dc4,145201103,0,0x0,8
tick,0x7ff999646dc4,145217073,0,0x0,8
tick,0x7ff999646dc4,145232048,0,0x0,8
tick,0x7ff999646dc4,145248671,0,0x0,8
tick,0x7ff999646dc4,145262831,0,0x0,8
tick,0x7ff999646dc4,145278078,0,0x0,8
tick,0x7ff999646dc4,145293160,0,0x0,8
tick,0x7ff999646dc4,145308433,0,0x0,8
tick,0x7ff999646dc4,145324066,0,0x0,8
tick,0x7ff999646dc4,145339109,0,0x0,8
tick,0x7ff999646dc4,145354666,0,0x0,8
tick,0x7ff999646dc4,145369669,0,0x0,8
tick,0x7ff999646dc4,145385038,0,0x0,8
tick,0x7ff999646dc4,145400533,0,0x0,8
tick,0x7ff999646dc4,145415794,0,0x0,8
tick,0x7ff999646dc4,145431140,0,0x0,8
tick,0x7ff999646dc4,145446418,0,0x0,8
tick,0x7ff999646dc4,145461854,0,0x0,8
tick,0x7ff999646dc4,145477276,0,0x0,8
tick,0x7ff999646dc4,145492734,0,0x0,8
tick,0x7ff999646dc4,145508086,0,0x0,8
tick,0x7ff999646dc4,145523634,0,0x0,8
tick,0x7ff999646dc4,145539171,0,0x0,8
tick,0x7ff999646dc4,145554681,0,0x0,8
tick,0x7ff999646dc4,145569258,0,0x0,8
tick,0x7ff999646dc4,145584466,0,0x0,8
tick,0x7ff999646dc4,145599863,0,0x0,8
tick,0x7ff999646dc4,145615524,0,0x0,8
tick,0x7ff999646dc4,145630852,0,0x0,8
tick,0x7ff999646dc4,145646087,0,0x0,8
tick,0x7ff999646dc4,145661620,0,0x0,8
tick,0x7ff999646dc4,145676723,0,0x0,8
tick,0x7ff999646dc4,145692020,0,0x0,8
tick,0x7ff999646dc4,145707410,0,0x0,8
tick,0x7ff999646dc4,145722662,0,0x0,8
tick,0x7ff999646dc4,145737944,0,0x0,8
tick,0x7ff999646dc4,145753221,0,0x0,8
tick,0x7ff999646dc4,145768788,0,0x0,8
tick,0x7ff999646dc4,145784215,0,0x0,8
tick,0x7ff999646dc4,145799317,0,0x0,8
tick,0x7ff999646dc4,145814792,0,0x0,8
tick,0x7ff999646dc4,145830449,0,0x0,8
tick,0x7ff999646dc4,145845759,0,0x0,8
tick,0x7ff999646dc4,145861019,0,0x0,8
tick,0x7ff999646dc4,145876283,0,0x0,8
tick,0x7ff999646dc4,145891618,0,0x0,8
tick,0x7ff999646dc4,145906827,0,0x0,8
tick,0x7ff999646dc4,145922382,0,0x0,8
tick,0x7ff999646dc4,145937450,0,0x0,8
tick,0x7ff999646dc4,145953035,0,0x0,8
tick,0x7ff999646dc4,145968466,0,0x0,8
tick,0x7ff999646dc4,145983786,0,0x0,8
tick,0x7ff999646dc4,145999191,0,0x0,8
tick,0x7ff999646dc4,146014627,0,0x0,8
tick,0x7ff999646dc4,146029926,0,0x0,8
tick,0x7ff999646dc4,146045531,0,0x0,8
tick,0x7ff999646dc4,146060939,0,0x0,8
tick,0x7ff999646dc4,146076611,0,0x0,8
tick,0x7ff999646dc4,146091917,0,0x0,8
tick,0x7ff999646dc4,146107176,0,0x0,8
tick,0x7ff999646dc4,146122789,0,0x0,8
tick,0x7ff999646dc4,146138326,0,0x0,8
tick,0x7ff999646dc4,146153431,0,0x0,8
tick,0x7ff999646dc4,146168621,0,0x0,8
tick,0x7ff999646dc4,146184094,0,0x0,8
tick,0x7ff999646dc4,146199525,0,0x0,8
tick,0x7ff999646dc4,146214931,0,0x0,8
tick,0x7ff999646dc4,146230304,0,0x0,8
tick,0x7ff999646dc4,146245833,0,0x0,8
tick,0x7ff999646dc4,146261218,0,0x0,8
tick,0x7ff999646dc4,146276672,0,0x0,8
tick,0x7ff999646dc4,146291742,0,0x0,8
tick,0x7ff999646dc4,146306682,0,0x0,8
tick,0x7ff999646dc4,146322047,0,0x0,8
tick,0x7ff999646dc4,146337416,0,0x0,8
tick,0x7ff999646dc4,146352941,0,0x0,8
tick,0x7ff999646dc4,146368118,0,0x0,8
tick,0x7ff999646dc4,146383433,0,0x0,8
tick,0x7ff999646dc4,146399042,0,0x0,8
tick,0x7ff999646dc4,146414339,0,0x0,8
tick,0x7ff999646dc4,146429731,0,0x0,8
tick,0x7ff999646dc4,146444985,0,0x0,8
tick,0x7ff999646dc4,146460045,0,0x0,8
tick,0x7ff999646dc4,146475648,0,0x0,8
tick,0x7ff999646dc4,146491419,0,0x0,8
tick,0x7ff999646dc4,146506903,0,0x0,8
tick,0x7ff999646dc4,146521823,0,0x0,8
tick,0x7ff999646dc4,146537369,0,0x0,8
tick,0x7ff999646dc4,146552472,0,0x0,8
tick,0x7ff999646dc4,146568393,0,0x0,8
tick,0x7ff999646dc4,146583090,0,0x0,8
tick,0x7ff999646dc4,146598276,0,0x0,8
tick,0x7ff999646dc4,146613516,0,0x0,8
tick,0x7ff999646dc4,146628940,0,0x0,8
tick,0x7ff999646dc4,146644035,0,0x0,8
tick,0x7ff999646dc4,146659216,0,0x0,8
tick,0x7ff999646dc4,146674842,0,0x0,8
tick,0x7ff999646dc4,146690372,0,0x0,8
tick,0x7ff999646dc4,146705404,0,0x0,8
tick,0x7ff999646dc4,146720781,0,0x0,8
tick,0x7ff999646dc4,146737282,0,0x0,8
tick,0x7ff999646dc4,146751454,0,0x0,8
tick,0x7ff999646dc4,146766821,0,0x0,8
tick,0x7ff999646dc4,146781706,0,0x0,8
tick,0x7ff999646dc4,146797919,0,0x0,8
tick,0x7ff999646dc4,146813534,0,0x0,8
tick,0x7ff999646dc4,146828252,0,0x0,8
tick,0x7ff999646dc4,146843243,0,0x0,8
tick,0x7ff999646dc4,146858464,0,0x0,8
tick,0x7ff999646dc4,146873651,0,0x0,8
tick,0x7ff999646dc4,146889111,0,0x0,8
tick,0x7ff999646dc4,146904362,0,0x0,8
tick,0x7ff999646dc4,146920001,0,0x0,8
tick,0x7ff999646dc4,146935247,0,0x0,8
tick,0x7ff999646dc4,146950459,0,0x0,8
tick,0x7ff999646dc4,146966169,0,0x0,8
tick,0x7ff999646dc4,146981636,0,0x0,8
tick,0x7ff999646dc4,146997262,0,0x0,8
tick,0x7ff999646dc4,147012819,0,0x0,8
tick,0x7ff999646dc4,147027888,0,0x0,8
tick,0x7ff999646dc4,147043318,0,0x0,8
tick,0x7ff999646dc4,147058646,0,0x0,8
tick,0x7ff999646dc4,147074084,0,0x0,8
tick,0x7ff999646dc4,147089390,0,0x0,8
tick,0x7ff999646dc4,147104571,0,0x0,8
tick,0x7ff999646dc4,147119871,0,0x0,8
tick,0x7ff999646dc4,147134550,0,0x0,8
tick,0x7ff999646dc4,147150086,0,0x0,8
tick,0x7ff999646dc4,147165580,0,0x0,8
tick,0x7ff999646dc4,147181681,0,0x0,8
tick,0x7ff999646dc4,147196457,0,0x0,8
tick,0x7ff999646dc4,147211426,0,0x0,8
tick,0x7ff999646dc4,147226945,0,0x0,8
tick,0x7ff999646dc4,147242112,0,0x0,8
tick,0x7ff999646dc4,147257631,0,0x0,8
tick,0x7ff999646dc4,147273521,0,0x0,8
tick,0x7ff999646dc4,147289456,0,0x0,8
tick,0x7ff999646dc4,147303859,0,0x0,8
tick,0x7ff999646dc4,147318844,0,0x0,8
tick,0x7ff999646dc4,147335158,0,0x0,8
tick,0x7ff999646dc4,147349625,0,0x0,8
tick,0x7ff999646dc4,147364515,0,0x0,8
tick,0x7ff999646dc4,147379576,0,0x0,8
tick,0x7ff999646dc4,147394933,0,0x0,8
tick,0x7ff999646dc4,147410587,0,0x0,8
tick,0x7ff999646dc4,147426081,0,0x0,8
tick,0x7ff999646dc4,147440835,0,0x0,8
tick,0x7ff999646dc4,147456046,0,0x0,8
tick,0x7ff999646dc4,147471619,0,0x0,8
tick,0x7ff999646dc4,147487104,0,0x0,8
tick,0x7ff999646dc4,147502559,0,0x0,8
tick,0x7ff999646dc4,147517458,0,0x0,8
tick,0x7ff999646dc4,147532698,0,0x0,8
tick,0x7ff999646dc4,147548399,0,0x0,8
tick,0x7ff999646dc4,147563821,0,0x0,8
tick,0x7ff999646dc4,147580552,0,0x0,8
tick,0x7ff999646dc4,147594281,0,0x0,8
tick,0x7ff999646dc4,147609780,0,0x0,8
tick,0x7ff999646dc4,147625665,0,0x0,8
tick,0x7ff999646dc4,147640698,0,0x0,8
tick,0x7ff999646dc4,147655798,0,0x0,8
tick,0x7ff999646dc4,147670903,0,0x0,8
tick,0x7ff999646dc4,147686402,0,0x0,8
tick,0x7ff999646dc4,147702006,0,0x0,8
tick,0x7ff999646dc4,147716937,0,0x0,8
tick,0x7ff999646dc4,147732132,0,0x0,8
tick,0x7ff999646dc4,147747769,0,0x0,8
tick,0x7ff999646dc4,147762591,0,0x0,8
tick,0x7ff999646dc4,147777479,0,0x0,8
tick,0x7ff999646dc4,147792741,0,0x0,8
tick,0x7ff999646dc4,147808272,0,0x0,8
tick,0x7ff999646dc4,147823639,0,0x0,8
tick,0x7ff999646dc4,147838712,0,0x0,8
tick,0x7ff999646dc4,147853758,0,0x0,8
tick,0x7ff999646dc4,147868999,0,0x0,8
tick,0x7ff999646dc4,147884308,0,0x0,8
tick,0x7ff999646dc4,147899394,0,0x0,8
tick,0x7ff999646dc4,147914697,0,0x0,8
tick,0x7ff999646dc4,147929452,0,0x0,8
tick,0x7ff999646dc4,147944639,0,0x0,8
tick,0x7ff999646dc4,147960015,0,0x0,8
tick,0x7ff999646dc4,147975224,0,0x0,8
tick,0x7ff999646dc4,147990868,0,0x0,8
tick,0x7ff999646dc4,148006360,0,0x0,8
tick,0x7ff999646dc4,148021580,0,0x0,8
tick,0x7ff999646dc4,148036693,0,0x0,8
tick,0x7ff999646dc4,148052282,0,0x0,8
tick,0x7ff999646dc4,148068071,0,0x0,8
tick,0x7ff999646dc4,148082572,0,0x0,8
tick,0x7ff999646dc4,148097792,0,0x0,8
tick,0x7ff999646dc4,148112784,0,0x0,8
tick,0x7ff999646dc4,148128418,0,0x0,8
tick,0x7ff999646dc4,148144355,0,0x0,8
tick,0x7ff999646dc4,148159119,0,0x0,8
tick,0x7ff999646dc4,148175458,0,0x0,8
tick,0x7ff999646dc4,148191925,0,0x0,8
tick,0x7ff999646dc4,148205096,0,0x0,8
tick,0x7ff999646dc4,148221178,0,0x0,8
tick,0x7ff999646dc4,148238600,0,0x0,8
tick,0x7ff999646dc4,148252291,0,0x0,8
tick,0x7ff999646dc4,148271800,0,0x0,8
tick,0x7ff999646dc4,148283241,0,0x0,8
tick,0x7ff999646dc4,148296190,0,0x0,8
tick,0x7ff999646dc4,148312600,0,0x0,8
tick,0x7ff999646dc4,148328098,0,0x0,8
tick,0x7ff999646dc4,148344577,0,0x0,8
tick,0x7ff999646dc4,148360182,0,0x0,8
tick,0x7ff999646dc4,148375694,0,0x0,8
tick,0x7ff999646dc4,148391693,0,0x0,8
tick,0x7ff999646dc4,148405669,0,0x0,8
tick,0x7ff999646dc4,148437111,0,0x0,8
tick,0x7ff999646dc4,148440224,0,0x0,8
tick,0x7ff999646dc4,148454679,0,0x0,8
tick,0x7ff999646dc4,148470192,0,0x0,8
tick,0x7ff999646dc4,148479167,0,0x0,8
tick,0x7ff999646dc4,148494460,0,0x0,8
tick,0x7ff999646dc4,148512310,0,0x0,8
tick,0x7ff999646dc4,148524821,0,0x0,8
tick,0x7ff999646dc4,148540510,0,0x0,8
tick,0x7ff999646dc4,148585889,0,0x0,8
tick,0x7ff999646dc4,148609198,0,0x0,8
tick,0x7ff999646dc4,148619668,0,0x0,8
tick,0x7ff999646dc4,148656291,0,0x0,8
tick,0x7ff999646dc4,148670646,0,0x0,8
tick,0x7ff999646dc4,148679745,0,0x0,8
tick,0x7ff999646dc4,148708255,0,0x0,8
tick,0x7ff999646dc4,148723997,0,0x0,8
tick,0x7ff999646dc4,148739596,0,0x0,8
tick,0x7ff999646dc4,148754134,0,0x0,8
tick,0x7ff999646dc4,148769676,0,0x0,8
tick,0x7ff999646dc4,148785017,0,0x0,8
tick,0x7ff999646dc4,148799556,0,0x0,8
tick,0x7ff999646dc4,148816242,0,0x0,8
tick,0x7ff999646dc4,148839450,0,0x0,8
tick,0x7ff999646dc4,148847060,0,0x0,8
tick,0x7ff999646dc4,148861090,0,0x0,8
tick,0x7ff999646dc4,148878466,0,0x0,8
tick,0x7ff999646dc4,148897159,0,0x0,8
tick,0x7ff999646dc4,148909153,0,0x0,8
tick,0x7ff999646dc4,148923514,0,0x0,8
tick,0x7ff999646dc4,148940689,0,0x0,8
tick,0x7ff999646dc4,148955103,0,0x0,8
tick,0x7ff999646dc4,148972649,0,0x0,8
tick,0x7ff999646dc4,148990684,0,0x0,8
tick,0x7ff999646dc4,149004787,0,0x0,8
tick,0x7ff999646dc4,149019406,0,0x0,8
tick,0x7ff999646dc4,149038000,0,0x0,8
tick,0x7ff999646dc4,149054917,0,0x0,8
tick,0x7ff999646dc4,149061034,0,0x0,8
tick,0x7ff999646dc4,149076551,0,0x0,8
tick,0x7ff999646dc4,149091169,0,0x0,8
tick,0x7ff999646dc4,149106804,0,0x0,8
tick,0x7ff999646dc4,149126911,0,0x0,8
tick,0x7ff999646dc4,149143526,0,0x0,8
tick,0x7ff999646dc4,149153897,0,0x0,8
tick,0x7ff999646dc4,149170152,0,0x0,8
tick,0x7ff999646dc4,149184035,0,0x0,8
tick,0x7ff999646dc4,149197966,0,0x0,8
tick,0x7ff999646dc4,149217478,0,0x0,8
tick,0x7ff999646dc4,149245519,0,0x0,8
tick,0x7ff999646dc4,149259498,0,0x0,8
tick,0x7ff999646dc4,149277573,0,0x0,8
tick,0x7ff999646dc4,149291383,0,0x0,8
tick,0x7ff999646dc4,149307599,0,0x0,8
tick,0x7ff999646dc4,149319974,0,0x0,8
tick,0x7ff999646dc4,149336675,0,0x0,8
tick,0x7ff999646dc4,149353940,0,0x0,8
tick,0x7ff999646dc4,149370855,0,0x0,8
tick,0x7ff999646dc4,149382772,0,0x0,8
tick,0x7ff999646dc4,149397057,0,0x0,8
tick,0x7ff999646dc4,149412778,0,0x0,8
tick,0x7ff999646dc4,149427733,0,0x0,8
tick,0x7ff999646dc4,149443540,0,0x0,8
tick,0x7ff999646dc4,149459105,0,0x0,8
tick,0x7ff999646dc4,149474327,0,0x0,8
tick,0x7ff999646dc4,149488964,0,0x0,8
tick,0x7ff999646dc4,149504036,0,0x0,8
tick,0x7ff999646dc4,149523650,0,0x0,8
tick,0x7ff999646dc4,149535921,0,0x0,8
tick,0x7ff999646dc4,149554261,0,0x0,8
tick,0x7ff999646dc4,149570820,0,0x0,8
tick,0x7ff999646dc4,149580723,0,0x0,8
tick,0x7ff999646dc4,149597688,0,0x0,8
tick,0x7ff999646dc4,149611692,0,0x0,8
tick,0x7ff999646dc4,149627117,0,0x0,8
tick,0x7ff999646dc4,149642153,0,0x0,8
tick,0x7ff999646dc4,149658245,0,0x0,8
tick,0x7ff999646dc4,149673394,0,0x0,8
tick,0x7ff999646dc4,149689060,0,0x0,8
tick,0x7ff999646dc4,149705195,0,0x0,8
tick,0x7ff999646dc4,149719724,0,0x0,8
tick,0x7ff999646dc4,149735080,0,0x0,8
tick,0x7ff999646dc4,149752268,0,0x0,8
tick,0x7ff999646dc4,149769116,0,0x0,8
tick,0x7ff999646dc4,149780298,0,0x0,8
tick,0x7ff999646dc4,149795255,0,0x0,8
tick,0x7ff999646dc4,149810191,0,0x0,8
tick,0x7ff999646dc4,149826595,0,0x0,8
tick,0x7ff999646dc4,149840937,0,0x0,8
tick,0x7ff999646dc4,149855584,0,0x0,8
tick,0x7ff999646dc4,149871565,0,0x0,8
tick,0x7ff999646dc4,149888068,0,0x0,8
tick,0x7ff999646dc4,149902453,0,0x0,8
tick,0x7ff999646dc4,149917203,0,0x0,8
tick,0x7ff999646dc4,149932916,0,0x0,8
tick,0x7ff999646dc4,149947917,0,0x0,8
tick,0x7ff999646dc4,149964026,0,0x0,8
tick,0x7ff999646dc4,149978589,0,0x0,8
tick,0x7ff999646dc4,149994661,0,0x0,8
tick,0x7ff999646dc4,150010770,0,0x0,8
tick,0x7ff999646dc4,150025188,0,0x0,8
tick,0x7ff999646dc4,150040653,0,0x0,8
tick,0x7ff999646dc4,150056078,0,0x0,8
tick,0x7ff999646dc4,150071329,0,0x0,8
tick,0x7ff999646dc4,150086643,0,0x0,8
tick,0x7ff999646dc4,150101891,0,0x0,8
tick,0x7ff999646dc4,150116562,0,0x0,8
tick,0x7ff999646dc4,150132490,0,0x0,8
tick,0x7ff999646dc4,150147809,0,0x0,8
tick,0x7ff999646dc4,150162650,0,0x0,8
tick,0x7ff999646dc4,150178030,0,0x0,8
tick,0x7ff999646dc4,150193419,0,0x0,8
tick,0x7ff999646dc4,150208511,0,0x0,8
tick,0x7ff999646dc4,150223357,0,0x0,8
tick,0x7ff999646dc4,150239302,0,0x0,8
tick,0x7ff999646dc4,150254453,0,0x0,8
tick,0x7ff999646dc4,150268826,0,0x0,8
tick,0x7ff999646dc4,150284456,0,0x0,8
tick,0x7ff999646dc4,150300007,0,0x0,8
tick,0x7ff999646dc4,150314819,0,0x0,8
tick,0x7ff999646dc4,150330751,0,0x0,8
tick,0x7ff999646dc4,150346590,0,0x0,8
tick,0x7ff999646dc4,150360690,0,0x0,8
tick,0x7ff999646dc4,150376242,0,0x0,8
tick,0x7ff999646dc4,150391418,0,0x0,8
tick,0x7ff999646dc4,150406741,0,0x0,8
tick,0x7ff999646dc4,150422435,0,0x0,8
tick,0x7ff999646dc4,150437462,0,0x0,8
tick,0x7ff999646dc4,150453309,0,0x0,8
tick,0x7ff999646dc4,150469550,0,0x0,8
tick,0x7ff999646dc4,150483995,0,0x0,8
tick,0x7ff999646dc4,150499386,0,0x0,8
tick,0x7ff999646dc4,150514095,0,0x0,8
tick,0x7ff999646dc4,150530114,0,0x0,8
tick,0x7ff999646dc4,150545596,0,0x0,8
tick,0x7ff999646dc4,150561017,0,0x0,8
tick,0x7ff999646dc4,150575662,0,0x0,8
tick,0x7ff999646dc4,150591435,0,0x0,8
tick,0x7ff999646dc4,150607033,0,0x0,8
tick,0x7ff999646dc4,150621812,0,0x0,8
tick,0x7ff999646dc4,150637029,0,0x0,8
tick,0x7ff999646dc4,150652629,0,0x0,8
tick,0x7ff999646dc4,150668570,0,0x0,8
tick,0x7ff999646dc4,150683423,0,0x0,8
tick,0x7ff999646dc4,150698424,0,0x0,8
tick,0x7ff999646dc4,150713790,0,0x0,8
tick,0x7ff999646dc4,150729692,0,0x0,8
tick,0x7ff999646dc4,150744575,0,0x0,8
tick,0x7ff999646dc4,150760533,0,0x0,8
tick,0x7ff999646dc4,150775957,0,0x0,8
tick,0x7ff999646dc4,150790599,0,0x0,8
tick,0x7ff999646dc4,150805797,0,0x0,8
tick,0x7ff999646dc4,150820678,0,0x0,8
tick,0x7ff999646dc4,150835960,0,0x0,8
tick,0x7ff999646dc4,150851263,0,0x0,8
tick,0x7ff999646dc4,150867570,0,0x0,8
tick,0x7ff999646dc4,150881782,0,0x0,8
tick,0x7ff999646dc4,150896859,0,0x0,8
tick,0x7ff999646dc4,150912315,0,0x0,8
tick,0x7ff999646dc4,150927538,0,0x0,8
tick,0x7ff999646dc4,150942684,0,0x0,8
tick,0x7ff999646dc4,150957986,0,0x0,8
tick,0x7ff999646dc4,150973305,0,0x0,8
tick,0x7ff999646dc4,150988711,0,0x0,8
tick,0x7ff999646dc4,151004075,0,0x0,8
tick,0x7ff999646dc4,151019439,0,0x0,8
tick,0x7ff999646dc4,151035009,0,0x0,8
tick,0x7ff999646dc4,151050367,0,0x0,8
tick,0x7ff999646dc4,151065632,0,0x0,8
tick,0x7ff999646dc4,151080968,0,0x0,8
tick,0x7ff999646dc4,151095825,0,0x0,8
tick,0x7ff999646dc4,151111534,0,0x0,8
tick,0x7ff999646dc4,151126940,0,0x0,8
tick,0x7ff999646dc4,151141952,0,0x0,8
tick,0x7ff999646dc4,151157659,0,0x0,8
tick,0x7ff999646dc4,151173026,0,0x0,8
tick,0x7ff999646dc4,151188603,0,0x0,8
tick,0x7ff999646dc4,151204704,0,0x0,8
tick,0x7ff999646dc4,151218921,0,0x0,8
tick,0x7ff999646dc4,151233422,0,0x0,8
tick,0x7ff999646dc4,151248265,0,0x0,8
tick,0x7ff999646dc4,151263430,0,0x0,8
tick,0x7ff999646dc4,151279431,0,0x0,8
tick,0x7ff999646dc4,151294394,0,0x0,8
tick,0x7ff999646dc4,151310238,0,0x0,8
tick,0x7ff999646dc4,151324896,0,0x0,8
tick,0x7ff999646dc4,151340134,0,0x0,8
tick,0x7ff999646dc4,151355651,0,0x0,8
tick,0x7ff999646dc4,151370792,0,0x0,8
tick,0x7ff999646dc4,151387239,0,0x0,8
tick,0x7ff999646dc4,151401961,0,0x0,8
tick,0x7ff999646dc4,151417591,0,0x0,8
tick,0x7ff999646dc4,151432573,0,0x0,8
tick,0x7ff999646dc4,151447800,0,0x0,8
tick,0x7ff999646dc4,151463390,0,0x0,8
tick,0x7ff999646dc4,151478540,0,0x0,8
tick,0x7ff999646dc4,151493987,0,0x0,8
tick,0x7ff999646dc4,151509319,0,0x0,8
tick,0x7ff999646dc4,151525771,0,0x0,8
tick,0x7ff999646dc4,151539959,0,0x0,8
tick,0x7ff999646dc4,151555283,0,0x0,8
tick,0x7ff999646dc4,151570452,0,0x0,8
tick,0x7ff999646dc4,151586102,0,0x0,8
tick,0x7ff999646dc4,151601998,0,0x0,8
tick,0x7ff999646dc4,151617565,0,0x0,8
tick,0x7ff999646dc4,151631483,0,0x0,8
tick,0x7ff999646dc4,151646133,0,0x0,8
tick,0x7ff999646dc4,151661508,0,0x0,8
tick,0x7ff999646dc4,151676764,0,0x0,8
tick,0x7ff999646dc4,151692015,0,0x0,8
tick,0x7ff999646dc4,151708125,0,0x0,8
tick,0x7ff999646dc4,151723123,0,0x0,8
tick,0x7ff999646dc4,151738555,0,0x0,8
tick,0x7ff999646dc4,151753492,0,0x0,8
tick,0x7ff999646dc4,151768837,0,0x0,8
tick,0x7ff999646dc4,151783912,0,0x0,8
tick,0x7ff999646dc4,151799032,0,0x0,8
tick,0x7ff999646dc4,151814968,0,0x0,8
tick,0x7ff999646dc4,151829923,0,0x0,8
tick,0x7ff999646dc4,151845082,0,0x0,8
tick,0x7ff999646dc4,151860020,0,0x0,8
tick,0x7ff999646dc4,151875804,0,0x0,8
tick,0x7ff999646dc4,151891695,0,0x0,8
tick,0x7ff999646dc4,151907350,0,0x0,8
tick,0x7ff999646dc4,151922398,0,0x0,8
tick,0x7ff999646dc4,151938075,0,0x0,8
tick,0x7ff999646dc4,151953661,0,0x0,8
tick,0x7ff999646dc4,151968922,0,0x0,8
tick,0x7ff999646dc4,151984107,0,0x0,8
tick,0x7ff999646dc4,151999036,0,0x0,8
tick,0x7ff999646dc4,152014137,0,0x0,8
tick,0x7ff999646dc4,152028756,0,0x0,8
tick,0x7ff999646dc4,152044603,0,0x0,8
tick,0x7ff999646dc4,152059675,0,0x0,8
tick,0x7ff999646dc4,152074256,0,0x0,8
tick,0x7ff999646dc4,152089838,0,0x0,8
tick,0x7ff999646dc4,152104651,0,0x0,8
tick,0x7ff999646dc4,152120486,0,0x0,8
tick,0x7ff999646dc4,152135557,0,0x0,8
tick,0x7ff999646dc4,152150794,0,0x0,8
tick,0x7ff999646dc4,152167655,0,0x0,8
tick,0x7ff999646dc4,152181878,0,0x0,8
tick,0x7ff999646dc4,152196682,0,0x0,8
tick,0x7ff999646dc4,152212409,0,0x0,8
tick,0x7ff999646dc4,152228099,0,0x0,8
tick,0x7ff999646dc4,152243016,0,0x0,8
tick,0x7ff999646dc4,152258446,0,0x0,8
tick,0x7ff999646dc4,152274550,0,0x0,8
tick,0x7ff999646dc4,152289356,0,0x0,8
tick,0x7ff999646dc4,152304648,0,0x0,8
tick,0x7ff999646dc4,152320092,0,0x0,8
tick,0x7ff999646dc4,152335331,0,0x0,8
tick,0x7ff999646dc4,152351042,0,0x0,8
tick,0x7ff999646dc4,152366250,0,0x0,8
tick,0x7ff999646dc4,152382036,0,0x0,8
tick,0x7ff999646dc4,152396876,0,0x0,8
tick,0x7ff999646dc4,152411755,0,0x0,8
tick,0x7ff999646dc4,152427058,0,0x0,8
tick,0x7ff999646dc4,152442671,0,0x0,8
tick,0x7ff999646dc4,152458220,0,0x0,8
tick,0x7ff999646dc4,152473116,0,0x0,8
tick,0x7ff999646dc4,152489546,0,0x0,8
tick,0x7ff999646dc4,152505276,0,0x0,8
tick,0x7ff999646dc4,152519933,0,0x0,8
tick,0x7ff999646dc4,152534047,0,0x0,8
tick,0x7ff999646dc4,152549666,0,0x0,8
tick,0x7ff999646dc4,152565071,0,0x0,8
tick,0x7ff999646dc4,152580113,0,0x0,8
tick,0x7ff999646dc4,152595858,0,0x0,8
tick,0x7ff999646dc4,152610740,0,0x0,8
tick,0x7ff999646dc4,152627145,0,0x0,8
tick,0x7ff999646dc4,152641534,0,0x0,8
tick,0x7ff999646dc4,152656729,0,0x0,8
tick,0x7ff999646dc4,152672378,0,0x0,8
tick,0x7ff999646dc4,152688302,0,0x0,8
tick,0x7ff999646dc4,152704485,0,0x0,8
tick,0x7ff999646dc4,152718337,0,0x0,8
tick,0x7ff999646dc4,152733923,0,0x0,8
tick,0x7ff999646dc4,152749457,0,0x0,8
tick,0x7ff999646dc4,152764591,0,0x0,8
tick,0x7ff999646dc4,152780537,0,0x0,8
tick,0x7ff999646dc4,152796102,0,0x0,8
tick,0x7ff999646dc4,152811785,0,0x0,8
tick,0x7ff999646dc4,152826742,0,0x0,8
tick,0x7ff999646dc4,152841645,0,0x0,8
tick,0x7ff999646dc4,152856768,0,0x0,8
tick,0x7ff999646dc4,152872230,0,0x0,8
tick,0x7ff999646dc4,152888445,0,0x0,8
tick,0x7ff999646dc4,152902929,0,0x0,8
tick,0x7ff999646dc4,152918293,0,0x0,8
tick,0x7ff999646dc4,152933544,0,0x0,8
tick,0x7ff999646dc4,152949389,0,0x0,8
tick,0x7ff999646dc4,152964317,0,0x0,8
tick,0x7ff999646dc4,152979475,0,0x0,8
tick,0x7ff999646dc4,152995488,0,0x0,8
tick,0x7ff999646dc4,153011979,0,0x0,8
tick,0x7ff999646dc4,153026476,0,0x0,8
tick,0x7ff999646dc4,153041369,0,0x0,8
tick,0x7ff999646dc4,153057251,0,0x0,8
tick,0x7ff999646dc4,153072012,0,0x0,8
tick,0x7ff999646dc4,153087494,0,0x0,8
tick,0x7ff999646dc4,153102780,0,0x0,8
tick,0x7ff999646dc4,153118397,0,0x0,8
tick,0x7ff999646dc4,153133653,0,0x0,8
tick,0x7ff999646dc4,153148389,0,0x0,8
tick,0x7ff999646dc4,153163252,0,0x0,8
tick,0x7ff999646dc4,153179082,0,0x0,8
tick,0x7ff999646dc4,153194241,0,0x0,8
tick,0x7ff999646dc4,153210234,0,0x0,8
tick,0x7ff999646dc4,153225551,0,0x0,8
tick,0x7ff999646dc4,153241137,0,0x0,8
tick,0x7ff999646dc4,153256232,0,0x0,8
tick,0x7ff999646dc4,153272238,0,0x0,8
tick,0x7ff999646dc4,153286955,0,0x0,8
tick,0x7ff999646dc4,153302039,0,0x0,8
tick,0x7ff999646dc4,153318398,0,0x0,8
tick,0x7ff999646dc4,153333773,0,0x0,8
tick,0x7ff999646dc4,153348697,0,0x0,8
tick,0x7ff999646dc4,153362443,0,0x0,8
tick,0x7ff999646dc4,153377889,0,0x0,8
tick,0x7ff999646dc4,153393517,0,0x0,8
tick,0x7ff999646dc4,153408810,0,0x0,8
tick,0x7ff999646dc4,153425087,0,0x0,8
tick,0x7ff999646dc4,153439949,0,0x0,8
tick,0x7ff999646dc4,153455625,0,0x0,8
tick,0x7ff999646dc4,153470743,0,0x0,8
tick,0x7ff999646dc4,153486239,0,0x0,8
tick,0x7ff999646dc4,153501462,0,0x0,8
tick,0x7ff999646dc4,153517116,0,0x0,8
tick,0x7ff999646dc4,153532211,0,0x0,8
tick,0x7ff999646dc4,153547842,0,0x0,8
tick,0x7ff999646dc4,153563500,0,0x0,8
tick,0x7ff999646dc4,153578104,0,0x0,8
tick,0x7ff999646dc4,153593804,0,0x0,8
tick,0x7ff999646dc4,153608913,0,0x0,8
tick,0x7ff999646dc4,153623826,0,0x0,8
tick,0x7ff999646dc4,153640099,0,0x0,8
tick,0x7ff999646dc4,153654993,0,0x0,8
tick,0x7ff999646dc4,153670472,0,0x0,8
tick,0x7ff999646dc4,153685158,0,0x0,8
tick,0x7ff999646dc4,153700591,0,0x0,8
tick,0x7ff999646dc4,153716483,0,0x0,8
tick,0x7ff999646dc4,153731430,0,0x0,8
tick,0x7ff999646dc4,153746570,0,0x0,8
tick,0x7ff999646dc4,153762249,0,0x0,8
tick,0x7ff999646dc4,153776680,0,0x0,8
tick,0x7ff999646dc4,153792696,0,0x0,8
tick,0x7ff999646dc4,153807355,0,0x0,8
tick,0x7ff999646dc4,153822993,0,0x0,8
tick,0x7ff999646dc4,153838162,0,0x0,8
tick,0x7ff999646dc4,153855657,0,0x0,8
tick,0x7ff999646dc4,153869630,0,0x0,8
tick,0x7ff999646dc4,153885170,0,0x0,8
tick,0x7ff999646dc4,153899700,0,0x0,8
tick,0x7ff999646dc4,153915382,0,0x0,8
tick,0x7ff999646dc4,153931353,0,0x0,8
tick,0x7ff999646dc4,153945642,0,0x0,8
tick,0x7ff999646dc4,153961578,0,0x0,8
tick,0x7ff999646dc4,153976095,0,0x0,8
tick,0x7ff999646dc4,153991944,0,0x0,8
tick,0x7ff999646dc4,154006403,0,0x0,8
tick,0x7ff999646dc4,154022736,0,0x0,8
tick,0x7ff999646dc4,154037561,0,0x0,8
tick,0x7ff999646dc4,154052467,0,0x0,8
tick,0x7ff999646dc4,154069299,0,0x0,8
tick,0x7ff999646dc4,154084806,0,0x0,8
tick,0x7ff999646dc4,154099476,0,0x0,8
tick,0x7ff999646dc4,154113915,0,0x0,8
tick,0x7ff999646dc4,154130398,0,0x0,8
tick,0x7ff999646dc4,154145233,0,0x0,8
tick,0x7ff999646dc4,154160511,0,0x0,8
tick,0x7ff999646dc4,154176062,0,0x0,8
tick,0x7ff999646dc4,154191538,0,0x0,8
tick,0x7ff999646dc4,154206922,0,0x0,8
tick,0x7ff999646dc4,154222184,0,0x0,8
tick,0x7ff999646dc4,154237500,0,0x0,8
tick,0x7ff999646dc4,154252621,0,0x0,8
tick,0x7ff999646dc4,154267857,0,0x0,8
tick,0x7ff999646dc4,154283230,0,0x0,8
tick,0x7ff999646dc4,154298766,0,0x0,8
tick,0x7ff999646dc4,154314455,0,0x0,8
tick,0x7ff999646dc4,154329095,0,0x0,8
tick,0x7ff999646dc4,154345723,0,0x0,8
tick,0x7ff999646dc4,154360614,0,0x0,8
tick,0x7ff999646dc4,154375158,0,0x0,8
tick,0x7ff999646dc4,154391524,0,0x0,8
tick,0x7ff999646dc4,154406325,0,0x0,8
tick,0x7ff999646dc4,154421630,0,0x0,8
tick,0x7ff999646dc4,154436558,0,0x0,8
tick,0x7ff999646dc4,154452332,0,0x0,8
tick,0x7ff999646dc4,154467404,0,0x0,8
tick,0x7ff999646dc4,154482900,0,0x0,8
tick,0x7ff999646dc4,154498027,0,0x0,8
tick,0x7ff999646dc4,154514971,0,0x0,8
tick,0x7ff999646dc4,154529319,0,0x0,8
tick,0x7ff999646dc4,154543935,0,0x0,8
tick,0x7ff999646dc4,154559357,0,0x0,8
tick,0x7ff999646dc4,154575746,0,0x0,8
tick,0x7ff999646dc4,154589980,0,0x0,8
tick,0x7ff999646dc4,154605583,0,0x0,8
tick,0x7ff999646dc4,154620940,0,0x0,8
tick,0x7ff999646dc4,154637348,0,0x0,8
tick,0x7ff999646dc4,154651859,0,0x0,8
tick,0x7ff999646dc4,154667191,0,0x0,8
tick,0x7ff999646dc4,154682492,0,0x0,8
tick,0x7ff999646dc4,154698110,0,0x0,8
tick,0x7ff999646dc4,154713379,0,0x0,8
tick,0x7ff999646dc4,154729317,0,0x0,8
tick,0x7ff999646dc4,154743604,0,0x0,8
tick,0x7ff999646dc4,154758997,0,0x0,8
tick,0x7ff999646dc4,154775410,0,0x0,8
tick,0x7ff999646dc4,154790247,0,0x0,8
tick,0x7ff999646dc4,154805463,0,0x0,8
tick,0x7ff999646dc4,154821111,0,0x0,8
tick,0x7ff999646dc4,154836958,0,0x0,8
tick,0x7ff999646dc4,154852054,0,0x0,8
tick,0x7ff999646dc4,154866288,0,0x0,8
tick,0x7ff999646dc4,154881551,0,0x0,8
tick,0x7ff999646dc4,154896995,0,0x0,8
tick,0x7ff999646dc4,154912662,0,0x0,8
tick,0x7ff999646dc4,154928309,0,0x0,8
tick,0x7ff999646dc4,154944027,0,0x0,8
tick,0x7ff999646dc4,154959496,0,0x0,8
tick,0x7ff999646dc4,154973847,0,0x0,8
tick,0x7ff999646dc4,154988745,0,0x0,8
tick,0x7ff999646dc4,155004281,0,0x0,8
tick,0x7ff999646dc4,155020139,0,0x0,8
tick,0x7ff999646dc4,155036705,0,0x0,8
tick,0x7ff999646dc4,155051626,0,0x0,8
tick,0x7ff999646dc4,155067043,0,0x0,8
tick,0x7ff999646dc4,155081770,0,0x0,8
tick,0x7ff999646dc4,155096691,0,0x0,8
tick,0x7ff999646dc4,155112366,0,0x0,8
tick,0x7ff999646dc4,155127457,0,0x0,8
tick,0x7ff999646dc4,155143483,0,0x0,8
tick,0x7ff999646dc4,155159294,0,0x0,8
tick,0x7ff999646dc4,155174385,0,0x0,8
tick,0x7ff999646dc4,155189004,0,0x0,8
tick,0x7ff999646dc4,155204278,0,0x0,8
tick,0x7ff999646dc4,155219735,0,0x0,8
tick,0x7ff999646dc4,155235345,0,0x0,8
tick,0x7ff999646dc4,155251025,0,0x0,8
tick,0x7ff999646dc4,155266071,0,0x0,8
tick,0x7ff999646dc4,155281501,0,0x0,8
tick,0x7ff999646dc4,155296527,0,0x0,8
tick,0x7ff999646dc4,155311323,0,0x0,8
tick,0x7ff999646dc4,155326978,0,0x0,8
tick,0x7ff999646dc4,155342849,0,0x0,8
tick,0x7ff999646dc4,155357751,0,0x0,8
tick,0x7ff999646dc4,155375072,0,0x0,8
tick,0x7ff999646dc4,155388871,0,0x0,8
tick,0x7ff999646dc4,155403102,0,0x0,8
tick,0x7ff999646dc4,155418455,0,0x0,8
tick,0x7ff999646dc4,155433756,0,0x0,8
tick,0x7ff999646dc4,155449129,0,0x0,8
tick,0x7ff999646dc4,155464842,0,0x0,8
tick,0x7ff999646dc4,155479860,0,0x0,8
tick,0x7ff999646dc4,155495633,0,0x0,8
tick,0x7ff999646dc4,155510941,0,0x0,8
tick,0x7ff999646dc4,155526283,0,0x0,8
tick,0x7ff999646dc4,155541815,0,0x0,8
tick,0x7ff999646dc4,155558068,0,0x0,8
tick,0x7ff999646dc4,155572398,0,0x0,8
tick,0x7ff999646dc4,155589073,0,0x0,8
tick,0x7ff999646dc4,155603564,0,0x0,8
tick,0x7ff999646dc4,155618319,0,0x0,8
tick,0x7ff999646dc4,155633411,0,0x0,8
tick,0x7ff999646dc4,155648866,0,0x0,8
tick,0x7ff999646dc4,155666492,0,0x0,8
tick,0x7ff999646dc4,155679911,0,0x0,8
tick,0x7ff999646dc4,155695475,0,0x0,8
tick,0x7ff999646dc4,155710999,0,0x0,8
tick,0x7ff999646dc4,155725701,0,0x0,8
tick,0x7ff999646dc4,155741358,0,0x0,8
tick,0x7ff999646dc4,155757139,0,0x0,8
tick,0x7ff999646dc4,155772401,0,0x0,8
tick,0x7ff999646dc4,155787316,0,0x0,8
tick,0x7ff999646dc4,155802630,0,0x0,8
tick,0x7ff999646dc4,155818360,0,0x0,8
tick,0x7ff999646dc4,155833385,0,0x0,8
tick,0x7ff999646dc4,155848653,0,0x0,8
tick,0x7ff999646dc4,155864105,0,0x0,8
tick,0x7ff999646dc4,155879216,0,0x0,8
tick,0x7ff999646dc4,155894769,0,0x0,8
tick,0x7ff999646dc4,155910267,0,0x0,8
tick,0x7ff999646dc4,155925962,0,0x0,8
tick,0x7ff999646dc4,155941000,0,0x0,8
tick,0x7ff999646dc4,155957619,0,0x0,8
tick,0x7ff999646dc4,155971744,0,0x0,8
tick,0x7ff999646dc4,155987241,0,0x0,8
tick,0x7ff999646dc4,156003292,0,0x0,8
tick,0x7ff999646dc4,156018967,0,0x0,8
tick,0x7ff999646dc4,156034521,0,0x0,8
tick,0x7ff999646dc4,156048830,0,0x0,8
tick,0x7ff999646dc4,156064401,0,0x0,8
tick,0x7ff999646dc4,156079975,0,0x0,8
tick,0x7ff999646dc4,156096239,0,0x0,8
tick,0x7ff999646dc4,156111228,0,0x0,8
tick,0x7ff999646dc4,156127060,0,0x0,8
tick,0x7ff999646dc4,156142187,0,0x0,8
tick,0x7ff999646dc4,156157344,0,0x0,8
tick,0x7ff999646dc4,156172384,0,0x0,8
tick,0x7ff999646dc4,156188434,0,0x0,8
tick,0x7ff999646dc4,156203170,0,0x0,8
tick,0x7ff999646dc4,156219015,0,0x0,8
tick,0x7ff999646dc4,156234431,0,0x0,8
tick,0x7ff999646dc4,156250051,0,0x0,8
tick,0x7ff999646dc4,156264880,0,0x0,8
tick,0x7ff999646dc4,156280545,0,0x0,8
tick,0x7ff999646dc4,156296115,0,0x0,8
tick,0x7ff999646dc4,156311669,0,0x0,8
tick,0x7ff999646dc4,156327378,0,0x0,8
tick,0x7ff999646dc4,156343810,0,0x0,8
tick,0x7ff999646dc4,156358939,0,0x0,8
tick,0x7ff999646dc4,156373111,0,0x0,8
tick,0x7ff999646dc4,156388913,0,0x0,8
tick,0x7ff999646dc4,156403914,0,0x0,8
tick,0x7ff999646dc4,156419518,0,0x0,8
tick,0x7ff999646dc4,156434599,0,0x0,8
tick,0x7ff999646dc4,156450294,0,0x0,8
tick,0x7ff999646dc4,156465192,0,0x0,8
tick,0x7ff999646dc4,156480386,0,0x0,8
tick,0x7ff999646dc4,156495747,0,0x0,8
tick,0x7ff999646dc4,156511232,0,0x0,8
tick,0x7ff999646dc4,156526712,0,0x0,8
tick,0x7ff999646dc4,156541738,0,0x0,8
tick,0x7ff999646dc4,156558111,0,0x0,8
tick,0x7ff999646dc4,156573079,0,0x0,8
tick,0x7ff999646dc4,156588060,0,0x0,8
tick,0x7ff999646dc4,156604738,0,0x0,8
tick,0x7ff999646dc4,156619008,0,0x0,8
tick,0x7ff999646dc4,156633950,0,0x0,8
tick,0x7ff999646dc4,156649577,0,0x0,8
tick,0x7ff999646dc4,156666036,0,0x0,8
tick,0x7ff999646dc4,156681084,0,0x0,8
tick,0x7ff999646dc4,156695498,0,0x0,8
tick,0x7ff999646dc4,156710823,0,0x0,8
tick,0x7ff999646dc4,156726281,0,0x0,8
tick,0x7ff999646dc4,156741263,0,0x0,8
tick,0x7ff999646dc4,156756493,0,0x0,8
tick,0x7ff999646dc4,156772372,0,0x0,8
tick,0x7ff999646dc4,156788079,0,0x0,8
tick,0x7ff999646dc4,156802644,0,0x0,8
tick,0x7ff999646dc4,156817503,0,0x0,8
tick,0x7ff999646dc4,156833145,0,0x0,8
tick,0x7ff999646dc4,156848979,0,0x0,8
tick,0x7ff999646dc4,156864939,0,0x0,8
tick,0x7ff999646dc4,156879656,0,0x0,8
tick,0x7ff999646dc4,156895599,0,0x0,8
tick,0x7ff999646dc4,156910291,0,0x0,8
tick,0x7ff999646dc4,156925928,0,0x0,8
tick,0x7ff999646dc4,156940894,0,0x0,8
tick,0x7ff999646dc4,156956368,0,0x0,8
tick,0x7ff999646dc4,156971644,0,0x0,8
tick,0x7ff999646dc4,156987201,0,0x0,8
tick,0x7ff999646dc4,157003383,0,0x0,8
tick,0x7ff999646dc4,157017611,0,0x0,8
tick,0x7ff999646dc4,157033244,0,0x0,8
tick,0x7ff999646dc4,157048010,0,0x0,8
tick,0x7ff999646dc4,157063376,0,0x0,8
tick,0x7ff999646dc4,157079040,0,0x0,8
tick,0x7ff999646dc4,157094246,0,0x0,8
tick,0x7ff999646dc4,157110492,0,0x0,8
tick,0x7ff999646dc4,157125382,0,0x0,8
tick,0x7ff999646dc4,157140194,0,0x0,8
tick,0x7ff999646dc4,157155400,0,0x0,8
tick,0x7ff999646dc4,157171362,0,0x0,8
tick,0x7ff999646dc4,157185734,0,0x0,8
tick,0x7ff999646dc4,157200996,0,0x0,8
tick,0x7ff999646dc4,157215961,0,0x0,8
tick,0x7ff999646dc4,157231018,0,0x0,8
tick,0x7ff999646dc4,157246703,0,0x0,8
tick,0x7ff999646dc4,157261943,0,0x0,8
tick,0x7ff999646dc4,157277330,0,0x0,8
tick,0x7ff999646dc4,157292272,0,0x0,8
tick,0x7ff999646dc4,157307619,0,0x0,8
tick,0x7ff999646dc4,157323064,0,0x0,8
tick,0x7ff999646dc4,157337921,0,0x0,8
tick,0x7ff999646dc4,157353252,0,0x0,8
tick,0x7ff999646dc4,157369635,0,0x0,8
tick,0x7ff999646dc4,157384313,0,0x0,8
tick,0x7ff999646dc4,157399286,0,0x0,8
tick,0x7ff999646dc4,157415516,0,0x0,8
tick,0x7ff999646dc4,157430466,0,0x0,8
tick,0x7ff999646dc4,157445437,0,0x0,8
tick,0x7ff999646dc4,157460708,0,0x0,8
tick,0x7ff999646dc4,157476378,0,0x0,8
tick,0x7ff999646dc4,157491282,0,0x0,8
tick,0x7ff999646dc4,157506747,0,0x0,8
tick,0x7ff999646dc4,157522404,0,0x0,8
tick,0x7ff999646dc4,157537898,0,0x0,8
tick,0x7ff999646dc4,157552878,0,0x0,8
tick,0x7ff999646dc4,157568362,0,0x0,8
tick,0x7ff999646dc4,157583445,0,0x0,8
tick,0x7ff999646dc4,157599070,0,0x0,8
tick,0x7ff999646dc4,157614928,0,0x0,8
tick,0x7ff999646dc4,157629769,0,0x0,8
tick,0x7ff999646dc4,157647488,0,0x0,8
tick,0x7ff999646dc4,157660238,0,0x0,8
tick,0x7ff999646dc4,157676772,0,0x0,8
tick,0x7ff999646dc4,157690709,0,0x0,8
tick,0x7ff999646dc4,157705625,0,0x0,8
tick,0x7ff999646dc4,157722006,0,0x0,8
tick,0x7ff999646dc4,157736774,0,0x0,8
tick,0x7ff999646dc4,157752279,0,0x0,8
tick,0x7ff999646dc4,157767476,0,0x0,8
tick,0x7ff999646dc4,157782706,0,0x0,8
tick,0x7ff999646dc4,157798646,0,0x0,8
tick,0x7ff999646dc4,157813892,0,0x0,8
tick,0x7ff999646dc4,157829547,0,0x0,8
tick,0x7ff999646dc4,157845400,0,0x0,8
tick,0x7ff999646dc4,157859818,0,0x0,8
tick,0x7ff999646dc4,157874603,0,0x0,8
tick,0x7ff999646dc4,157889866,0,0x0,8
tick,0x7ff999646dc4,157905882,0,0x0,8
tick,0x7ff999646dc4,157921215,0,0x0,8
tick,0x7ff999646dc4,157936438,0,0x0,8
tick,0x7ff999646dc4,157951660,0,0x0,8
tick,0x7ff999646dc4,157967323,0,0x0,8
tick,0x7ff999646dc4,157982171,0,0x0,8
tick,0x7ff999646dc4,157997407,0,0x0,8
tick,0x7ff999646dc4,158014652,0,0x0,8
tick,0x7ff999646dc4,158028565,0,0x0,8
tick,0x7ff999646dc4,158045405,0,0x0,8
tick,0x7ff999646dc4,158059417,0,0x0,8
tick,0x7ff999646dc4,158076584,0,0x0,8
tick,0x7ff999646dc4,158090024,0,0x0,8
tick,0x7ff999646dc4,158105494,0,0x0,8
tick,0x7ff999646dc4,158120774,0,0x0,8
tick,0x7ff999646dc4,158135201,0,0x0,8
tick,0x7ff999646dc4,158151073,0,0x0,8
tick,0x7ff999646dc4,158166656,0,0x0,8
tick,0x7ff999646dc4,158181869,0,0x0,8
tick,0x7ff999646dc4,158196847,0,0x0,8
tick,0x7ff999646dc4,158212831,0,0x0,8
tick,0x7ff999646dc4,158227734,0,0x0,8
tick,0x7ff999646dc4,158243009,0,0x0,8
tick,0x7ff999646dc4,158259647,0,0x0,8
tick,0x7ff999646dc4,158274216,0,0x0,8
tick,0x7ff999646dc4,158289325,0,0x0,8
tick,0x7ff999646dc4,158304192,0,0x0,8
tick,0x7ff999646dc4,158319216,0,0x0,8
tick,0x7ff999646dc4,158335508,0,0x0,8
tick,0x7ff999646dc4,158350412,0,0x0,8
tick,0x7ff999646dc4,158365758,0,0x0,8
tick,0x7ff999646dc4,158381126,0,0x0,8
tick,0x7ff999646dc4,158396443,0,0x0,8
tick,0x7ff999646dc4,158411630,0,0x0,8
tick,0x7ff999646dc4,158429683,0,0x0,8
tick,0x7ff999646dc4,158442071,0,0x0,8
tick,0x7ff999646dc4,158457353,0,0x0,8
tick,0x7ff999646dc4,158473019,0,0x0,8
tick,0x7ff999646dc4,158488438,0,0x0,8
tick,0x7ff999646dc4,158505187,0,0x0,8
tick,0x7ff999646dc4,158520300,0,0x0,8
tick,0x7ff999646dc4,158535105,0,0x0,8
tick,0x7ff999646dc4,158550674,0,0x0,8
tick,0x7ff999646dc4,158565434,0,0x0,8
tick,0x7ff999646dc4,158581641,0,0x0,8
tick,0x7ff999646dc4,158597176,0,0x0,8
tick,0x7ff999646dc4,158614287,0,0x0,8
tick,0x7ff999646dc4,158631157,0,0x0,8
tick,0x7ff999646dc4,158644684,0,0x0,8
tick,0x7ff999646dc4,158657550,0,0x0,8
tick,0x7ff999646dc4,158672794,0,0x0,8
tick,0x7ff999646dc4,158689264,0,0x0,8
tick,0x7ff999646dc4,158703907,0,0x0,8
tick,0x7ff999646dc4,158720638,0,0x0,8
tick,0x7ff999646dc4,158734095,0,0x0,8
tick,0x7ff999646dc4,158750580,0,0x0,8
tick,0x7ff999646dc4,158767253,0,0x0,8
tick,0x7ff999646dc4,158782081,0,0x0,8
tick,0x7ff999646dc4,158796946,0,0x0,8
tick,0x7ff999646dc4,158810965,0,0x0,8
tick,0x7ff999646dc4,158828506,0,0x0,8
tick,0x7ff999646dc4,158843066,0,0x0,8
tick,0x7ff999646dc4,158856860,0,0x0,8
tick,0x7ff999646dc4,158872826,0,0x0,8
tick,0x7ff999646dc4,158889043,0,0x0,8
tick,0x7ff999646dc4,158903182,0,0x0,8
tick,0x7ff999646dc4,158918782,0,0x0,8
tick,0x7ff999646dc4,158934973,0,0x0,8
tick,0x7ff999646dc4,158950448,0,0x0,8
tick,0x7ff999646dc4,158967585,0,0x0,8
tick,0x7ff999646dc4,158983777,0,0x0,8
tick,0x7ff999646dc4,158994942,0,0x0,8
tick,0x7ff999646dc4,159009606,0,0x0,8
tick,0x7ff999646dc4,159026246,0,0x0,8
tick,0x7ff999646dc4,159043610,0,0x0,8
tick,0x7ff999646dc4,159055534,0,0x0,8
tick,0x7ff999646dc4,159071091,0,0x0,8
tick,0x7ff999646dc4,159086801,0,0x0,8
tick,0x7ff999646dc4,159101725,0,0x0,8
tick,0x7ff999646dc4,159117479,0,0x0,8
tick,0x7ff999646dc4,159134073,0,0x0,8
tick,0x7ff999646dc4,159148498,0,0x0,8
tick,0x7ff999646dc4,159164156,0,0x0,8
tick,0x7ff999646dc4,159179028,0,0x0,8
tick,0x7ff999646dc4,159194282,0,0x0,8
tick,0x7ff999646dc4,159210370,0,0x0,8
tick,0x7ff999646dc4,159225366,0,0x0,8
tick,0x7ff999646dc4,159240744,0,0x0,8
tick,0x7ff999646dc4,159256186,0,0x0,8
tick,0x7ff999646dc4,159272503,0,0x0,8
tick,0x7ff999646dc4,159286501,0,0x0,8
tick,0x7ff999646dc4,159302294,0,0x0,8
tick,0x7ff999646dc4,159317494,0,0x0,8
tick,0x7ff999646dc4,159334310,0,0x0,8
tick,0x7ff999646dc4,159349173,0,0x0,8
tick,0x7ff999646dc4,159364573,0,0x0,8
tick,0x7ff999646dc4,159377595,0,0x0,8
tick,0x7ff999646dc4,159393758,0,0x0,8
tick,0x7ff999646dc4,159408469,0,0x0,8
tick,0x7ff999646dc4,159423700,0,0x0,8
tick,0x7ff999646dc4,159439178,0,0x0,8
tick,0x7ff999646dc4,159455977,0,0x0,8
tick,0x7ff999646dc4,159471350,0,0x0,8
tick,0x7ff999646dc4,159485648,0,0x0,8
tick,0x7ff999646dc4,159500827,0,0x0,8
tick,0x7ff999646dc4,159516019,0,0x0,8
tick,0x7ff999646dc4,159531987,0,0x0,8
tick,0x7ff999646dc4,159550372,0,0x0,8
tick,0x7ff999646dc4,159564078,0,0x0,8
tick,0x7ff999646dc4,159579848,0,0x0,8
tick,0x7ff999646dc4,159594898,0,0x0,8
tick,0x7ff999646dc4,159608310,0,0x0,8
tick,0x7ff999646dc4,159623651,0,0x0,8
tick,0x7ff999646dc4,159639391,0,0x0,8
tick,0x7ff999646dc4,159654623,0,0x0,8
tick,0x7ff999646dc4,159670852,0,0x0,8
tick,0x7ff999646dc4,159685599,0,0x0,8
tick,0x7ff999646dc4,159701390,0,0x0,8
tick,0x7ff999646dc4,159714987,0,0x0,8
tick,0x7ff999646dc4,159730842,0,0x0,8
tick,0x7ff999646dc4,159746074,0,0x0,8
tick,0x7ff999646dc4,159762326,0,0x0,8
tick,0x7ff999646dc4,159777055,0,0x0,8
tick,0x7ff999646dc4,159792660,0,0x0,8
tick,0x7ff999646dc4,159807849,0,0x0,8
tick,0x7ff999646dc4,159822908,0,0x0,8
tick,0x7ff999646dc4,159838993,0,0x0,8
tick,0x7ff999646dc4,159854399,0,0x0,8
tick,0x7ff999646dc4,159869868,0,0x0,8
tick,0x7ff999646dc4,159884862,0,0x0,8
tick,0x7ff999646dc4,159900571,0,0x0,8
tick,0x7ff999646dc4,159914937,0,0x0,8
tick,0x7ff999646dc4,159930395,0,0x0,8
tick,0x7ff999646dc4,159945650,0,0x0,8
tick,0x7ff999646dc4,159961182,0,0x0,8
tick,0x7ff999646dc4,159976752,0,0x0,8
tick,0x7ff999646dc4,159992309,0,0x0,8
tick,0x7ff999646dc4,160007196,0,0x0,8
tick,0x7ff999646dc4,160022046,0,0x0,8
tick,0x7ff999646dc4,160037592,0,0x0,8
tick,0x7ff999646dc4,160053352,0,0x0,8
tick,0x7ff999646dc4,160068848,0,0x0,8
tick,0x7ff999646dc4,160084018,0,0x0,8
tick,0x7ff999646dc4,160099488,0,0x0,8
tick,0x7ff999646dc4,160114352,0,0x0,8
tick,0x7ff999646dc4,160129864,0,0x0,8
tick,0x7ff999646dc4,160147664,0,0x0,8
tick,0x7ff999646dc4,160163085,0,0x0,8
tick,0x7ff999646dc4,160175651,0,0x0,8
tick,0x7ff999646dc4,160190888,0,0x0,8
tick,0x7ff999646dc4,160206603,0,0x0,8
tick,0x7ff999646dc4,160222148,0,0x0,8
tick,0x7ff999646dc4,160237302,0,0x0,8
tick,0x7ff999646dc4,160253434,0,0x0,8
tick,0x7ff999646dc4,160267513,0,0x0,8
tick,0x7ff999646dc4,160282916,0,0x0,8
tick,0x7ff999646dc4,160298560,0,0x0,8
tick,0x7ff999646dc4,160314417,0,0x0,8
tick,0x7ff999646dc4,160329269,0,0x0,8
tick,0x7ff999646dc4,160344858,0,0x0,8
tick,0x7ff999646dc4,160359383,0,0x0,8
tick,0x7ff999646dc4,160374776,0,0x0,8
tick,0x7ff999646dc4,160390266,0,0x0,8
tick,0x7ff999646dc4,160406542,0,0x0,8
tick,0x7ff999646dc4,160421165,0,0x0,8
tick,0x7ff999646dc4,160436893,0,0x0,8
tick,0x7ff999646dc4,160451523,0,0x0,8
tick,0x7ff999646dc4,160466609,0,0x0,8
tick,0x7ff999646dc4,160481893,0,0x0,8
tick,0x7ff999646dc4,160497666,0,0x0,8
tick,0x7ff999646dc4,160513480,0,0x0,8
tick,0x7ff999646dc4,160528658,0,0x0,8
tick,0x7ff999646dc4,160543937,0,0x0,8
tick,0x7ff999646dc4,160558538,0,0x0,8
tick,0x7ff999646dc4,160574036,0,0x0,8
tick,0x7ff999646dc4,160589303,0,0x0,8
tick,0x7ff999646dc4,160604661,0,0x0,8
tick,0x7ff999646dc4,160619878,0,0x0,8
tick,0x7ff999646dc4,160635427,0,0x0,8
tick,0x7ff999646dc4,160652295,0,0x0,8
tick,0x7ff999646dc4,160666061,0,0x0,8
tick,0x7ff999646dc4,160681466,0,0x0,8
tick,0x7ff999646dc4,160696345,0,0x0,8
tick,0x7ff999646dc4,160712171,0,0x0,8
tick,0x7ff999646dc4,160726749,0,0x0,8
tick,0x7ff999646dc4,160741984,0,0x0,8
tick,0x7ff999646dc4,160757772,0,0x0,8
tick,0x7ff999646dc4,160774210,0,0x0,8
tick,0x7ff999646dc4,160789794,0,0x0,8
tick,0x7ff999646dc4,160804283,0,0x0,8
tick,0x7ff999646dc4,160819192,0,0x0,8
tick,0x7ff999646dc4,160834463,0,0x0,8
tick,0x7ff999646dc4,160869847,0,0x0,8
tick,0x7ff999646dc4,160882632,0,0x0,8
tick,0x7ff999646dc4,160896932,0,0x0,8
tick,0x7ff999646dc4,160911124,0,0x0,8
tick,0x7ff999646dc4,160926022,0,0x0,8
tick,0x7ff999646dc4,160941520,0,0x0,8
tick,0x7ff999646dc4,160956133,0,0x0,8
tick,0x7ff999646dc4,160971500,0,0x0,8
tick,0x7ff999646dc4,160987755,0,0x0,8
tick,0x7ff999646dc4,161004237,0,0x0,8
tick,0x7ff999646dc4,161019120,0,0x0,8
tick,0x7ff999646dc4,161034138,0,0x0,8
tick,0x7ff999646dc4,161050658,0,0x0,8
tick,0x7ff999646dc4,161068878,0,0x0,8
tick,0x7ff999646dc4,161080481,0,0x0,8
tick,0x7ff999646dc4,161094267,0,0x0,8
tick,0x7ff999646dc4,161120936,0,0x0,8
tick,0x7ff999646dc4,161131707,0,0x0,8
tick,0x7ff999646dc4,161141439,0,0x0,8
tick,0x7ff999646dc4,161160178,0,0x0,8
tick,0x7ff999646dc4,161173377,0,0x0,8
tick,0x7ff999646dc4,161191035,0,0x0,8
tick,0x7ff999646dc4,161202932,0,0x0,8
tick,0x7ff999646dc4,161218403,0,0x0,8
tick,0x7ff999646dc4,161238573,0,0x0,8
tick,0x7ff999646dc4,161250902,0,0x0,8
tick,0x7ff999646dc4,161268774,0,0x0,8
tick,0x7ff999646dc4,161279731,0,0x0,8
tick,0x7ff999646dc4,161293942,0,0x0,8
tick,0x7ff999646dc4,161308617,0,0x0,8
tick,0x7ff999646dc4,161323749,0,0x0,8
tick,0x7ff999646dc4,161338920,0,0x0,8
tick,0x7ff999646dc4,161354782,0,0x0,8
tick,0x7ff999646dc4,161370877,0,0x0,8
tick,0x7ff999646dc4,161389139,0,0x0,8
tick,0x7ff999646dc4,161400119,0,0x0,8
tick,0x7ff999646dc4,161418578,0,0x0,8
tick,0x7ff999646dc4,161437508,0,0x0,8
tick,0x7ff999646dc4,161447211,0,0x0,8
tick,0x7ff999646dc4,161463471,0,0x0,8
tick,0x7ff999646dc4,161477246,0,0x0,8
tick,0x7ff999646dc4,161492268,0,0x0,8
tick,0x7ff999646dc4,161509878,0,0x0,8
tick,0x7ff999646dc4,161526305,0,0x0,8
tick,0x7ff999646dc4,161538357,0,0x0,8
tick,0x7ff999646dc4,161553874,0,0x0,8
tick,0x7ff999646dc4,161569181,0,0x0,8
tick,0x7ff999646dc4,161584224,0,0x0,8
tick,0x7ff999646dc4,161600547,0,0x0,8
tick,0x7ff999646dc4,161615510,0,0x0,8
tick,0x7ff999646dc4,161630917,0,0x0,8
tick,0x7ff999646dc4,161646303,0,0x0,8
tick,0x7ff999646dc4,161661279,0,0x0,8
tick,0x7ff999646dc4,161676125,0,0x0,8
tick,0x7ff999646dc4,161691466,0,0x0,8
tick,0x7ff999646dc4,161706552,0,0x0,8
tick,0x7ff999646dc4,161723154,0,0x0,8
tick,0x7ff999646dc4,161738373,0,0x0,8
tick,0x7ff999646dc4,161753345,0,0x0,8
tick,0x7ff999646dc4,161768283,0,0x0,8
tick,0x7ff999646dc4,161783609,0,0x0,8
tick,0x7ff999646dc4,161799120,0,0x0,8
tick,0x7ff999646dc4,161814603,0,0x0,8
tick,0x7ff999646dc4,161829969,0,0x0,8
tick,0x7ff999646dc4,161847135,0,0x0,8
tick,0x7ff999646dc4,161860506,0,0x0,8
tick,0x7ff999646dc4,161876501,0,0x0,8
tick,0x7ff999646dc4,161891361,0,0x0,8
tick,0x7ff999646dc4,161906636,0,0x0,8
tick,0x7ff999646dc4,161921344,0,0x0,8
tick,0x7ff999646dc4,161937389,0,0x0,8
tick,0x7ff999646dc4,161952600,0,0x0,8
tick,0x7ff999646dc4,161967727,0,0x0,8
tick,0x7ff999646dc4,161983344,0,0x0,8
tick,0x7ff999646dc4,161999096,0,0x0,8
tick,0x7ff999646dc4,162015276,0,0x0,8
tick,0x7ff999646dc4,162030656,0,0x0,8
tick,0x7ff999646dc4,162046787,0,0x0,8
tick,0x7ff999646dc4,162060886,0,0x0,8
tick,0x7ff999646dc4,162075578,0,0x0,8
tick,0x7ff999646dc4,162090514,0,0x0,8
tick,0x7ff999646dc4,162105776,0,0x0,8
tick,0x7ff999646dc4,162121070,0,0x0,8
tick,0x7ff999646dc4,162136207,0,0x0,8
tick,0x7ff999646dc4,162151482,0,0x0,8
tick,0x7ff999646dc4,162167197,0,0x0,8
tick,0x7ff999646dc4,162182133,0,0x0,8
tick,0x7ff999646dc4,162197596,0,0x0,8
tick,0x7ff999646dc4,162213070,0,0x0,8
tick,0x7ff999646dc4,162228435,0,0x0,8
tick,0x7ff999646dc4,162243780,0,0x0,8
tick,0x7ff999646dc4,162258777,0,0x0,8
tick,0x7ff999646dc4,162273795,0,0x0,8
tick,0x7ff999646dc4,162289116,0,0x0,8
tick,0x7ff999646dc4,162304947,0,0x0,8
tick,0x7ff999646dc4,162319630,0,0x0,8
tick,0x7ff999646dc4,162335307,0,0x0,8
tick,0x7ff999646dc4,162350146,0,0x0,8
tick,0x7ff999646dc4,162365708,0,0x0,8
tick,0x7ff999646dc4,162381424,0,0x0,8
tick,0x7ff999646dc4,162396882,0,0x0,8
tick,0x7ff999646dc4,162412081,0,0x0,8
tick,0x7ff999646dc4,162427535,0,0x0,8
tick,0x7ff999646dc4,162443153,0,0x0,8
tick,0x7ff999646dc4,162458604,0,0x0,8
tick,0x7ff999646dc4,162474483,0,0x0,8
tick,0x7ff999646dc4,162489539,0,0x0,8
tick,0x7ff999646dc4,162504450,0,0x0,8
tick,0x7ff999646dc4,162520260,0,0x0,8
tick,0x7ff999646dc4,162535785,0,0x0,8
tick,0x7ff999646dc4,162550570,0,0x0,8
tick,0x7ff999646dc4,162565702,0,0x0,8
tick,0x7ff999646dc4,162581640,0,0x0,8
tick,0x7ff999646dc4,162599641,0,0x0,8
tick,0x7ff999646dc4,162611696,0,0x0,8
tick,0x7ff999646dc4,162627592,0,0x0,8
tick,0x7ff999646dc4,162642536,0,0x0,8
tick,0x7ff999646dc4,162658797,0,0x0,8
tick,0x7ff999646dc4,162673720,0,0x0,8
tick,0x7ff999646dc4,162689465,0,0x0,8
tick,0x7ff999646dc4,162705693,0,0x0,8
tick,0x7ff999646dc4,162719191,0,0x0,8
tick,0x7ff999646dc4,162735163,0,0x0,8
tick,0x7ff999646dc4,162750875,0,0x0,8
tick,0x7ff999646dc4,162765977,0,0x0,8
tick,0x7ff999646dc4,162781445,0,0x0,8
tick,0x7ff999646dc4,162797664,0,0x0,8
tick,0x7ff999646dc4,162812106,0,0x0,8
tick,0x7ff999646dc4,162826934,0,0x0,8
tick,0x7ff999646dc4,162842010,0,0x0,8
tick,0x7ff999646dc4,162857636,0,0x0,8
tick,0x7ff999646dc4,162872857,0,0x0,8
tick,0x7ff999646dc4,162888702,0,0x0,8
tick,0x7ff999646dc4,162903757,0,0x0,8
tick,0x7ff999646dc4,162919203,0,0x0,8
tick,0x7ff999646dc4,162934194,0,0x0,8
tick,0x7ff999646dc4,162949734,0,0x0,8
tick,0x7ff999646dc4,162965234,0,0x0,8
tick,0x7ff999646dc4,162980247,0,0x0,8
tick,0x7ff999646dc4,162995327,0,0x0,8
tick,0x7ff999646dc4,163011184,0,0x0,8
tick,0x7ff999646dc4,163026060,0,0x0,8
tick,0x7ff999646dc4,163041253,0,0x0,8
tick,0x7ff999646dc4,163056834,0,0x0,8
tick,0x7ff999646dc4,163072953,0,0x0,8
tick,0x7ff999646dc4,163087581,0,0x0,8
tick,0x7ff999646dc4,163102949,0,0x0,8
tick,0x7ff999646dc4,163119712,0,0x0,8
tick,0x7ff999646dc4,163134835,0,0x0,8
tick,0x7ff999646dc4,163149657,0,0x0,8
tick,0x7ff999646dc4,163165632,0,0x0,8
tick,0x7ff999646dc4,163180851,0,0x0,8
tick,0x7ff999646dc4,163196009,0,0x0,8
tick,0x7ff999646dc4,163210616,0,0x0,8
tick,0x7ff999646dc4,163226757,0,0x0,8
tick,0x7ff999646dc4,163241931,0,0x0,8
tick,0x7ff999646dc4,163256296,0,0x0,8
tick,0x7ff999646dc4,163271715,0,0x0,8
tick,0x7ff999646dc4,163286797,0,0x0,8
tick,0x7ff999646dc4,163302751,0,0x0,8
tick,0x7ff999646dc4,163317785,0,0x0,8
tick,0x7ff999646dc4,163333389,0,0x0,8
tick,0x7ff999646dc4,163349559,0,0x0,8
tick,0x7ff999646dc4,163363832,0,0x0,8
tick,0x7ff999646dc4,163379551,0,0x0,8
tick,0x7ff999646dc4,163394608,0,0x0,8
tick,0x7ff999646dc4,163410624,0,0x0,8
tick,0x7ff999646dc4,163425015,0,0x0,8
tick,0x7ff999646dc4,163440790,0,0x0,8
tick,0x7ff999646dc4,163455937,0,0x0,8
tick,0x7ff999646dc4,163471327,0,0x0,8
tick,0x7ff999646dc4,163486858,0,0x0,8
tick,0x7ff999646dc4,163503511,0,0x0,8
tick,0x7ff999646dc4,163518565,0,0x0,8
tick,0x7ff999646dc4,163534312,0,0x0,8
tick,0x7ff999646dc4,163549012,0,0x0,8
tick,0x7ff999646dc4,163563377,0,0x0,8
tick,0x7ff999646dc4,163578566,0,0x0,8
tick,0x7ff999646dc4,163615050,0,0x0,8
tick,0x7ff999646dc4,163623821,0,0x0,8
tick,0x7ff999646dc4,163640114,0,0x0,8
tick,0x7ff999646dc4,163654524,0,0x0,8
tick,0x7ff999646dc4,163670583,0,0x0,8
tick,0x7ff999646dc4,163687449,0,0x0,8
tick,0x7ff999646dc4,163701482,0,0x0,8
tick,0x7ff999646dc4,163717431,0,0x0,8
tick,0x7ff999646dc4,163733685,0,0x0,8
tick,0x7ff999646dc4,163746797,0,0x0,8
tick,0x7ff999646dc4,163762337,0,0x0,8
tick,0x7ff999646dc4,163777728,0,0x0,8
tick,0x7ff999646dc4,163792156,0,0x0,8
tick,0x7ff999646dc4,163807734,0,0x0,8
tick,0x7ff999646dc4,163822724,0,0x0,8
tick,0x7ff999646dc4,163838070,0,0x0,8
tick,0x7ff999646dc4,163855987,0,0x0,8
tick,0x7ff999646dc4,163870573,0,0x0,8
tick,0x7ff999646dc4,163886523,0,0x0,8
tick,0x7ff999646dc4,163903072,0,0x0,8
tick,0x7ff999646dc4,163918474,0,0x0,8
tick,0x7ff999646dc4,163933243,0,0x0,8
tick,0x7ff999646dc4,163945856,0,0x0,8
tick,0x7ff999646dc4,163961341,0,0x0,8
tick,0x7ff999646dc4,163976688,0,0x0,8
tick,0x7ff999646dc4,163991873,0,0x0,8
tick,0x7ff999646dc4,164007014,0,0x0,8
tick,0x7ff999646dc4,164022245,0,0x0,8
tick,0x7ff999646dc4,164038397,0,0x0,8
tick,0x7ff999646dc4,164054314,0,0x0,8
tick,0x7ff999646dc4,164070126,0,0x0,8
tick,0x7ff999646dc4,164085158,0,0x0,8
tick,0x7ff999646dc4,164102055,0,0x0,8
tick,0x7ff999646dc4,164116199,0,0x0,8
tick,0x7ff999646dc4,164129896,0,0x0,8
tick,0x7ff999646dc4,164145173,0,0x0,8
tick,0x7ff999646dc4,164160258,0,0x0,8
tick,0x7ff999646dc4,164176221,0,0x0,8
tick,0x7ff999646dc4,164191748,0,0x0,8
tick,0x7ff999646dc4,164207118,0,0x0,8
tick,0x7ff999646dc4,164222678,0,0x0,8
tick,0x7ff999646dc4,164238983,0,0x0,8
tick,0x7ff999646dc4,164252352,0,0x0,8
tick,0x7ff999646dc4,164268838,0,0x0,8
tick,0x7ff999646dc4,164285535,0,0x0,8
tick,0x7ff999646dc4,164301006,0,0x0,8
tick,0x7ff999646dc4,164314121,0,0x0,8
tick,0x7ff999646dc4,164328640,0,0x0,8
tick,0x7ff999646dc4,164343649,0,0x0,8
tick,0x7ff999646dc4,164358975,0,0x0,8
tick,0x7ff999646dc4,164374574,0,0x0,8
tick,0x7ff999646dc4,164390048,0,0x0,8
tick,0x7ff999646dc4,164404994,0,0x0,8
tick,0x7ff999646dc4,164420506,0,0x0,8
tick,0x7ff999646dc4,164436028,0,0x0,8
tick,0x7ff999646dc4,164452088,0,0x0,8
tick,0x7ff999646dc4,164467566,0,0x0,8
tick,0x7ff999646dc4,164482944,0,0x0,8
tick,0x7ff999646dc4,164497112,0,0x0,8
tick,0x7ff999646dc4,164513334,0,0x0,8
tick,0x7ff999646dc4,164529727,0,0x0,8
tick,0x7ff999646dc4,164546413,0,0x0,8
tick,0x7ff999646dc4,164558958,0,0x0,8
tick,0x7ff999646dc4,164574019,0,0x0,8
tick,0x7ff999646dc4,164590948,0,0x0,8
tick,0x7ff999646dc4,164604601,0,0x0,8
tick,0x7ff999646dc4,164620113,0,0x0,8
tick,0x7ff999646dc4,164635140,0,0x0,8
tick,0x7ff999646dc4,164651151,0,0x0,8
tick,0x7ff999646dc4,164668554,0,0x0,8
tick,0x7ff999646dc4,164681278,0,0x0,8
tick,0x7ff999646dc4,164697814,0,0x0,8
tick,0x7ff999646dc4,164712994,0,0x0,8
tick,0x7ff999646dc4,164728285,0,0x0,8
tick,0x7ff999646dc4,164742725,0,0x0,8
tick,0x7ff999646dc4,164758335,0,0x0,8
tick,0x7ff999646dc4,164773504,0,0x0,8
tick,0x7ff999646dc4,164789265,0,0x0,8
tick,0x7ff999646dc4,164804432,0,0x0,8
tick,0x7ff999646dc4,164819898,0,0x0,8
tick,0x7ff999646dc4,164835543,0,0x0,8
tick,0x7ff999646dc4,164851396,0,0x0,8
tick,0x7ff999646dc4,164866149,0,0x0,8
tick,0x7ff999646dc4,164880508,0,0x0,8
tick,0x7ff999646dc4,164895755,0,0x0,8
tick,0x7ff999646dc4,164910920,0,0x0,8
tick,0x7ff999646dc4,164927211,0,0x0,8
tick,0x7ff999646dc4,164943354,0,0x0,8
tick,0x7ff999646dc4,164958433,0,0x0,8
tick,0x7ff999646dc4,164973872,0,0x0,8
tick,0x7ff999646dc4,164988375,0,0x0,8
tick,0x7ff999646dc4,165003959,0,0x0,8
tick,0x7ff999646dc4,165019752,0,0x0,8
tick,0x7ff999646dc4,165035645,0,0x0,8
tick,0x7ff999646dc4,165051697,0,0x0,8
tick,0x7ff999646dc4,165066693,0,0x0,8
tick,0x7ff999646dc4,165081525,0,0x0,8
tick,0x7ff999646dc4,165096426,0,0x0,8
tick,0x7ff999646dc4,165111783,0,0x0,8
tick,0x7ff999646dc4,165127204,0,0x0,8
tick,0x7ff999646dc4,165141789,0,0x0,8
tick,0x7ff999646dc4,165157663,0,0x0,8
tick,0x7ff999646dc4,165172099,0,0x0,8
tick,0x7ff999646dc4,165186993,0,0x0,8
tick,0x7ff999646dc4,165202852,0,0x0,8
tick,0x7ff999646dc4,165219440,0,0x0,8
tick,0x7ff999646dc4,165233451,0,0x0,8
tick,0x7ff999646dc4,165248197,0,0x0,8
tick,0x7ff999646dc4,165263983,0,0x0,8
tick,0x7ff999646dc4,165279641,0,0x0,8
tick,0x7ff999646dc4,165294397,0,0x0,8
tick,0x7ff999646dc4,165309302,0,0x0,8
tick,0x7ff999646dc4,165324629,0,0x0,8
tick,0x7ff999646dc4,165340948,0,0x0,8
tick,0x7ff999646dc4,165355762,0,0x0,8
tick,0x7ff999646dc4,165371448,0,0x0,8
tick,0x7ff999646dc4,165387194,0,0x0,8
tick,0x7ff999646dc4,165402157,0,0x0,8
tick,0x7ff999646dc4,165417634,0,0x0,8
tick,0x7ff999646dc4,165432713,0,0x0,8
tick,0x7ff999646dc4,165448896,0,0x0,8
tick,0x7ff999646dc4,165463809,0,0x0,8
tick,0x7ff999646dc4,165479532,0,0x0,8
tick,0x7ff999646dc4,165494619,0,0x0,8
tick,0x7ff999646dc4,165509595,0,0x0,8
tick,0x7ff999646dc4,165524760,0,0x0,8
tick,0x7ff999646dc4,165539960,0,0x0,8
tick,0x7ff999646dc4,165555428,0,0x0,8
tick,0x7ff999646dc4,165570573,0,0x0,8
tick,0x7ff999646dc4,165586279,0,0x0,8
tick,0x7ff999646dc4,165602950,0,0x0,8
tick,0x7ff999646dc4,165616628,0,0x0,8
tick,0x7ff999646dc4,165632106,0,0x0,8
tick,0x7ff999646dc4,165647361,0,0x0,8
tick,0x7ff999646dc4,165663419,0,0x0,8
tick,0x7ff999646dc4,165677934,0,0x0,8
tick,0x7ff999646dc4,165693811,0,0x0,8
tick,0x7ff999646dc4,165709435,0,0x0,8
tick,0x7ff999646dc4,165723893,0,0x0,8
tick,0x7ff999646dc4,165739428,0,0x0,8
tick,0x7ff999646dc4,165754906,0,0x0,8
tick,0x7ff999646dc4,165770870,0,0x0,8
tick,0x7ff999646dc4,165786098,0,0x0,8
tick,0x7ff999646dc4,165802170,0,0x0,8
tick,0x7ff999646dc4,165817356,0,0x0,8
tick,0x7ff999646dc4,165832780,0,0x0,8
tick,0x7ff999646dc4,165847653,0,0x0,8
tick,0x7ff999646dc4,165862838,0,0x0,8
tick,0x7ff999646dc4,165878511,0,0x0,8
tick,0x7ff999646dc4,165893790,0,0x0,8
tick,0x7ff999646dc4,165909256,0,0x0,8
tick,0x7ff999646dc4,165924609,0,0x0,8
tick,0x7ff999646dc4,165939727,0,0x0,8
tick,0x7ff999646dc4,165955368,0,0x0,8
tick,0x7ff999646dc4,165970100,0,0x0,8
tick,0x7ff999646dc4,165985549,0,0x0,8
tick,0x7ff999646dc4,166000652,0,0x0,8
tick,0x7ff999646dc4,166016435,0,0x0,8
tick,0x7ff999646dc4,166032048,0,0x0,8
tick,0x7ff999646dc4,166046639,0,0x0,8
tick,0x7ff999646dc4,166062314,0,0x0,8
tick,0x7ff999646dc4,166077656,0,0x0,8
tick,0x7ff999646dc4,166093161,0,0x0,8
tick,0x7ff999646dc4,166108164,0,0x0,8
tick,0x7ff999646dc4,166124193,0,0x0,8
tick,0x7ff999646dc4,166139228,0,0x0,8
tick,0x7ff999646dc4,166154088,0,0x0,8
tick,0x7ff999646dc4,166170147,0,0x0,8
tick,0x7ff999646dc4,166184419,0,0x0,8
tick,0x7ff999646dc4,166200156,0,0x0,8
tick,0x7ff999646dc4,166216230,0,0x0,8
tick,0x7ff999646dc4,166231105,0,0x0,8
tick,0x7ff999646dc4,166246903,0,0x0,8
tick,0x7ff999646dc4,166261320,0,0x0,8
tick,0x7ff999646dc4,166276645,0,0x0,8
tick,0x7ff999646dc4,166292582,0,0x0,8
tick,0x7ff999646dc4,166307520,0,0x0,8
tick,0x7ff999646dc4,166322960,0,0x0,8
tick,0x7ff999646dc4,166338298,0,0x0,8
tick,0x7ff999646dc4,166353621,0,0x0,8
tick,0x7ff999646dc4,166368591,0,0x0,8
tick,0x7ff999646dc4,166384916,0,0x0,8
tick,0x7ff999646dc4,166399490,0,0x0,8
tick,0x7ff999646dc4,166415132,0,0x0,8
tick,0x7ff999646dc4,166430415,0,0x0,8
tick,0x7ff999646dc4,166446305,0,0x0,8
tick,0x7ff999646dc4,166462217,0,0x0,8
tick,0x7ff999646dc4,166476687,0,0x0,8
tick,0x7ff999646dc4,166492193,0,0x0,8
tick,0x7ff999646dc4,166507786,0,0x0,8
tick,0x7ff999646dc4,166523231,0,0x0,8
tick,0x7ff999646dc4,166538362,0,0x0,8
tick,0x7ff999646dc4,166554334,0,0x0,8
tick,0x7ff999646dc4,166569338,0,0x0,8
tick,0x7ff999646dc4,166584269,0,0x0,8
tick,0x7ff999646dc4,166599098,0,0x0,8
tick,0x7ff999646dc4,166614521,0,0x0,8
tick,0x7ff999646dc4,166629978,0,0x0,8
tick,0x7ff999646dc4,166645062,0,0x0,8
tick,0x7ff999646dc4,166682748,0,0x0,8
tick,0x7ff999646dc4,166707503,0,0x0,8
tick,0x7ff999646dc4,166728089,0,0x0,8
tick,0x7ff999646dc4,166758790,0,0x0,8
tick,0x7ff999646dc4,166774430,0,0x0,8
tick,0x7ff999646dc4,166794570,0,0x0,8
tick,0x7ff999646dc4,166814302,0,0x0,8
tick,0x7ff999646dc4,166830126,0,0x0,8
tick,0x7ff999646dc4,166847642,0,0x0,8
tick,0x7ff999646dc4,166860230,0,0x0,8
tick,0x7ff999646dc4,166875879,0,0x0,8
tick,0x7ff999646dc4,166890590,0,0x0,8
tick,0x7ff999646dc4,166908130,0,0x0,8
tick,0x7ff999646dc4,166922304,0,0x0,8
tick,0x7ff999646dc4,166940898,0,0x0,8
tick,0x7ff999646dc4,166953500,0,0x0,8
tick,0x7ff999646dc4,166970223,0,0x0,8
tick,0x7ff999646dc4,166982860,0,0x0,8
tick,0x7ff999646dc4,166998282,0,0x0,8
tick,0x7ff999646dc4,167013359,0,0x0,8
tick,0x7ff999646dc4,167028166,0,0x0,8
tick,0x7ff999646dc4,167042978,0,0x0,8
tick,0x7ff999646dc4,167058793,0,0x0,8
tick,0x7ff999646dc4,167073711,0,0x0,8
tick,0x7ff999646dc4,167091494,0,0x0,8
tick,0x7ff999646dc4,167104366,0,0x0,8
tick,0x7ff999646dc4,167123455,0,0x0,8
tick,0x7ff999646dc4,167137132,0,0x0,8
tick,0x7ff999646dc4,167149758,0,0x0,8
tick,0x7ff999646dc4,167165409,0,0x0,8
tick,0x7ff999646dc4,167181122,0,0x0,8
tick,0x7ff999646dc4,167195686,0,0x0,8
tick,0x7ff999646dc4,167211016,0,0x0,8
tick,0x7ff999646dc4,167226429,0,0x0,8
tick,0x7ff999646dc4,167241508,0,0x0,8
tick,0x7ff999646dc4,167256395,0,0x0,8
tick,0x7ff999646dc4,167272468,0,0x0,8
tick,0x7ff999646dc4,167291184,0,0x0,8
tick,0x7ff999646dc4,167304174,0,0x0,8
tick,0x7ff999646dc4,167322575,0,0x0,8
tick,0x7ff999646dc4,167333814,0,0x0,8
tick,0x7ff999646dc4,167348474,0,0x0,8
tick,0x7ff999646dc4,167364104,0,0x0,8
tick,0x7ff999646dc4,167379188,0,0x0,8
tick,0x7ff999646dc4,167394466,0,0x0,8
tick,0x7ff999646dc4,167409468,0,0x0,8
tick,0x7ff999646dc4,167425018,0,0x0,8
tick,0x7ff999646dc4,167440998,0,0x0,8
tick,0x7ff999646dc4,167456557,0,0x0,8
tick,0x7ff999646dc4,167472643,0,0x0,8
tick,0x7ff999646dc4,167488025,0,0x0,8
tick,0x7ff999646dc4,167505041,0,0x0,8
tick,0x7ff999646dc4,167517495,0,0x0,8
tick,0x7ff999646dc4,167532505,0,0x0,8
tick,0x7ff999646dc4,167548464,0,0x0,8
tick,0x7ff999646dc4,167563416,0,0x0,8
tick,0x7ff999646dc4,167579055,0,0x0,8
tick,0x7ff999646dc4,167593669,0,0x0,8
tick,0x7ff999646dc4,167608952,0,0x0,8
tick,0x7ff999646dc4,167624601,0,0x0,8
tick,0x7ff999646dc4,167640238,0,0x0,8
tick,0x7ff999646dc4,167656157,0,0x0,8
tick,0x7ff999646dc4,167671846,0,0x0,8
tick,0x7ff999646dc4,167687519,0,0x0,8
tick,0x7ff999646dc4,167702121,0,0x0,8
tick,0x7ff999646dc4,167717417,0,0x0,8
tick,0x7ff999646dc4,167732577,0,0x0,8
tick,0x7ff999646dc4,167748659,0,0x0,8
tick,0x7ff999646dc4,167764288,0,0x0,8
tick,0x7ff999646dc4,167779799,0,0x0,8
tick,0x7ff999646dc4,167795575,0,0x0,8
tick,0x7ff999646dc4,167810264,0,0x0,8
tick,0x7ff999646dc4,167825538,0,0x0,8
tick,0x7ff999646dc4,167840579,0,0x0,8
tick,0x7ff999646dc4,167855783,0,0x0,8
tick,0x7ff999646dc4,167871631,0,0x0,8
tick,0x7ff999646dc4,167886745,0,0x0,8
tick,0x7ff999646dc4,167900794,0,0x0,8
tick,0x7ff999646dc4,167916850,0,0x0,8
tick,0x7ff999646dc4,167932013,0,0x0,8
tick,0x7ff999646dc4,167947791,0,0x0,8
tick,0x7ff999646dc4,167963114,0,0x0,8
tick,0x7ff999646dc4,167979045,0,0x0,8
tick,0x7ff999646dc4,167993905,0,0x0,8
tick,0x7ff999646dc4,168009019,0,0x0,8
tick,0x7ff999646dc4,168023319,0,0x0,8
tick,0x7ff999646dc4,168038963,0,0x0,8
tick,0x7ff999646dc4,168054221,0,0x0,8
tick,0x7ff999646dc4,168070352,0,0x0,8
tick,0x7ff999646dc4,168085657,0,0x0,8
tick,0x7ff999646dc4,168102168,0,0x0,8
tick,0x7ff999646dc4,168116343,0,0x0,8
tick,0x7ff999646dc4,168131889,0,0x0,8
tick,0x7ff999646dc4,168146664,0,0x0,8
tick,0x7ff999646dc4,168162424,0,0x0,8
tick,0x7ff999646dc4,168177256,0,0x0,8
tick,0x7ff999646dc4,168193542,0,0x0,8
tick,0x7ff999646dc4,168209006,0,0x0,8
tick,0x7ff999646dc4,168224134,0,0x0,8
tick,0x7ff999646dc4,168238899,0,0x0,8
tick,0x7ff999646dc4,168254818,0,0x0,8
tick,0x7ff999646dc4,168269112,0,0x0,8
tick,0x7ff999646dc4,168284865,0,0x0,8
tick,0x7ff999646dc4,168300125,0,0x0,8
tick,0x7ff999646dc4,168315387,0,0x0,8
tick,0x7ff999646dc4,168330775,0,0x0,8
tick,0x7ff999646dc4,168345861,0,0x0,8
tick,0x7ff999646dc4,168361256,0,0x0,8
tick,0x7ff999646dc4,168376448,0,0x0,8
tick,0x7ff999646dc4,168391988,0,0x0,8
tick,0x7ff999646dc4,168407487,0,0x0,8
tick,0x7ff999646dc4,168422495,0,0x0,8
tick,0x7ff999646dc4,168437277,0,0x0,8
tick,0x7ff999646dc4,168452679,0,0x0,8
tick,0x7ff999646dc4,168468574,0,0x0,8
tick,0x7ff999646dc4,168483766,0,0x0,8
tick,0x7ff999646dc4,168499227,0,0x0,8
tick,0x7ff999646dc4,168514453,0,0x0,8
tick,0x7ff999646dc4,168530024,0,0x0,8
tick,0x7ff999646dc4,168545101,0,0x0,8
tick,0x7ff999646dc4,168560175,0,0x0,8
tick,0x7ff999646dc4,168575630,0,0x0,8
tick,0x7ff999646dc4,168591406,0,0x0,8
tick,0x7ff999646dc4,168606469,0,0x0,8
tick,0x7ff999646dc4,168621944,0,0x0,8
tick,0x7ff999646dc4,168637324,0,0x0,8
tick,0x7ff999646dc4,168652780,0,0x0,8
tick,0x7ff999646dc4,168668252,0,0x0,8
tick,0x7ff999646dc4,168682910,0,0x0,8
tick,0x7ff999646dc4,168698802,0,0x0,8
tick,0x7ff999646dc4,168714000,0,0x0,8
tick,0x7ff999646dc4,168729815,0,0x0,8
tick,0x7ff999646dc4,168745057,0,0x0,8
tick,0x7ff999646dc4,168759535,0,0x0,8
tick,0x7ff999646dc4,168775595,0,0x0,8
tick,0x7ff999646dc4,168790695,0,0x0,8
tick,0x7ff999646dc4,168806069,0,0x0,8
tick,0x7ff999646dc4,168821099,0,0x0,8
tick,0x7ff999646dc4,168836690,0,0x0,8
tick,0x7ff999646dc4,168851369,0,0x0,8
tick,0x7ff999646dc4,168867625,0,0x0,8
tick,0x7ff999646dc4,168882544,0,0x0,8
tick,0x7ff999646dc4,168898307,0,0x0,8
tick,0x7ff999646dc4,168913881,0,0x0,8
tick,0x7ff999646dc4,168929021,0,0x0,8
tick,0x7ff999646dc4,168943766,0,0x0,8
tick,0x7ff999646dc4,168959884,0,0x0,8
tick,0x7ff999646dc4,168975373,0,0x0,8
tick,0x7ff999646dc4,168990710,0,0x0,8
tick,0x7ff999646dc4,169006089,0,0x0,8
tick,0x7ff999646dc4,169020384,0,0x0,8
tick,0x7ff999646dc4,169036407,0,0x0,8
tick,0x7ff999646dc4,169051390,0,0x0,8
tick,0x7ff999646dc4,169066428,0,0x0,8
tick,0x7ff999646dc4,169081819,0,0x0,8
tick,0x7ff999646dc4,169097064,0,0x0,8
tick,0x7ff999646dc4,169112731,0,0x0,8
tick,0x7ff999646dc4,169127677,0,0x0,8
tick,0x7ff999646dc4,169143023,0,0x0,8
tick,0x7ff999646dc4,169158996,0,0x0,8
tick,0x7ff999646dc4,169174391,0,0x0,8
tick,0x7ff999646dc4,169188584,0,0x0,8
tick,0x7ff999646dc4,169204384,0,0x0,8
tick,0x7ff999646dc4,169219517,0,0x0,8
tick,0x7ff999646dc4,169234786,0,0x0,8
tick,0x7ff999646dc4,169250339,0,0x0,8
tick,0x7ff999646dc4,169266749,0,0x0,8
tick,0x7ff999646dc4,169281768,0,0x0,8
tick,0x7ff999646dc4,169296664,0,0x0,8
tick,0x7ff999646dc4,169312073,0,0x0,8
tick,0x7ff999646dc4,169326986,0,0x0,8
tick,0x7ff999646dc4,169342292,0,0x0,8
tick,0x7ff999646dc4,169357301,0,0x0,8
tick,0x7ff999646dc4,169372977,0,0x0,8
tick,0x7ff999646dc4,169388401,0,0x0,8
tick,0x7ff999646dc4,169403997,0,0x0,8
tick,0x7ff999646dc4,169419008,0,0x0,8
tick,0x7ff999646dc4,169434054,0,0x0,8
tick,0x7ff999646dc4,169449720,0,0x0,8
tick,0x7ff999646dc4,169465194,0,0x0,8
tick,0x7ff999646dc4,169480627,0,0x0,8
tick,0x7ff999646dc4,169496001,0,0x0,8
tick,0x7ff999646dc4,169511750,0,0x0,8
tick,0x7ff999646dc4,169527123,0,0x0,8
tick,0x7ff999646dc4,169541479,0,0x0,8
tick,0x7ff999646dc4,169557084,0,0x0,8
tick,0x7ff999646dc4,169571706,0,0x0,8
tick,0x7ff999646dc4,169587424,0,0x0,8
tick,0x7ff999646dc4,169603565,0,0x0,8
tick,0x7ff999646dc4,169618347,0,0x0,8
tick,0x7ff999646dc4,169634063,0,0x0,8
tick,0x7ff999646dc4,169649247,0,0x0,8
tick,0x7ff999646dc4,169664496,0,0x0,8
tick,0x7ff999646dc4,169679966,0,0x0,8
tick,0x7ff999646dc4,169695293,0,0x0,8
tick,0x7ff999646dc4,169713855,0,0x0,8
tick,0x7ff999646dc4,169726342,0,0x0,8
tick,0x7ff999646dc4,169745430,0,0x0,8
tick,0x7ff999646dc4,169757426,0,0x0,8
tick,0x7ff999646dc4,169786225,0,0x0,8
tick,0x7ff999646dc4,169810619,0,0x0,8
tick,0x7ff999646dc4,169820751,0,0x0,8
tick,0x7ff999646dc4,169880852,0,0x0,8
tick,0x7ff999646dc4,169914526,0,0x0,8
tick,0x7ff999646dc4,169929839,0,0x0,8
tick,0x7ff999646dc4,169941654,0,0x0,8
tick,0x7ff999646dc4,169957809,0,0x0,8
tick,0x7ff999646dc4,169972530,0,0x0,8
tick,0x7ff999646dc4,169987464,0,0x0,8
tick,0x7ff999646dc4,170015519,0,0x0,8
tick,0x7ff999646dc4,170056401,0,0x0,8
tick,0x7ff999646dc4,170074668,0,0x0,8
tick,0x7ff999646dc4,170079039,0,0x0,8
tick,0x7ff999646dc4,170096893,0,0x0,8
tick,0x7ff999646dc4,170119379,0,0x0,8
tick,0x7ff999646dc4,170126295,0,0x0,8
tick,0x7ff999646dc4,170166001,0,0x0,8
tick,0x7ff999646dc4,170181526,0,0x0,8
tick,0x7ff999646dc4,170195080,0,0x0,8
tick,0x7ff999646dc4,170205861,0,0x0,8
tick,0x7ff999646dc4,170220467,0,0x0,8
tick,0x7ff999646dc4,170231935,0,0x0,8
tick,0x7ff999646dc4,170248755,0,0x0,8
tick,0x7ff999646dc4,170268709,0,0x0,8
tick,0x7ff999646dc4,170286618,0,0x0,8
tick,0x7ff999646dc4,170295560,0,0x0,8
tick,0x7ff999646dc4,170317319,0,0x0,8
tick,0x7ff999646dc4,170331111,0,0x0,8
tick,0x7ff999646dc4,170344236,0,0x0,8
tick,0x7ff999646dc4,170362546,0,0x0,8
tick,0x7ff999646dc4,170385986,0,0x0,8
tick,0x7ff999646dc4,170412545,0,0x0,8
tick,0x7ff999646dc4,170424378,0,0x0,8
tick,0x7ff999646dc4,170449091,0,0x0,8
tick,0x7ff999646dc4,170526570,0,0x0,8
tick,0x7ff999646dc4,170543981,0,0x0,8
tick,0x7ff999646dc4,170645888,0,0x0,8
tick,0x7ff999646dc4,170677672,0,0x0,8
tick,0x7ff999646dc4,170691993,0,0x0,8
tick,0x7ff999646dc4,170709208,0,0x0,8
tick,0x7ff999646dc4,170729368,0,0x0,8
tick,0x7ff999646dc4,170736458,0,0x0,8
tick,0x7ff999646dc4,170751968,0,0x0,8
tick,0x7ff999646dc4,170767282,0,0x0,8
tick,0x7ff999646dc4,170787382,0,0x0,8
tick,0x7ff999646dc4,170800735,0,0x0,8
tick,0x7ff999646dc4,170813900,0,0x0,8
tick,0x7ff999646dc4,170858282,0,0x0,8
tick,0x7ff999646dc4,170876143,0,0x0,8
tick,0x7ff999646dc4,170891690,0,0x0,8
tick,0x7ff999646dc4,170907562,0,0x0,8
tick,0x7ff999646dc4,170920602,0,0x0,8
tick,0x7ff999646dc4,170935777,0,0x0,8
tick,0x7ff999646dc4,170951204,0,0x0,8
tick,0x7ff999646dc4,170966800,0,0x0,8
tick,0x7ff999646dc4,170981628,0,0x0,8
tick,0x7ff999646dc4,170997161,0,0x0,8
tick,0x7ff999646dc4,171013106,0,0x0,8
tick,0x7ff999646dc4,171028047,0,0x0,8
tick,0x7ff999646dc4,171044358,0,0x0,8
tick,0x7ff999646dc4,171060159,0,0x0,8
tick,0x7ff999646dc4,171076278,0,0x0,8
tick,0x7ff999646dc4,171093045,0,0x0,8
tick,0x7ff999646dc4,171113176,0,0x0,8
tick,0x7ff999646dc4,171120138,0,0x0,8
tick,0x7ff999646dc4,171134769,0,0x0,8
tick,0x7ff999646dc4,171151112,0,0x0,8
tick,0x7ff999646dc4,171167941,0,0x0,8
tick,0x7ff999646dc4,171183152,0,0x0,8
tick,0x7ff999646dc4,171196472,0,0x0,8
tick,0x7ff999646dc4,171211989,0,0x0,8
tick,0x7ff999646dc4,171228670,0,0x0,8
tick,0x7ff999646dc4,171242101,0,0x0,8
tick,0x7ff999646dc4,171260453,0,0x0,8
tick,0x7ff999646dc4,171271814,0,0x0,8
tick,0x7ff999646dc4,171292990,0,0x0,8
tick,0x7ff999646dc4,171303477,0,0x0,8
tick,0x7ff999646dc4,171319659,0,0x0,8
tick,0x7ff999646dc4,171338027,0,0x0,8
tick,0x7ff999646dc4,171350441,0,0x0,8
tick,0x7ff999646dc4,171363555,0,0x0,8
tick,0x7ff999646dc4,171379040,0,0x0,8
tick,0x7ff999646dc4,171395280,0,0x0,8
tick,0x7ff999646dc4,171409763,0,0x0,8
tick,0x7ff999646dc4,171426340,0,0x0,8
tick,0x7ff999646dc4,171443499,0,0x0,8
tick,0x7ff999646dc4,171454642,0,0x0,8
tick,0x7ff999646dc4,171470731,0,0x0,8
tick,0x7ff999646dc4,171485809,0,0x0,8
tick,0x7ff999646dc4,171501120,0,0x0,8
tick,0x7ff999646dc4,171516975,0,0x0,8
tick,0x7ff999646dc4,171532674,0,0x0,8
tick,0x7ff999646dc4,171550943,0,0x0,8
tick,0x7ff999646dc4,171562763,0,0x0,8
tick,0x7ff999646dc4,171578150,0,0x0,8
tick,0x7ff999646dc4,171594553,0,0x0,8
tick,0x7ff999646dc4,171611592,0,0x0,8
tick,0x7ff999646dc4,171624840,0,0x0,8
tick,0x7ff999646dc4,171640822,0,0x0,8
tick,0x7ff999646dc4,171655236,0,0x0,8
tick,0x7ff999646dc4,171669531,0,0x0,8
tick,0x7ff999646dc4,171684987,0,0x0,8
tick,0x7ff999646dc4,171700442,0,0x0,8
tick,0x7ff999646dc4,171715795,0,0x0,8
tick,0x7ff999646dc4,171731197,0,0x0,8
tick,0x7ff999646dc4,171745735,0,0x0,8
tick,0x7ff999646dc4,171760855,0,0x0,8
tick,0x7ff999646dc4,171777982,0,0x0,8
tick,0x7ff999646dc4,171794637,0,0x0,8
tick,0x7ff999646dc4,171807867,0,0x0,8
tick,0x7ff999646dc4,171824157,0,0x0,8
tick,0x7ff999646dc4,171844352,0,0x0,8
tick,0x7ff999646dc4,171853885,0,0x0,8
tick,0x7ff999646dc4,171868241,0,0x0,8
tick,0x7ff999646dc4,171884785,0,0x0,8
tick,0x7ff999646dc4,171899385,0,0x0,8
tick,0x7ff999646dc4,171914754,0,0x0,8
tick,0x7ff999646dc4,171930275,0,0x0,8
tick,0x7ff999646dc4,171946192,0,0x0,8
tick,0x7ff999646dc4,171960811,0,0x0,8
tick,0x7ff999646dc4,171977328,0,0x0,8
tick,0x7ff999646dc4,171991870,0,0x0,8
tick,0x7ff999646dc4,172007657,0,0x0,8
tick,0x7ff999646dc4,172022820,0,0x0,8
tick,0x7ff999646dc4,172038562,0,0x0,8
tick,0x7ff999646dc4,172053074,0,0x0,8
tick,0x7ff999646dc4,172067864,0,0x0,8
tick,0x7ff999646dc4,172083600,0,0x0,8
tick,0x7ff999646dc4,172098413,0,0x0,8
tick,0x7ff999646dc4,172113216,0,0x0,8
tick,0x7ff999646dc4,172128794,0,0x0,8
tick,0x7ff999646dc4,172144010,0,0x0,8
tick,0x7ff999646dc4,172160309,0,0x0,8
tick,0x7ff999646dc4,172175139,0,0x0,8
tick,0x7ff999646dc4,172191577,0,0x0,8
tick,0x7ff999646dc4,172205765,0,0x0,8
tick,0x7ff999646dc4,172220486,0,0x0,8
tick,0x7ff999646dc4,172235945,0,0x0,8
tick,0x7ff999646dc4,172252219,0,0x0,8
tick,0x7ff999646dc4,172267579,0,0x0,8
tick,0x7ff999646dc4,172282456,0,0x0,8
tick,0x7ff999646dc4,172297827,0,0x0,8
tick,0x7ff999646dc4,172313606,0,0x0,8
tick,0x7ff999646dc4,172328266,0,0x0,8
tick,0x7ff999646dc4,172344512,0,0x0,8
tick,0x7ff999646dc4,172360511,0,0x0,8
tick,0x7ff999646dc4,172374474,0,0x0,8
tick,0x7ff999646dc4,172390467,0,0x0,8
tick,0x7ff999646dc4,172406216,0,0x0,8
tick,0x7ff999646dc4,172420743,0,0x0,8
tick,0x7ff999646dc4,172435611,0,0x0,8
tick,0x7ff999646dc4,172451100,0,0x0,8
tick,0x7ff999646dc4,172466370,0,0x0,8
tick,0x7ff999646dc4,172481073,0,0x0,8
tick,0x7ff999646dc4,172496594,0,0x0,8
tick,0x7ff999646dc4,172512470,0,0x0,8
tick,0x7ff999646dc4,172527267,0,0x0,8
tick,0x7ff999646dc4,172543334,0,0x0,8
tick,0x7ff999646dc4,172557379,0,0x0,8
tick,0x7ff999646dc4,172573112,0,0x0,8
tick,0x7ff999646dc4,172588948,0,0x0,8
tick,0x7ff999646dc4,172604004,0,0x0,8
tick,0x7ff999646dc4,172619649,0,0x0,8
tick,0x7ff999646dc4,172635084,0,0x0,8
tick,0x7ff999646dc4,172649373,0,0x0,8
tick,0x7ff999646dc4,172664580,0,0x0,8
tick,0x7ff999646dc4,172680542,0,0x0,8
tick,0x7ff999646dc4,172695882,0,0x0,8
tick,0x7ff999646dc4,172711284,0,0x0,8
tick,0x7ff999646dc4,172727345,0,0x0,8
tick,0x7ff999646dc4,172742164,0,0x0,8
tick,0x7ff999646dc4,172757787,0,0x0,8
tick,0x7ff999646dc4,172773445,0,0x0,8
tick,0x7ff999646dc4,172789184,0,0x0,8
tick,0x7ff999646dc4,172804123,0,0x0,8
tick,0x7ff999646dc4,172819533,0,0x0,8
tick,0x7ff999646dc4,172835053,0,0x0,8
tick,0x7ff999646dc4,172850488,0,0x0,8
tick,0x7ff999646dc4,172865779,0,0x0,8
tick,0x7ff999646dc4,172880910,0,0x0,8
tick,0x7ff999646dc4,172896131,0,0x0,8
tick,0x7ff999646dc4,172912208,0,0x0,8
tick,0x7ff999646dc4,172926931,0,0x0,8
tick,0x7ff999646dc4,172942568,0,0x0,8
tick,0x7ff999646dc4,172957276,0,0x0,8
tick,0x7ff999646dc4,172973151,0,0x0,8
tick,0x7ff999646dc4,172988476,0,0x0,8
tick,0x7ff999646dc4,173003877,0,0x0,8
tick,0x7ff999646dc4,173019018,0,0x0,8
tick,0x7ff999646dc4,173034865,0,0x0,8
tick,0x7ff999646dc4,173050066,0,0x0,8
tick,0x7ff999646dc4,173065118,0,0x0,8
tick,0x7ff999646dc4,173080358,0,0x0,8
tick,0x7ff999646dc4,173096050,0,0x0,8
tick,0x7ff999646dc4,173111103,0,0x0,8
tick,0x7ff999646dc4,173126345,0,0x0,8
tick,0x7ff999646dc4,173141891,0,0x0,8
tick,0x7ff999646dc4,173157870,0,0x0,8
tick,0x7ff999646dc4,173172622,0,0x0,8
tick,0x7ff999646dc4,173187910,0,0x0,8
tick,0x7ff999646dc4,173203030,0,0x0,8
tick,0x7ff999646dc4,173218996,0,0x0,8
tick,0x7ff999646dc4,173234106,0,0x0,8
tick,0x7ff999646dc4,173249126,0,0x0,8
tick,0x7ff999646dc4,173265055,0,0x0,8
tick,0x7ff999646dc4,173279911,0,0x0,8
tick,0x7ff999646dc4,173295511,0,0x0,8
tick,0x7ff999646dc4,173310851,0,0x0,8
tick,0x7ff999646dc4,173327065,0,0x0,8
tick,0x7ff999646dc4,173341195,0,0x0,8
tick,0x7ff999646dc4,173356662,0,0x0,8
tick,0x7ff999646dc4,173372719,0,0x0,8
tick,0x7ff999646dc4,173387729,0,0x0,8
tick,0x7ff999646dc4,173403588,0,0x0,8
tick,0x7ff999646dc4,173418492,0,0x0,8
tick,0x7ff999646dc4,173434601,0,0x0,8
tick,0x7ff999646dc4,173449631,0,0x0,8
tick,0x7ff999646dc4,173464795,0,0x0,8
tick,0x7ff999646dc4,173479945,0,0x0,8
tick,0x7ff999646dc4,173495922,0,0x0,8
tick,0x7ff999646dc4,173510111,0,0x0,8
tick,0x7ff999646dc4,173525791,0,0x0,8
tick,0x7ff999646dc4,173541694,0,0x0,8
tick,0x7ff999646dc4,173558239,0,0x0,8
tick,0x7ff999646dc4,173572350,0,0x0,8
tick,0x7ff999646dc4,173588918,0,0x0,8
tick,0x7ff999646dc4,173603219,0,0x0,8
tick,0x7ff999646dc4,173618190,0,0x0,8
tick,0x7ff999646dc4,173633451,0,0x0,8
tick,0x7ff999646dc4,173649565,0,0x0,8
tick,0x7ff999646dc4,173663924,0,0x0,8
tick,0x7ff999646dc4,173679625,0,0x0,8
tick,0x7ff999646dc4,173695311,0,0x0,8
tick,0x7ff999646dc4,173709819,0,0x0,8
tick,0x7ff999646dc4,173725226,0,0x0,8
tick,0x7ff999646dc4,173741085,0,0x0,8
tick,0x7ff999646dc4,173756945,0,0x0,8
tick,0x7ff999646dc4,173771635,0,0x0,8
tick,0x7ff999646dc4,173786340,0,0x0,8
tick,0x7ff999646dc4,173802546,0,0x0,8
tick,0x7ff999646dc4,173816972,0,0x0,8
tick,0x7ff999646dc4,173832715,0,0x0,8
tick,0x7ff999646dc4,173847882,0,0x0,8
tick,0x7ff999646dc4,173863902,0,0x0,8
tick,0x7ff999646dc4,173878092,0,0x0,8
tick,0x7ff999646dc4,173893412,0,0x0,8
tick,0x7ff999646dc4,173909794,0,0x0,8
tick,0x7ff999646dc4,173925305,0,0x0,8
tick,0x7ff999646dc4,173939407,0,0x0,8
tick,0x7ff999646dc4,173954889,0,0x0,8
tick,0x7ff999646dc4,173970376,0,0x0,8
tick,0x7ff999646dc4,173985949,0,0x0,8
tick,0x7ff999646dc4,174000924,0,0x0,8
tick,0x7ff999646dc4,174017462,0,0x0,8
tick,0x7ff999646dc4,174032690,0,0x0,8
tick,0x7ff999646dc4,174047121,0,0x0,8
tick,0x7ff999646dc4,174063340,0,0x0,8
tick,0x7ff999646dc4,174079238,0,0x0,8
tick,0x7ff999646dc4,174093771,0,0x0,8
tick,0x7ff999646dc4,174108299,0,0x0,8
tick,0x7ff999646dc4,174124191,0,0x0,8
tick,0x7ff999646dc4,174139104,0,0x0,8
tick,0x7ff999646dc4,174155051,0,0x0,8
tick,0x7ff999646dc4,174170008,0,0x0,8
tick,0x7ff999646dc4,174185317,0,0x0,8
tick,0x7ff999646dc4,174199638,0,0x0,8
tick,0x7ff999646dc4,174215279,0,0x0,8
tick,0x7ff999646dc4,174230990,0,0x0,8
tick,0x7ff999646dc4,174245646,0,0x0,8
tick,0x7ff999646dc4,174261171,0,0x0,8
tick,0x7ff999646dc4,174276559,0,0x0,8
tick,0x7ff999646dc4,174292268,0,0x0,8
tick,0x7ff999646dc4,174307624,0,0x0,8
tick,0x7ff999646dc4,174322701,0,0x0,8
tick,0x7ff999646dc4,174339003,0,0x0,8
tick,0x7ff999646dc4,174353277,0,0x0,8
tick,0x7ff999646dc4,174369319,0,0x0,8
tick,0x7ff999646dc4,174384442,0,0x0,8
tick,0x7ff999646dc4,174400541,0,0x0,8
tick,0x7ff999646dc4,174414955,0,0x0,8
tick,0x7ff999646dc4,174430330,0,0x0,8
tick,0x7ff999646dc4,174446602,0,0x0,8
tick,0x7ff999646dc4,174461760,0,0x0,8
tick,0x7ff999646dc4,174476473,0,0x0,8
tick,0x7ff999646dc4,174492413,0,0x0,8
tick,0x7ff999646dc4,174507709,0,0x0,8
tick,0x7ff999646dc4,174522269,0,0x0,8
tick,0x7ff999646dc4,174538498,0,0x0,8
tick,0x7ff999646dc4,174554211,0,0x0,8
tick,0x7ff999646dc4,174568788,0,0x0,8
tick,0x7ff999646dc4,174585194,0,0x0,8
tick,0x7ff999646dc4,174600026,0,0x0,8
tick,0x7ff999646dc4,174615169,0,0x0,8
tick,0x7ff999646dc4,174629321,0,0x0,8
tick,0x7ff999646dc4,174645222,0,0x0,8
tick,0x7ff999646dc4,174661365,0,0x0,8
tick,0x7ff999646dc4,174676161,0,0x0,8
tick,0x7ff999646dc4,174691049,0,0x0,8
tick,0x7ff999646dc4,174706727,0,0x0,8
tick,0x7ff999646dc4,174722897,0,0x0,8
tick,0x7ff999646dc4,174737289,0,0x0,8
tick,0x7ff999646dc4,174752258,0,0x0,8
tick,0x7ff999646dc4,174769277,0,0x0,8
tick,0x7ff999646dc4,174784697,0,0x0,8
tick,0x7ff999646dc4,174799171,0,0x0,8
tick,0x7ff999646dc4,174814679,0,0x0,8
tick,0x7ff999646dc4,174829942,0,0x0,8
tick,0x7ff999646dc4,174848218,0,0x0,8
tick,0x7ff999646dc4,174861656,0,0x0,8
tick,0x7ff999646dc4,174878635,0,0x0,8
tick,0x7ff999646dc4,174890275,0,0x0,8
tick,0x7ff999646dc4,174905373,0,0x0,8
tick,0x7ff999646dc4,174920653,0,0x0,8
tick,0x7ff999646dc4,174936260,0,0x0,8
tick,0x7ff999646dc4,174951305,0,0x0,8
tick,0x7ff999646dc4,174966973,0,0x0,8
tick,0x7ff999646dc4,174982527,0,0x0,8
tick,0x7ff999646dc4,174997544,0,0x0,8
tick,0x7ff999646dc4,175012734,0,0x0,8
tick,0x7ff999646dc4,175028637,0,0x0,8
tick,0x7ff999646dc4,175043906,0,0x0,8
tick,0x7ff999646dc4,175058805,0,0x0,8
tick,0x7ff999646dc4,175074413,0,0x0,8
tick,0x7ff999646dc4,175089854,0,0x0,8
tick,0x7ff999646dc4,175105248,0,0x0,8
tick,0x7ff999646dc4,175120118,0,0x0,8
tick,0x7ff999646dc4,175135426,0,0x0,8
tick,0x7ff999646dc4,175151054,0,0x0,8
tick,0x7ff999646dc4,175165386,0,0x0,8
tick,0x7ff999646dc4,175180810,0,0x0,8
tick,0x7ff999646dc4,175196433,0,0x0,8
tick,0x7ff999646dc4,175211695,0,0x0,8
tick,0x7ff999646dc4,175230088,0,0x0,8
tick,0x7ff999646dc4,175242766,0,0x0,8
tick,0x7ff999646dc4,175257892,0,0x0,8
tick,0x7ff999646dc4,175273348,0,0x0,8
tick,0x7ff999646dc4,175288283,0,0x0,8
tick,0x7ff999646dc4,175304236,0,0x0,8
tick,0x7ff999646dc4,175318778,0,0x0,8
tick,0x7ff999646dc4,175334662,0,0x0,8
tick,0x7ff999646dc4,175350459,0,0x0,8
tick,0x7ff999646dc4,175365518,0,0x0,8
tick,0x7ff999646dc4,175380132,0,0x0,8
tick,0x7ff999646dc4,175395401,0,0x0,8
tick,0x7ff999646dc4,175411752,0,0x0,8
tick,0x7ff999646dc4,175425717,0,0x0,8
tick,0x7ff999646dc4,175441365,0,0x0,8
tick,0x7ff999646dc4,175457188,0,0x0,8
tick,0x7ff999646dc4,175472128,0,0x0,8
tick,0x7ff999646dc4,175487354,0,0x0,8
tick,0x7ff999646dc4,175502968,0,0x0,8
tick,0x7ff999646dc4,175518586,0,0x0,8
tick,0x7ff999646dc4,175533648,0,0x0,8
tick,0x7ff999646dc4,175549350,0,0x0,8
tick,0x7ff999646dc4,175564362,0,0x0,8
tick,0x7ff999646dc4,175580198,0,0x0,8
tick,0x7ff999646dc4,175595852,0,0x0,8
tick,0x7ff999646dc4,175610785,0,0x0,8
tick,0x7ff999646dc4,175626774,0,0x0,8
tick,0x7ff999646dc4,175641930,0,0x0,8
tick,0x7ff999646dc4,175657355,0,0x0,8
tick,0x7ff999646dc4,175672079,0,0x0,8
tick,0x7ff999646dc4,175687952,0,0x0,8
tick,0x7ff999646dc4,175702714,0,0x0,8
tick,0x7ff999646dc4,175717867,0,0x0,8
tick,0x7ff999646dc4,175733224,0,0x0,8
tick,0x7ff999646dc4,175748381,0,0x0,8
tick,0x7ff999646dc4,175763803,0,0x0,8
tick,0x7ff999646dc4,175780600,0,0x0,8
tick,0x7ff999646dc4,175795097,0,0x0,8
tick,0x7ff999646dc4,175810254,0,0x0,8
tick,0x7ff999646dc4,175825244,0,0x0,8
tick,0x7ff999646dc4,175841137,0,0x0,8
tick,0x7ff999646dc4,175855864,0,0x0,8
tick,0x7ff999646dc4,175870886,0,0x0,8
tick,0x7ff999646dc4,175886788,0,0x0,8
tick,0x7ff999646dc4,175901163,0,0x0,8
tick,0x7ff999646dc4,175916123,0,0x0,8
tick,0x7ff999646dc4,175931661,0,0x0,8
tick,0x7ff999646dc4,175949033,0,0x0,8
tick,0x7ff999646dc4,175962542,0,0x0,8
tick,0x7ff999646dc4,175978817,0,0x0,8
tick,0x7ff999646dc4,175993055,0,0x0,8
tick,0x7ff999646dc4,176008698,0,0x0,8
tick,0x7ff999646dc4,176024072,0,0x0,8
tick,0x7ff999646dc4,176039277,0,0x0,8
tick,0x7ff999646dc4,176054993,0,0x0,8
tick,0x7ff999646dc4,176070305,0,0x0,8
tick,0x7ff999646dc4,176085658,0,0x0,8
tick,0x7ff999646dc4,176101082,0,0x0,8
tick,0x7ff999646dc4,176116687,0,0x0,8
tick,0x7ff999646dc4,176132130,0,0x0,8
tick,0x7ff999646dc4,176146491,0,0x0,8
tick,0x7ff999646dc4,176164127,0,0x0,8
tick,0x7ff999646dc4,176177852,0,0x0,8
tick,0x7ff999646dc4,176192683,0,0x0,8
tick,0x7ff999646dc4,176207800,0,0x0,8
tick,0x7ff999646dc4,176223889,0,0x0,8
tick,0x7ff999646dc4,176238151,0,0x0,8
tick,0x7ff999646dc4,176253867,0,0x0,8
tick,0x7ff999646dc4,176269365,0,0x0,8
tick,0x7ff999646dc4,176284739,0,0x0,8
tick,0x7ff999646dc4,176299654,0,0x0,8
tick,0x7ff999646dc4,176315760,0,0x0,8
tick,0x7ff999646dc4,176332362,0,0x0,8
tick,0x7ff999646dc4,176346703,0,0x0,8
tick,0x7ff999646dc4,176361730,0,0x0,8
tick,0x7ff999646dc4,176376288,0,0x0,8
tick,0x7ff999646dc4,176391464,0,0x0,8
tick,0x7ff999646dc4,176406802,0,0x0,8
tick,0x7ff999646dc4,176421815,0,0x0,8
tick,0x7ff999646dc4,176437365,0,0x0,8
tick,0x7ff999646dc4,176452676,0,0x0,8
tick,0x7ff999646dc4,176468012,0,0x0,8
tick,0x7ff999646dc4,176484254,0,0x0,8
tick,0x7ff999646dc4,176499137,0,0x0,8
tick,0x7ff999646dc4,176516170,0,0x0,8
tick,0x7ff999646dc4,176530378,0,0x0,8
tick,0x7ff999646dc4,176546261,0,0x0,8
tick,0x7ff999646dc4,176560321,0,0x0,8
tick,0x7ff999646dc4,176575581,0,0x0,8
tick,0x7ff999646dc4,176591570,0,0x0,8
tick,0x7ff999646dc4,176606368,0,0x0,8
tick,0x7ff999646dc4,176621779,0,0x0,8
tick,0x7ff999646dc4,176636773,0,0x0,8
tick,0x7ff999646dc4,176652685,0,0x0,8
tick,0x7ff999646dc4,176667726,0,0x0,8
tick,0x7ff999646dc4,176690337,0,0x0,8
tick,0x7ff999646dc4,176702935,0,0x0,8
tick,0x7ff999646dc4,176715115,0,0x0,8
tick,0x7ff999646dc4,176731674,0,0x0,8
tick,0x7ff999646dc4,176744448,0,0x0,8
tick,0x7ff999646dc4,176759565,0,0x0,8
tick,0x7ff999646dc4,176774659,0,0x0,8
tick,0x7ff999646dc4,176790420,0,0x0,8
tick,0x7ff999646dc4,176805386,0,0x0,8
tick,0x7ff999646dc4,176820388,0,0x0,8
tick,0x7ff999646dc4,176836218,0,0x0,8
tick,0x7ff999646dc4,176851229,0,0x0,8
tick,0x7ff999646dc4,176870058,0,0x0,8
tick,0x7ff999646dc4,176883408,0,0x0,8
tick,0x7ff999646dc4,176901143,0,0x0,8
tick,0x7ff999646dc4,176920256,0,0x0,8
tick,0x7ff999646dc4,176930457,0,0x0,8
tick,0x7ff999646dc4,176944083,0,0x0,8
tick,0x7ff999646dc4,176959469,0,0x0,8
tick,0x7ff999646dc4,176975525,0,0x0,8
tick,0x7ff999646dc4,176990052,0,0x0,8
tick,0x7ff999646dc4,177004959,0,0x0,8
tick,0x7ff999646dc4,177020362,0,0x0,8
tick,0x7ff999646dc4,177035426,0,0x0,8
tick,0x7ff999646dc4,177050901,0,0x0,8
tick,0x7ff999646dc4,177066486,0,0x0,8
tick,0x7ff999646dc4,177082318,0,0x0,8
tick,0x7ff999646dc4,177097366,0,0x0,8
tick,0x7ff999646dc4,177112824,0,0x0,8
tick,0x7ff999646dc4,177128349,0,0x0,8
tick,0x7ff999646dc4,177142672,0,0x0,8
tick,0x7ff999646dc4,177159231,0,0x0,8
tick,0x7ff999646dc4,177174191,0,0x0,8
tick,0x7ff999646dc4,177189783,0,0x0,8
tick,0x7ff999646dc4,177205535,0,0x0,8
tick,0x7ff999646dc4,177220623,0,0x0,8
tick,0x7ff999646dc4,177236295,0,0x0,8
tick,0x7ff999646dc4,177250884,0,0x0,8
tick,0x7ff999646dc4,177265987,0,0x0,8
tick,0x7ff999646dc4,177281848,0,0x0,8
tick,0x7ff999646dc4,177297686,0,0x0,8
tick,0x7ff999646dc4,177312392,0,0x0,8
tick,0x7ff999646dc4,177327251,0,0x0,8
tick,0x7ff999646dc4,177342906,0,0x0,8
tick,0x7ff999646dc4,177357938,0,0x0,8
tick,0x7ff999646dc4,177373653,0,0x0,8
tick,0x7ff999646dc4,177388485,0,0x0,8
tick,0x7ff999646dc4,177404098,0,0x0,8
tick,0x7ff999646dc4,177419420,0,0x0,8
tick,0x7ff999646dc4,177434905,0,0x0,8
tick,0x7ff999646dc4,177450877,0,0x0,8
tick,0x7ff999646dc4,177465858,0,0x0,8
tick,0x7ff999646dc4,177483061,0,0x0,8
tick,0x7ff999646dc4,177497564,0,0x0,8
tick,0x7ff999646dc4,177512122,0,0x0,8
tick,0x7ff999646dc4,177527485,0,0x0,8
tick,0x7ff999646dc4,177543050,0,0x0,8
tick,0x7ff999646dc4,177558758,0,0x0,8
tick,0x7ff999646dc4,177573297,0,0x0,8
tick,0x7ff999646dc4,177588391,0,0x0,8
tick,0x7ff999646dc4,177603832,0,0x0,8
tick,0x7ff999646dc4,177620067,0,0x0,8
tick,0x7ff999646dc4,177635072,0,0x0,8
tick,0x7ff999646dc4,177650364,0,0x0,8
tick,0x7ff999646dc4,177667410,0,0x0,8
tick,0x7ff999646dc4,177682591,0,0x0,8
tick,0x7ff999646dc4,177697351,0,0x0,8
tick,0x7ff999646dc4,177711994,0,0x0,8
tick,0x7ff999646dc4,177727813,0,0x0,8
tick,0x7ff999646dc4,177742809,0,0x0,8
tick,0x7ff999646dc4,177758210,0,0x0,8
tick,0x7ff999646dc4,177774522,0,0x0,8
tick,0x7ff999646dc4,177789369,0,0x0,8
tick,0x7ff999646dc4,177804409,0,0x0,8
tick,0x7ff999646dc4,177819627,0,0x0,8
tick,0x7ff999646dc4,177837189,0,0x0,8
tick,0x7ff999646dc4,177852872,0,0x0,8
tick,0x7ff999646dc4,177867167,0,0x0,8
tick,0x7ff999646dc4,177885402,0,0x0,8
tick,0x7ff999646dc4,177897373,0,0x0,8
tick,0x7ff999646dc4,177917462,0,0x0,8
tick,0x7ff999646dc4,177927133,0,0x0,8
tick,0x7ff999646dc4,177942612,0,0x0,8
tick,0x7ff999646dc4,177956857,0,0x0,8
tick,0x7ff999646dc4,177973319,0,0x0,8
tick,0x7ff999646dc4,177988281,0,0x0,8
tick,0x7ff999646dc4,178003535,0,0x0,8
tick,0x7ff999646dc4,178019218,0,0x0,8
tick,0x7ff999646dc4,178035153,0,0x0,8
tick,0x7ff999646dc4,178050001,0,0x0,8
tick,0x7ff999646dc4,178065115,0,0x0,8
tick,0x7ff999646dc4,178080374,0,0x0,8
tick,0x7ff999646dc4,178096737,0,0x0,8
tick,0x7ff999646dc4,178110859,0,0x0,8
tick,0x7ff999646dc4,178126178,0,0x0,8
tick,0x7ff999646dc4,178141129,0,0x0,8
tick,0x7ff999646dc4,178158285,0,0x0,8
tick,0x7ff999646dc4,178172535,0,0x0,8
tick,0x7ff999646dc4,178187675,0,0x0,8
tick,0x7ff999646dc4,178203526,0,0x0,8
tick,0x7ff999646dc4,178217813,0,0x0,8
tick,0x7ff999646dc4,178233871,0,0x0,8
tick,0x7ff999646dc4,178248553,0,0x0,8
tick,0x7ff999646dc4,178264167,0,0x0,8
tick,0x7ff999646dc4,178279218,0,0x0,8
tick,0x7ff999646dc4,178294350,0,0x0,8
tick,0x7ff999646dc4,178309919,0,0x0,8
tick,0x7ff999646dc4,178325053,0,0x0,8
tick,0x7ff999646dc4,178340686,0,0x0,8
tick,0x7ff999646dc4,178356121,0,0x0,8
tick,0x7ff999646dc4,178371657,0,0x0,8
tick,0x7ff999646dc4,178387364,0,0x0,8
tick,0x7ff999646dc4,178401418,0,0x0,8
tick,0x7ff999646dc4,178418211,0,0x0,8
tick,0x7ff999646dc4,178431737,0,0x0,8
tick,0x7ff999646dc4,178447514,0,0x0,8
tick,0x7ff999646dc4,178462948,0,0x0,8
tick,0x7ff999646dc4,178478504,0,0x0,8
tick,0x7ff999646dc4,178493340,0,0x0,8
tick,0x7ff999646dc4,178508620,0,0x0,8
tick,0x7ff999646dc4,178525182,0,0x0,8
tick,0x7ff999646dc4,178539614,0,0x0,8
tick,0x7ff999646dc4,178554574,0,0x0,8
tick,0x7ff999646dc4,178570255,0,0x0,8
tick,0x7ff999646dc4,178585840,0,0x0,8
tick,0x7ff999646dc4,178603185,0,0x0,8
tick,0x7ff999646dc4,178618580,0,0x0,8
tick,0x7ff999646dc4,178633963,0,0x0,8
tick,0x7ff999646dc4,178647271,0,0x0,8
tick,0x7ff999646dc4,178662793,0,0x0,8
tick,0x7ff999646dc4,178677549,0,0x0,8
tick,0x7ff999646dc4,178692850,0,0x0,8
tick,0x7ff999646dc4,178708398,0,0x0,8
tick,0x7ff999646dc4,178723941,0,0x0,8
tick,0x7ff999646dc4,178739243,0,0x0,8
tick,0x7ff999646dc4,178755058,0,0x0,8
tick,0x7ff999646dc4,178770275,0,0x0,8
tick,0x7ff999646dc4,178787289,0,0x0,8
tick,0x7ff999646dc4,178802882,0,0x0,8
tick,0x7ff999646dc4,178822245,0,0x0,8
tick,0x7ff999646dc4,178836715,0,0x0,8
tick,0x7ff999646dc4,178846274,0,0x0,8
tick,0x7ff999646dc4,178862404,0,0x0,8
tick,0x7ff999646dc4,178877701,0,0x0,8
tick,0x7ff999646dc4,178893392,0,0x0,8
tick,0x7ff999646dc4,178908497,0,0x0,8
tick,0x7ff999646dc4,178924150,0,0x0,8
tick,0x7ff999646dc4,178938843,0,0x0,8
tick,0x7ff999646dc4,178954014,0,0x0,8
tick,0x7ff999646dc4,178969090,0,0x0,8
tick,0x7ff999646dc4,178984833,0,0x0,8
tick,0x7ff999646dc4,178999854,0,0x0,8
tick,0x7ff999646dc4,179018060,0,0x0,8
tick,0x7ff999646dc4,179030359,0,0x0,8
tick,0x7ff999646dc4,179045789,0,0x0,8
tick,0x7ff999646dc4,179060803,0,0x0,8
tick,0x7ff999646dc4,179076300,0,0x0,8
tick,0x7ff999646dc4,179091935,0,0x0,8
tick,0x7ff999646dc4,179107516,0,0x0,8
tick,0x7ff999646dc4,179122955,0,0x0,8
tick,0x7ff999646dc4,179138210,0,0x0,8
tick,0x7ff999646dc4,179153497,0,0x0,8
tick,0x7ff999646dc4,179169100,0,0x0,8
tick,0x7ff999646dc4,179184523,0,0x0,8
tick,0x7ff999646dc4,179199558,0,0x0,8
tick,0x7ff999646dc4,179215434,0,0x0,8
tick,0x7ff999646dc4,179230404,0,0x0,8
tick,0x7ff999646dc4,179245663,0,0x0,8
tick,0x7ff999646dc4,179260503,0,0x0,8
tick,0x7ff999646dc4,179276411,0,0x0,8
tick,0x7ff999646dc4,179291951,0,0x0,8
tick,0x7ff999646dc4,179306870,0,0x0,8
tick,0x7ff999646dc4,179322243,0,0x0,8
tick,0x7ff999646dc4,179338108,0,0x0,8
tick,0x7ff999646dc4,179353974,0,0x0,8
tick,0x7ff999646dc4,179368484,0,0x0,8
tick,0x7ff999646dc4,179384678,0,0x0,8
tick,0x7ff999646dc4,179399316,0,0x0,8
tick,0x7ff999646dc4,179414006,0,0x0,8
tick,0x7ff999646dc4,179429960,0,0x0,8
tick,0x7ff999646dc4,179444717,0,0x0,8
tick,0x7ff999646dc4,179459606,0,0x0,8
tick,0x7ff999646dc4,179475857,0,0x0,8
tick,0x7ff999646dc4,179493453,0,0x0,8
tick,0x7ff999646dc4,179505349,0,0x0,8
tick,0x7ff999646dc4,179520884,0,0x0,8
tick,0x7ff999646dc4,179537948,0,0x0,8
tick,0x7ff999646dc4,179553490,0,0x0,8
tick,0x7ff999646dc4,179573659,0,0x0,8
tick,0x7ff999646dc4,179583857,0,0x0,8
tick,0x7ff999646dc4,179598630,0,0x0,8
tick,0x7ff999646dc4,179612734,0,0x0,8
tick,0x7ff999646dc4,179654130,0,0x0,8
tick,0x7ff999646dc4,179662941,0,0x0,8
tick,0x7ff999646dc4,179673782,0,0x0,8
tick,0x7ff999646dc4,179688893,0,0x0,8
tick,0x7ff999646dc4,179703722,0,0x0,8
tick,0x7ff999646dc4,179719359,0,0x0,8
tick,0x7ff999646dc4,179734145,0,0x0,8
tick,0x7ff999646dc4,179750016,0,0x0,8
tick,0x7ff999646dc4,179767768,0,0x0,8
tick,0x7ff999646dc4,179782259,0,0x0,8
tick,0x7ff999646dc4,179796544,0,0x0,8
tick,0x7ff999646dc4,179812334,0,0x0,8
tick,0x7ff999646dc4,179827335,0,0x0,8
tick,0x7ff999646dc4,179842057,0,0x0,8
tick,0x7ff999646dc4,179857951,0,0x0,8
tick,0x7ff999646dc4,179873149,0,0x0,8
tick,0x7ff999646dc4,179888492,0,0x0,8
tick,0x7ff999646dc4,179904328,0,0x0,8
tick,0x7ff999646dc4,179921042,0,0x0,8
tick,0x7ff999646dc4,179934884,0,0x0,8
tick,0x7ff999646dc4,179950515,0,0x0,8
tick,0x7ff999646dc4,179965303,0,0x0,8
tick,0x7ff999646dc4,179980223,0,0x0,8
tick,0x7ff999646dc4,179994665,0,0x0,8
tick,0x7ff999646dc4,180010270,0,0x0,8
tick,0x7ff999646dc4,180025395,0,0x0,8
tick,0x7ff999646dc4,180041579,0,0x0,8
tick,0x7ff999646dc4,180056042,0,0x0,8
tick,0x7ff999646dc4,180071387,0,0x0,8
tick,0x7ff999646dc4,180087534,0,0x0,8
tick,0x7ff999646dc4,180102665,0,0x0,8
tick,0x7ff999646dc4,180118055,0,0x0,8
tick,0x7ff999646dc4,180134955,0,0x0,8
tick,0x7ff999646dc4,180150065,0,0x0,8
tick,0x7ff999646dc4,180164748,0,0x0,8
tick,0x7ff999646dc4,180180253,0,0x0,8
tick,0x7ff999646dc4,180195579,0,0x0,8
tick,0x7ff999646dc4,180209956,0,0x0,8
tick,0x7ff999646dc4,180225634,0,0x0,8
tick,0x7ff999646dc4,180240964,0,0x0,8
tick,0x7ff999646dc4,180255790,0,0x0,8
tick,0x7ff999646dc4,180270972,0,0x0,8
tick,0x7ff999646dc4,180286564,0,0x0,8
tick,0x7ff999646dc4,180303825,0,0x0,8
tick,0x7ff999646dc4,180318267,0,0x0,8
tick,0x7ff999646dc4,180333132,0,0x0,8
tick,0x7ff999646dc4,180348860,0,0x0,8
tick,0x7ff999646dc4,180364447,0,0x0,8
tick,0x7ff999646dc4,180378516,0,0x0,8
tick,0x7ff999646dc4,180393977,0,0x0,8
tick,0x7ff999646dc4,180450231,0,0x0,8
tick,0x7ff999646dc4,180464310,0,0x0,8
tick,0x7ff999646dc4,180472318,0,0x0,8
tick,0x7ff999646dc4,180485983,0,0x0,8
tick,0x7ff999646dc4,180502701,0,0x0,8
tick,0x7ff999646dc4,180520602,0,0x0,8
tick,0x7ff999646dc4,180531191,0,0x0,8
tick,0x7ff999646dc4,180547082,0,0x0,8
tick,0x7ff999646dc4,180561776,0,0x0,8
tick,0x7ff999646dc4,180577293,0,0x0,8
tick,0x7ff999646dc4,180592523,0,0x0,8
tick,0x7ff999646dc4,180610486,0,0x0,8
tick,0x7ff999646dc4,180623704,0,0x0,8
tick,0x7ff999646dc4,180640250,0,0x0,8
tick,0x7ff999646dc4,180658730,0,0x0,8
tick,0x7ff999646dc4,180675146,0,0x0,8
tick,0x7ff999646dc4,180686596,0,0x0,8
tick,0x7ff999646dc4,180698888,0,0x0,8
tick,0x7ff999646dc4,180715974,0,0x0,8
tick,0x7ff999646dc4,180730928,0,0x0,8
tick,0x7ff999646dc4,180744923,0,0x0,8
tick,0x7ff999646dc4,180760336,0,0x0,8
tick,0x7ff999646dc4,180775641,0,0x0,8
tick,0x7ff999646dc4,180793102,0,0x0,8
tick,0x7ff999646dc4,180806381,0,0x0,8
tick,0x7ff999646dc4,180821382,0,0x0,8
tick,0x7ff999646dc4,180837241,0,0x0,8
tick,0x7ff999646dc4,180854311,0,0x0,8
tick,0x7ff999646dc4,180869755,0,0x0,8
tick,0x7ff999646dc4,180884795,0,0x0,8
tick,0x7ff999646dc4,180898190,0,0x0,8
tick,0x7ff999646dc4,180913146,0,0x0,8
tick,0x7ff999646dc4,180928096,0,0x0,8
tick,0x7ff999646dc4,180944634,0,0x0,8
tick,0x7ff999646dc4,180960115,0,0x0,8
tick,0x7ff999646dc4,180974890,0,0x0,8
tick,0x7ff999646dc4,180990207,0,0x0,8
tick,0x7ff999646dc4,181005582,0,0x0,8
tick,0x7ff999646dc4,181020367,0,0x0,8
tick,0x7ff999646dc4,181038462,0,0x0,8
tick,0x7ff999646dc4,181052785,0,0x0,8
tick,0x7ff999646dc4,181067464,0,0x0,8
tick,0x7ff999646dc4,181081859,0,0x0,8
tick,0x7ff999646dc4,181098528,0,0x0,8
tick,0x7ff999646dc4,181112608,0,0x0,8
tick,0x7ff999646dc4,181128406,0,0x0,8
tick,0x7ff999646dc4,181143416,0,0x0,8
tick,0x7ff999646dc4,181158555,0,0x0,8
tick,0x7ff999646dc4,181174620,0,0x0,8
tick,0x7ff999646dc4,181189098,0,0x0,8
tick,0x7ff999646dc4,181203888,0,0x0,8
tick,0x7ff999646dc4,181220261,0,0x0,8
tick,0x7ff999646dc4,181234426,0,0x0,8
tick,0x7ff999646dc4,181249504,0,0x0,8
tick,0x7ff999646dc4,181263928,0,0x0,8
tick,0x7ff999646dc4,181278996,0,0x0,8
tick,0x7ff999646dc4,181294631,0,0x0,8
tick,0x7ff999646dc4,181310826,0,0x0,8
tick,0x7ff999646dc4,181325976,0,0x0,8
tick,0x7ff999646dc4,181340750,0,0x0,8
tick,0x7ff999646dc4,181356576,0,0x0,8
tick,0x7ff999646dc4,181371750,0,0x0,8
tick,0x7ff999646dc4,181387071,0,0x0,8
tick,0x7ff999646dc4,181402012,0,0x0,8
tick,0x7ff999646dc4,181418107,0,0x0,8
tick,0x7ff999646dc4,181432858,0,0x0,8
tick,0x7ff999646dc4,181448050,0,0x0,8
tick,0x7ff999646dc4,181463718,0,0x0,8
tick,0x7ff999646dc4,181479418,0,0x0,8
tick,0x7ff999646dc4,181493910,0,0x0,8
tick,0x7ff999646dc4,181509517,0,0x0,8
tick,0x7ff999646dc4,181525101,0,0x0,8
tick,0x7ff999646dc4,181541059,0,0x0,8
tick,0x7ff999646dc4,181555693,0,0x0,8
tick,0x7ff999646dc4,181571057,0,0x0,8
tick,0x7ff999646dc4,181586444,0,0x0,8
tick,0x7ff999646dc4,181601874,0,0x0,8
tick,0x7ff999646dc4,181617481,0,0x0,8
tick,0x7ff999646dc4,181632775,0,0x0,8
tick,0x7ff999646dc4,181648912,0,0x0,8
tick,0x7ff999646dc4,181663090,0,0x0,8
tick,0x7ff999646dc4,181679199,0,0x0,8
tick,0x7ff999646dc4,181694182,0,0x0,8
tick,0x7ff999646dc4,181709217,0,0x0,8
tick,0x7ff999646dc4,181724797,0,0x0,8
tick,0x7ff999646dc4,181740715,0,0x0,8
tick,0x7ff999646dc4,181755813,0,0x0,8
tick,0x7ff999646dc4,181770618,0,0x0,8
tick,0x7ff999646dc4,181786185,0,0x0,8
tick,0x7ff999646dc4,181801483,0,0x0,8
tick,0x7ff999646dc4,181816343,0,0x0,8
tick,0x7ff999646dc4,181831885,0,0x0,8
tick,0x7ff999646dc4,181848334,0,0x0,8
tick,0x7ff999646dc4,181863500,0,0x0,8
tick,0x7ff999646dc4,181878213,0,0x0,8
tick,0x7ff999646dc4,181893576,0,0x0,8
tick,0x7ff999646dc4,181908749,0,0x0,8
tick,0x7ff999646dc4,181924477,0,0x0,8
tick,0x7ff999646dc4,181939238,0,0x0,8
tick,0x7ff999646dc4,181955688,0,0x0,8
tick,0x7ff999646dc4,181971874,0,0x0,8
tick,0x7ff999646dc4,181986004,0,0x0,8
tick,0x7ff999646dc4,182000346,0,0x0,8
tick,0x7ff999646dc4,182016055,0,0x0,8
tick,0x7ff999646dc4,182031750,0,0x0,8
tick,0x7ff999646dc4,182046804,0,0x0,8
tick,0x7ff999646dc4,182062636,0,0x0,8
tick,0x7ff999646dc4,182078696,0,0x0,8
tick,0x7ff999646dc4,182093242,0,0x0,8
tick,0x7ff999646dc4,182108603,0,0x0,8
tick,0x7ff999646dc4,182123465,0,0x0,8
tick,0x7ff999646dc4,182139225,0,0x0,8
tick,0x7ff999646dc4,182154360,0,0x0,8
tick,0x7ff999646dc4,182170763,0,0x0,8
tick,0x7ff999646dc4,182184589,0,0x0,8
tick,0x7ff999646dc4,182199227,0,0x0,8
tick,0x7ff999646dc4,182214691,0,0x0,8
tick,0x7ff999646dc4,182230430,0,0x0,8
tick,0x7ff999646dc4,182245076,0,0x0,8
tick,0x7ff999646dc4,182260337,0,0x0,8
tick,0x7ff999646dc4,182275833,0,0x0,8
tick,0x7ff999646dc4,182291873,0,0x0,8
tick,0x7ff999646dc4,182305676,0,0x0,8
tick,0x7ff999646dc4,182320983,0,0x0,8
tick,0x7ff999646dc4,182337091,0,0x0,8
tick,0x7ff999646dc4,182351912,0,0x0,8
tick,0x7ff999646dc4,182367377,0,0x0,8
tick,0x7ff999646dc4,182383653,0,0x0,8
tick,0x7ff999646dc4,182399106,0,0x0,8
tick,0x7ff999646dc4,182413517,0,0x0,8
tick,0x7ff999646dc4,182428989,0,0x0,8
tick,0x7ff999646dc4,182444351,0,0x0,8
tick,0x7ff999646dc4,182459664,0,0x0,8
tick,0x7ff999646dc4,182475365,0,0x0,8
tick,0x7ff999646dc4,182490390,0,0x0,8
tick,0x7ff999646dc4,182506191,0,0x0,8
tick,0x7ff999646dc4,182521004,0,0x0,8
tick,0x7ff999646dc4,182536121,0,0x0,8
tick,0x7ff999646dc4,182552676,0,0x0,8
tick,0x7ff999646dc4,182567021,0,0x0,8
tick,0x7ff999646dc4,182582559,0,0x0,8
tick,0x7ff999646dc4,182598329,0,0x0,8
tick,0x7ff999646dc4,182613700,0,0x0,8
tick,0x7ff999646dc4,182628597,0,0x0,8
tick,0x7ff999646dc4,182643369,0,0x0,8
tick,0x7ff999646dc4,182659058,0,0x0,8
tick,0x7ff999646dc4,182674033,0,0x0,8
tick,0x7ff999646dc4,182689472,0,0x0,8
tick,0x7ff999646dc4,182704607,0,0x0,8
tick,0x7ff999646dc4,182720193,0,0x0,8
tick,0x7ff999646dc4,182735286,0,0x0,8
tick,0x7ff999646dc4,182750826,0,0x0,8
tick,0x7ff999646dc4,182766232,0,0x0,8
tick,0x7ff999646dc4,182781126,0,0x0,8
tick,0x7ff999646dc4,182797026,0,0x0,8
tick,0x7ff999646dc4,182812578,0,0x0,8
tick,0x7ff999646dc4,182827918,0,0x0,8
tick,0x7ff999646dc4,182843027,0,0x0,8
tick,0x7ff999646dc4,182858725,0,0x0,8
tick,0x7ff999646dc4,182873714,0,0x0,8
tick,0x7ff999646dc4,182889309,0,0x0,8
tick,0x7ff999646dc4,182904730,0,0x0,8
tick,0x7ff999646dc4,182919793,0,0x0,8
tick,0x7ff999646dc4,182935303,0,0x0,8
tick,0x7ff999646dc4,182949828,0,0x0,8
tick,0x7ff999646dc4,182965847,0,0x0,8
tick,0x7ff999646dc4,182981386,0,0x0,8
tick,0x7ff999646dc4,182995782,0,0x0,8
tick,0x7ff999646dc4,183012163,0,0x0,8
tick,0x7ff999646dc4,183026717,0,0x0,8
tick,0x7ff999646dc4,183043035,0,0x0,8
tick,0x7ff999646dc4,183057482,0,0x0,8
tick,0x7ff999646dc4,183072865,0,0x0,8
tick,0x7ff999646dc4,183088639,0,0x0,8
tick,0x7ff999646dc4,183103671,0,0x0,8
tick,0x7ff999646dc4,183119514,0,0x0,8
tick,0x7ff999646dc4,183134901,0,0x0,8
tick,0x7ff999646dc4,183150135,0,0x0,8
tick,0x7ff999646dc4,183165099,0,0x0,8
tick,0x7ff999646dc4,183180372,0,0x0,8
tick,0x7ff999646dc4,183196011,0,0x0,8
tick,0x7ff999646dc4,183211044,0,0x0,8
tick,0x7ff999646dc4,183225527,0,0x0,8
tick,0x7ff999646dc4,183241565,0,0x0,8
tick,0x7ff999646dc4,183256824,0,0x0,8
tick,0x7ff999646dc4,183271316,0,0x0,8
tick,0x7ff999646dc4,183287171,0,0x0,8
tick,0x7ff999646dc4,183302019,0,0x0,8
tick,0x7ff999646dc4,183317925,0,0x0,8
tick,0x7ff999646dc4,183333038,0,0x0,8
tick,0x7ff999646dc4,183348139,0,0x0,8
tick,0x7ff999646dc4,183364662,0,0x0,8
tick,0x7ff999646dc4,183379067,0,0x0,8
tick,0x7ff999646dc4,183394387,0,0x0,8
tick,0x7ff999646dc4,183409539,0,0x0,8
tick,0x7ff999646dc4,183425427,0,0x0,8
tick,0x7ff999646dc4,183441663,0,0x0,8
tick,0x7ff999646dc4,183456485,0,0x0,8
tick,0x7ff999646dc4,183473209,0,0x0,8
tick,0x7ff999646dc4,183487133,0,0x0,8
tick,0x7ff999646dc4,183502419,0,0x0,8
tick,0x7ff999646dc4,183517463,0,0x0,8
tick,0x7ff999646dc4,183533097,0,0x0,8
tick,0x7ff999646dc4,183547936,0,0x0,8
tick,0x7ff999646dc4,183564198,0,0x0,8
tick,0x7ff999646dc4,183579164,0,0x0,8
tick,0x7ff999646dc4,183594760,0,0x0,8
tick,0x7ff999646dc4,183609830,0,0x0,8
tick,0x7ff999646dc4,183624484,0,0x0,8
tick,0x7ff999646dc4,183639396,0,0x0,8
tick,0x7ff999646dc4,183655295,0,0x0,8
tick,0x7ff999646dc4,183671071,0,0x0,8
tick,0x7ff999646dc4,183686133,0,0x0,8
tick,0x7ff999646dc4,183701295,0,0x0,8
tick,0x7ff999646dc4,183716211,0,0x0,8
tick,0x7ff999646dc4,183731369,0,0x0,8
tick,0x7ff999646dc4,183746656,0,0x0,8
tick,0x7ff999646dc4,183762210,0,0x0,8
tick,0x7ff999646dc4,183777785,0,0x0,8
tick,0x7ff999646dc4,183793989,0,0x0,8
tick,0x7ff999646dc4,183808720,0,0x0,8
tick,0x7ff999646dc4,183824078,0,0x0,8
tick,0x7ff999646dc4,183838937,0,0x0,8
tick,0x7ff999646dc4,183854148,0,0x0,8
tick,0x7ff999646dc4,183869980,0,0x0,8
tick,0x7ff999646dc4,183884773,0,0x0,8
tick,0x7ff999646dc4,183900624,0,0x0,8
tick,0x7ff999646dc4,183915553,0,0x0,8
tick,0x7ff999646dc4,183932506,0,0x0,8
tick,0x7ff999646dc4,183946345,0,0x0,8
tick,0x7ff999646dc4,183961779,0,0x0,8
tick,0x7ff999646dc4,183978556,0,0x0,8
tick,0x7ff999646dc4,183993859,0,0x0,8
tick,0x7ff999646dc4,184009195,0,0x0,8
tick,0x7ff999646dc4,184023882,0,0x0,8
tick,0x7ff999646dc4,184040659,0,0x0,8
tick,0x7ff999646dc4,184056009,0,0x0,8
tick,0x7ff999646dc4,184070240,0,0x0,8
tick,0x7ff999646dc4,184085507,0,0x0,8
tick,0x7ff999646dc4,184101628,0,0x0,8
tick,0x7ff999646dc4,184116588,0,0x0,8
tick,0x7ff999646dc4,184131787,0,0x0,8
tick,0x7ff999646dc4,184147243,0,0x0,8
tick,0x7ff999646dc4,184161895,0,0x0,8
tick,0x7ff999646dc4,184177425,0,0x0,8
tick,0x7ff999646dc4,184192765,0,0x0,8
tick,0x7ff999646dc4,184209064,0,0x0,8
tick,0x7ff999646dc4,184224665,0,0x0,8
tick,0x7ff999646dc4,184239150,0,0x0,8
tick,0x7ff999646dc4,184254501,0,0x0,8
tick,0x7ff999646dc4,184269702,0,0x0,8
tick,0x7ff999646dc4,184284679,0,0x0,8
tick,0x7ff999646dc4,184300869,0,0x0,8
tick,0x7ff999646dc4,184316301,0,0x0,8
tick,0x7ff999646dc4,184331554,0,0x0,8
tick,0x7ff999646dc4,184346847,0,0x0,8
tick,0x7ff999646dc4,184361970,0,0x0,8
tick,0x7ff999646dc4,184376765,0,0x0,8
tick,0x7ff999646dc4,184392402,0,0x0,8
tick,0x7ff999646dc4,184408070,0,0x0,8
tick,0x7ff999646dc4,184423512,0,0x0,8
tick,0x7ff999646dc4,184439200,0,0x0,8
tick,0x7ff999646dc4,184454191,0,0x0,8
tick,0x7ff999646dc4,184469940,0,0x0,8
tick,0x7ff999646dc4,184484528,0,0x0,8
tick,0x7ff999646dc4,184500089,0,0x0,8
tick,0x7ff999646dc4,184515163,0,0x0,8
tick,0x7ff999646dc4,184531080,0,0x0,8
tick,0x7ff999646dc4,184546744,0,0x0,8
tick,0x7ff999646dc4,184560648,0,0x0,8
tick,0x7ff999646dc4,184576472,0,0x0,8
tick,0x7ff999646dc4,184591567,0,0x0,8
tick,0x7ff999646dc4,184608041,0,0x0,8
tick,0x7ff999646dc4,184622685,0,0x0,8
tick,0x7ff999646dc4,184638796,0,0x0,8
tick,0x7ff999646dc4,184654396,0,0x0,8
tick,0x7ff999646dc4,184669261,0,0x0,8
tick,0x7ff999646dc4,184684829,0,0x0,8
tick,0x7ff999646dc4,184704039,0,0x0,8
tick,0x7ff999646dc4,184714678,0,0x0,8
tick,0x7ff999646dc4,184729620,0,0x0,8
tick,0x7ff999646dc4,184745334,0,0x0,8
tick,0x7ff999646dc4,184760348,0,0x0,8
tick,0x7ff999646dc4,184776105,0,0x0,8
tick,0x7ff999646dc4,184791136,0,0x0,8
tick,0x7ff999646dc4,184806178,0,0x0,8
tick,0x7ff999646dc4,184822294,0,0x0,8
tick,0x7ff999646dc4,184837878,0,0x0,8
tick,0x7ff999646dc4,184852629,0,0x0,8
tick,0x7ff999646dc4,184867765,0,0x0,8
tick,0x7ff999646dc4,184882879,0,0x0,8
tick,0x7ff999646dc4,184898059,0,0x0,8
tick,0x7ff999646dc4,184913364,0,0x0,8
tick,0x7ff999646dc4,184928543,0,0x0,8
tick,0x7ff999646dc4,184943806,0,0x0,8
tick,0x7ff999646dc4,184959147,0,0x0,8
tick,0x7ff999646dc4,184975605,0,0x0,8
tick,0x7ff999646dc4,184990992,0,0x0,8
tick,0x7ff999646dc4,185005508,0,0x0,8
tick,0x7ff999646dc4,185020350,0,0x0,8
tick,0x7ff999646dc4,185036359,0,0x0,8
tick,0x7ff999646dc4,185050777,0,0x0,8
tick,0x7ff999646dc4,185065926,0,0x0,8
tick,0x7ff999646dc4,185081399,0,0x0,8
tick,0x7ff999646dc4,185096504,0,0x0,8
tick,0x7ff999646dc4,185111799,0,0x0,8
tick,0x7ff999646dc4,185127364,0,0x0,8
tick,0x7ff999646dc4,185142306,0,0x0,8
tick,0x7ff999646dc4,185158719,0,0x0,8
tick,0x7ff999646dc4,185174002,0,0x0,8
tick,0x7ff999646dc4,185189639,0,0x0,8
tick,0x7ff999646dc4,185203905,0,0x0,8
tick,0x7ff999646dc4,185219658,0,0x0,8
tick,0x7ff999646dc4,185234642,0,0x0,8
tick,0x7ff999646dc4,185250203,0,0x0,8
tick,0x7ff999646dc4,185265727,0,0x0,8
tick,0x7ff999646dc4,185282820,0,0x0,8
tick,0x7ff999646dc4,185296720,0,0x0,8
tick,0x7ff999646dc4,185311033,0,0x0,8
tick,0x7ff999646dc4,185326677,0,0x0,8
tick,0x7ff999646dc4,185342202,0,0x0,8
tick,0x7ff999646dc4,185357373,0,0x0,8
tick,0x7ff999646dc4,185374138,0,0x0,8
tick,0x7ff999646dc4,185391079,0,0x0,8
tick,0x7ff999646dc4,185404095,0,0x0,8
tick,0x7ff999646dc4,185418851,0,0x0,8
tick,0x7ff999646dc4,185434212,0,0x0,8
tick,0x7ff999646dc4,185449612,0,0x0,8
tick,0x7ff999646dc4,185465145,0,0x0,8
tick,0x7ff999646dc4,185479973,0,0x0,8
tick,0x7ff999646dc4,185495176,0,0x0,8
tick,0x7ff999646dc4,185510683,0,0x0,8
tick,0x7ff999646dc4,185526061,0,0x0,8
tick,0x7ff999646dc4,185540895,0,0x0,8
tick,0x7ff999646dc4,185558403,0,0x0,8
tick,0x7ff999646dc4,185571663,0,0x0,8
tick,0x7ff999646dc4,185587347,0,0x0,8
tick,0x7ff999646dc4,185602828,0,0x0,8
tick,0x7ff999646dc4,185618434,0,0x0,8
tick,0x7ff999646dc4,185632641,0,0x0,8
tick,0x7ff999646dc4,185648177,0,0x0,8
tick,0x7ff999646dc4,185663403,0,0x0,8
tick,0x7ff999646dc4,185678757,0,0x0,8
tick,0x7ff999646dc4,185694660,0,0x0,8
tick,0x7ff999646dc4,185710308,0,0x0,8
tick,0x7ff999646dc4,185726134,0,0x0,8
tick,0x7ff999646dc4,185740482,0,0x0,8
tick,0x7ff999646dc4,185756172,0,0x0,8
tick,0x7ff999646dc4,185770986,0,0x0,8
tick,0x7ff999646dc4,185786835,0,0x0,8
tick,0x7ff999646dc4,185802321,0,0x0,8
tick,0x7ff999646dc4,185817623,0,0x0,8
tick,0x7ff999646dc4,185833793,0,0x0,8
tick,0x7ff999646dc4,185847998,0,0x0,8
tick,0x7ff999646dc4,185863170,0,0x0,8
tick,0x7ff999646dc4,185878476,0,0x0,8
tick,0x7ff999646dc4,185894503,0,0x0,8
tick,0x7ff999646dc4,185909472,0,0x0,8
tick,0x7ff999646dc4,185925031,0,0x0,8
tick,0x7ff999646dc4,185940754,0,0x0,8
tick,0x7ff999646dc4,185955393,0,0x0,8
tick,0x7ff999646dc4,185970765,0,0x0,8
tick,0x7ff999646dc4,185985619,0,0x0,8
tick,0x7ff999646dc4,186001557,0,0x0,8
tick,0x7ff999646dc4,186017092,0,0x0,8
tick,0x7ff999646dc4,186032512,0,0x0,8
tick,0x7ff999646dc4,186047945,0,0x0,8
tick,0x7ff999646dc4,186062344,0,0x0,8
tick,0x7ff999646dc4,186078893,0,0x0,8
tick,0x7ff999646dc4,186092675,0,0x0,8
tick,0x7ff999646dc4,186107925,0,0x0,8
tick,0x7ff999646dc4,186123482,0,0x0,8
tick,0x7ff999646dc4,186139260,0,0x0,8
tick,0x7ff999646dc4,186155303,0,0x0,8
tick,0x7ff999646dc4,186170232,0,0x0,8
tick,0x7ff999646dc4,186185808,0,0x0,8
tick,0x7ff999646dc4,186200740,0,0x0,8
tick,0x7ff999646dc4,186216033,0,0x0,8
tick,0x7ff999646dc4,186231903,0,0x0,8
tick,0x7ff999646dc4,186247758,0,0x0,8
tick,0x7ff999646dc4,186263982,0,0x0,8
tick,0x7ff999646dc4,186277821,0,0x0,8
tick,0x7ff999646dc4,186292773,0,0x0,8
tick,0x7ff999646dc4,186308490,0,0x0,8
tick,0x7ff999646dc4,186323155,0,0x0,8
tick,0x7ff999646dc4,186338717,0,0x0,8
tick,0x7ff999646dc4,186353662,0,0x0,8
tick,0x7ff999646dc4,186369795,0,0x0,8
tick,0x7ff999646dc4,186384390,0,0x0,8
tick,0x7ff999646dc4,186399591,0,0x0,8
tick,0x7ff999646dc4,186415068,0,0x0,8
tick,0x7ff999646dc4,186430949,0,0x0,8
tick,0x7ff999646dc4,186446023,0,0x0,8
tick,0x7ff999646dc4,186461527,0,0x0,8
tick,0x7ff999646dc4,186477963,0,0x0,8
tick,0x7ff999646dc4,186492108,0,0x0,8
tick,0x7ff999646dc4,186507279,0,0x0,8
tick,0x7ff999646dc4,186522470,0,0x0,8
tick,0x7ff999646dc4,186537631,0,0x0,8
tick,0x7ff999646dc4,186553784,0,0x0,8
tick,0x7ff999646dc4,186570102,0,0x0,8
tick,0x7ff999646dc4,186584730,0,0x0,8
tick,0x7ff999646dc4,186600024,0,0x0,8
tick,0x7ff999646dc4,186615529,0,0x0,8
tick,0x7ff999646dc4,186631245,0,0x0,8
tick,0x7ff999646dc4,186646444,0,0x0,8
tick,0x7ff999646dc4,186661118,0,0x0,8
tick,0x7ff999646dc4,186676670,0,0x0,8
tick,0x7ff999646dc4,186692613,0,0x0,8
tick,0x7ff999646dc4,186708299,0,0x0,8
tick,0x7ff999646dc4,186724481,0,0x0,8
tick,0x7ff999646dc4,186738099,0,0x0,8
tick,0x7ff999646dc4,186753443,0,0x0,8
tick,0x7ff999646dc4,186768547,0,0x0,8
tick,0x7ff999646dc4,186783840,0,0x0,8
tick,0x7ff999646dc4,186800117,0,0x0,8
tick,0x7ff999646dc4,186814563,0,0x0,8
tick,0x7ff999646dc4,186829955,0,0x0,8
tick,0x7ff999646dc4,186845692,0,0x0,8
tick,0x7ff999646dc4,186862853,0,0x0,8
tick,0x7ff999646dc4,186876622,0,0x0,8
tick,0x7ff999646dc4,186893572,0,0x0,8
tick,0x7ff999646dc4,186910912,0,0x0,8
tick,0x7ff999646dc4,186921103,0,0x0,8
tick,0x7ff999646dc4,186935905,0,0x0,8
tick,0x7ff999646dc4,186951600,0,0x0,8
tick,0x7ff999646dc4,186966925,0,0x0,8
tick,0x7ff999646dc4,186982560,0,0x0,8
tick,0x7ff999646dc4,186998227,0,0x0,8
tick,0x7ff999646dc4,187013795,0,0x0,8
tick,0x7ff999646dc4,187030279,0,0x0,8
tick,0x7ff999646dc4,187045709,0,0x0,8
tick,0x7ff999646dc4,187060652,0,0x0,8
tick,0x7ff999646dc4,187077755,0,0x0,8
tick,0x7ff999646dc4,187093829,0,0x0,8
tick,0x7ff999646dc4,187105991,0,0x0,8
tick,0x7ff999646dc4,187122703,0,0x0,8
tick,0x7ff999646dc4,187136273,0,0x0,8
tick,0x7ff999646dc4,187150960,0,0x0,8
tick,0x7ff999646dc4,187166765,0,0x0,8
tick,0x7ff999646dc4,187182259,0,0x0,8
tick,0x7ff999646dc4,187200153,0,0x0,8
tick,0x7ff999646dc4,187212918,0,0x0,8
tick,0x7ff999646dc4,187231130,0,0x0,8
tick,0x7ff999646dc4,187244111,0,0x0,8
tick,0x7ff999646dc4,187260941,0,0x0,8
tick,0x7ff999646dc4,187277313,0,0x0,8
tick,0x7ff999646dc4,187290110,0,0x0,8
tick,0x7ff999646dc4,187304816,0,0x0,8
tick,0x7ff999646dc4,187320369,0,0x0,8
tick,0x7ff999646dc4,187335558,0,0x0,8
tick,0x7ff999646dc4,187350254,0,0x0,8
tick,0x7ff999646dc4,187365642,0,0x0,8
tick,0x7ff999646dc4,187381607,0,0x0,8
tick,0x7ff999646dc4,187397103,0,0x0,8
tick,0x7ff999646dc4,187413291,0,0x0,8
tick,0x7ff999646dc4,187429548,0,0x0,8
tick,0x7ff999646dc4,187446175,0,0x0,8
tick,0x7ff999646dc4,187460782,0,0x0,8
tick,0x7ff999646dc4,187477851,0,0x0,8
tick,0x7ff999646dc4,187489072,0,0x0,8
tick,0x7ff999646dc4,187503752,0,0x0,8
tick,0x7ff999646dc4,187519355,0,0x0,8
tick,0x7ff999646dc4,187535048,0,0x0,8
tick,0x7ff999646dc4,187550552,0,0x0,8
tick,0x7ff999646dc4,187565258,0,0x0,8
tick,0x7ff999646dc4,187580575,0,0x0,8
tick,0x7ff999646dc4,187595662,0,0x0,8
tick,0x7ff999646dc4,187611515,0,0x0,8
tick,0x7ff999646dc4,187626476,0,0x0,8
tick,0x7ff999646dc4,187642787,0,0x0,8
tick,0x7ff999646dc4,187658640,0,0x0,8
tick,0x7ff999646dc4,187672420,0,0x0,8
tick,0x7ff999646dc4,187687801,0,0x0,8
tick,0x7ff999646dc4,187703009,0,0x0,8
tick,0x7ff999646dc4,187719096,0,0x0,8
tick,0x7ff999646dc4,187734641,0,0x0,8
tick,0x7ff999646dc4,187749683,0,0x0,8
tick,0x7ff999646dc4,187765834,0,0x0,8
tick,0x7ff999646dc4,187780453,0,0x0,8
tick,0x7ff999646dc4,187796062,0,0x0,8
tick,0x7ff999646dc4,187810753,0,0x0,8
tick,0x7ff999646dc4,187825867,0,0x0,8
tick,0x7ff999646dc4,187841619,0,0x0,8
tick,0x7ff999646dc4,187857011,0,0x0,8
tick,0x7ff999646dc4,187872471,0,0x0,8
tick,0x7ff999646dc4,187887345,0,0x0,8
tick,0x7ff999646dc4,187902940,0,0x0,8
tick,0x7ff999646dc4,187918139,0,0x0,8
tick,0x7ff999646dc4,187932273,0,0x0,8
tick,0x7ff999646dc4,187948193,0,0x0,8
tick,0x7ff999646dc4,187962914,0,0x0,8
tick,0x7ff999646dc4,187978464,0,0x0,8
tick,0x7ff999646dc4,187993619,0,0x0,8
tick,0x7ff999646dc4,188008236,0,0x0,8
tick,0x7ff999646dc4,188023403,0,0x0,8
tick,0x7ff999646dc4,188038906,0,0x0,8
tick,0x7ff999646dc4,188054055,0,0x0,8
tick,0x7ff999646dc4,188069870,0,0x0,8
tick,0x7ff999646dc4,188085460,0,0x0,8
tick,0x7ff999646dc4,188100737,0,0x0,8
tick,0x7ff999646dc4,188115593,0,0x0,8
tick,0x7ff999646dc4,188131136,0,0x0,8
tick,0x7ff999646dc4,188146506,0,0x0,8
tick,0x7ff999646dc4,188162103,0,0x0,8
tick,0x7ff999646dc4,188177321,0,0x0,8
tick,0x7ff999646dc4,188193618,0,0x0,8
tick,0x7ff999646dc4,188208379,0,0x0,8
tick,0x7ff999646dc4,188222890,0,0x0,8
tick,0x7ff999646dc4,188238341,0,0x0,8
tick,0x7ff999646dc4,188254065,0,0x0,8
tick,0x7ff999646dc4,188269357,0,0x0,8
tick,0x7ff999646dc4,188285149,0,0x0,8
tick,0x7ff999646dc4,188299912,0,0x0,8
tick,0x7ff999646dc4,188315278,0,0x0,8
tick,0x7ff999646dc4,188330462,0,0x0,8
tick,0x7ff999646dc4,188346420,0,0x0,8
tick,0x7ff999646dc4,188361672,0,0x0,8
tick,0x7ff999646dc4,188376950,0,0x0,8
tick,0x7ff999646dc4,188392953,0,0x0,8
tick,0x7ff999646dc4,188408602,0,0x0,8
tick,0x7ff999646dc4,188422750,0,0x0,8
tick,0x7ff999646dc4,188437620,0,0x0,8
tick,0x7ff999646dc4,188452896,0,0x0,8
tick,0x7ff999646dc4,188468464,0,0x0,8
tick,0x7ff999646dc4,188484112,0,0x0,8
tick,0x7ff999646dc4,188499849,0,0x0,8
tick,0x7ff999646dc4,188515159,0,0x0,8
tick,0x7ff999646dc4,188530286,0,0x0,8
tick,0x7ff999646dc4,188545723,0,0x0,8
tick,0x7ff999646dc4,188560546,0,0x0,8
tick,0x7ff999646dc4,188576040,0,0x0,8
tick,0x7ff999646dc4,188592234,0,0x0,8
tick,0x7ff999646dc4,188607253,0,0x0,8
tick,0x7ff999646dc4,188621977,0,0x0,8
tick,0x7ff999646dc4,188636998,0,0x0,8
tick,0x7ff999646dc4,188652903,0,0x0,8
tick,0x7ff999646dc4,188668266,0,0x0,8
tick,0x7ff999646dc4,188683987,0,0x0,8
tick,0x7ff999646dc4,188699120,0,0x0,8
tick,0x7ff999646dc4,188715353,0,0x0,8
tick,0x7ff999646dc4,188730187,0,0x0,8
tick,0x7ff999646dc4,188745914,0,0x0,8
tick,0x7ff999646dc4,188759968,0,0x0,8
tick,0x7ff999646dc4,188776196,0,0x0,8
tick,0x7ff999646dc4,188790818,0,0x0,8
tick,0x7ff999646dc4,188806502,0,0x0,8
tick,0x7ff999646dc4,188822044,0,0x0,8
tick,0x7ff999646dc4,188838323,0,0x0,8
tick,0x7ff999646dc4,188852815,0,0x0,8
tick,0x7ff999646dc4,188868160,0,0x0,8
tick,0x7ff999646dc4,188883233,0,0x0,8
tick,0x7ff999646dc4,188899220,0,0x0,8
tick,0x7ff999646dc4,188914713,0,0x0,8
tick,0x7ff999646dc4,188930490,0,0x0,8
tick,0x7ff999646dc4,188945781,0,0x0,8
tick,0x7ff999646dc4,188959805,0,0x0,8
tick,0x7ff999646dc4,188975738,0,0x0,8
tick,0x7ff999646dc4,188990381,0,0x0,8
tick,0x7ff999646dc4,189005656,0,0x0,8
tick,0x7ff999646dc4,189021116,0,0x0,8
tick,0x7ff999646dc4,189037093,0,0x0,8
tick,0x7ff999646dc4,189052282,0,0x0,8
tick,0x7ff999646dc4,189067362,0,0x0,8
tick,0x7ff999646dc4,189083003,0,0x0,8
tick,0x7ff999646dc4,189098243,0,0x0,8
tick,0x7ff999646dc4,189112989,0,0x0,8
tick,0x7ff999646dc4,189128575,0,0x0,8
tick,0x7ff999646dc4,189144886,0,0x0,8
tick,0x7ff999646dc4,189161644,0,0x0,8
tick,0x7ff999646dc4,189174228,0,0x0,8
tick,0x7ff999646dc4,189189963,0,0x0,8
tick,0x7ff999646dc4,189205334,0,0x0,8
tick,0x7ff999646dc4,189219982,0,0x0,8
tick,0x7ff999646dc4,189235280,0,0x0,8
tick,0x7ff999646dc4,189250915,0,0x0,8
tick,0x7ff999646dc4,189266496,0,0x0,8
tick,0x7ff999646dc4,189282008,0,0x0,8
tick,0x7ff999646dc4,189296851,0,0x0,8
tick,0x7ff999646dc4,189311427,0,0x0,8
tick,0x7ff999646dc4,189326967,0,0x0,8
tick,0x7ff999646dc4,189342163,0,0x0,8
tick,0x7ff999646dc4,189358579,0,0x0,8
tick,0x7ff999646dc4,189373752,0,0x0,8
tick,0x7ff999646dc4,189388213,0,0x0,8
tick,0x7ff999646dc4,189403857,0,0x0,8
tick,0x7ff999646dc4,189418938,0,0x0,8
tick,0x7ff999646dc4,189435286,0,0x0,8
tick,0x7ff999646dc4,189450543,0,0x0,8
tick,0x7ff999646dc4,189466382,0,0x0,8
tick,0x7ff999646dc4,189481749,0,0x0,8
tick,0x7ff999646dc4,189496438,0,0x0,8
tick,0x7ff999646dc4,189511908,0,0x0,8
tick,0x7ff999646dc4,189526344,0,0x0,8
tick,0x7ff999646dc4,189543886,0,0x0,8
tick,0x7ff999646dc4,189557443,0,0x0,8
tick,0x7ff999646dc4,189573348,0,0x0,8
tick,0x7ff999646dc4,189588925,0,0x0,8
tick,0x7ff999646dc4,189603931,0,0x0,8
tick,0x7ff999646dc4,189619077,0,0x0,8
tick,0x7ff999646dc4,189634928,0,0x0,8
tick,0x7ff999646dc4,189649636,0,0x0,8
tick,0x7ff999646dc4,189665723,0,0x0,8
tick,0x7ff999646dc4,189680959,0,0x0,8
tick,0x7ff999646dc4,189696631,0,0x0,8
tick,0x7ff999646dc4,189711680,0,0x0,8
tick,0x7ff999646dc4,189726620,0,0x0,8
tick,0x7ff999646dc4,189741666,0,0x0,8
tick,0x7ff999646dc4,189756811,0,0x0,8
tick,0x7ff999646dc4,189772252,0,0x0,8
tick,0x7ff999646dc4,189788300,0,0x0,8
tick,0x7ff999646dc4,189803287,0,0x0,8
tick,0x7ff999646dc4,189818222,0,0x0,8
tick,0x7ff999646dc4,189834060,0,0x0,8
tick,0x7ff999646dc4,189849194,0,0x0,8
tick,0x7ff999646dc4,189863938,0,0x0,8
tick,0x7ff999646dc4,189879655,0,0x0,8
tick,0x7ff999646dc4,189895460,0,0x0,8
tick,0x7ff999646dc4,189911033,0,0x0,8
tick,0x7ff999646dc4,189924849,0,0x0,8
tick,0x7ff999646dc4,189940790,0,0x0,8
tick,0x7ff999646dc4,189956187,0,0x0,8
tick,0x7ff999646dc4,189970841,0,0x0,8
tick,0x7ff999646dc4,189986611,0,0x0,8
tick,0x7ff999646dc4,190002420,0,0x0,8
tick,0x7ff999646dc4,190018234,0,0x0,8
tick,0x7ff999646dc4,190032724,0,0x0,8
tick,0x7ff999646dc4,190047874,0,0x0,8
tick,0x7ff999646dc4,190063583,0,0x0,8
tick,0x7ff999646dc4,190078170,0,0x0,8
tick,0x7ff999646dc4,190094471,0,0x0,8
tick,0x7ff999646dc4,190108939,0,0x0,8
tick,0x7ff999646dc4,190124764,0,0x0,8
tick,0x7ff999646dc4,190139528,0,0x0,8
tick,0x7ff999646dc4,190155564,0,0x0,8
tick,0x7ff999646dc4,190169361,0,0x0,8
tick,0x7ff999646dc4,190184398,0,0x0,8
tick,0x7ff999646dc4,190200147,0,0x0,8
tick,0x7ff999646dc4,190216789,0,0x0,8
tick,0x7ff999646dc4,190231174,0,0x0,8
tick,0x7ff999646dc4,190246354,0,0x0,8
tick,0x7ff999646dc4,190261211,0,0x0,8
tick,0x7ff999646dc4,190276358,0,0x0,8
tick,0x7ff999646dc4,190292478,0,0x0,8
tick,0x7ff999646dc4,190307383,0,0x0,8
tick,0x7ff999646dc4,190323267,0,0x0,8
tick,0x7ff999646dc4,190338438,0,0x0,8
tick,0x7ff999646dc4,190353423,0,0x0,8
tick,0x7ff999646dc4,190368732,0,0x0,8
tick,0x7ff999646dc4,190384158,0,0x0,8
tick,0x7ff999646dc4,190400117,0,0x0,8
tick,0x7ff999646dc4,190415005,0,0x0,8
tick,0x7ff999646dc4,190430640,0,0x0,8
tick,0x7ff999646dc4,190446635,0,0x0,8
tick,0x7ff999646dc4,190463450,0,0x0,8
tick,0x7ff999646dc4,190475796,0,0x0,8
tick,0x7ff999646dc4,190491453,0,0x0,8
tick,0x7ff999646dc4,190506803,0,0x0,8
tick,0x7ff999646dc4,190522142,0,0x0,8
tick,0x7ff999646dc4,190537255,0,0x0,8
tick,0x7ff999646dc4,190553682,0,0x0,8
tick,0x7ff999646dc4,190568449,0,0x0,8
tick,0x7ff999646dc4,190583334,0,0x0,8
tick,0x7ff999646dc4,190600865,0,0x0,8
tick,0x7ff999646dc4,190614228,0,0x0,8
tick,0x7ff999646dc4,190631358,0,0x0,8
tick,0x7ff999646dc4,190646314,0,0x0,8
tick,0x7ff999646dc4,190661437,0,0x0,8
tick,0x7ff999646dc4,190674852,0,0x0,8
tick,0x7ff999646dc4,190690335,0,0x0,8
tick,0x7ff999646dc4,190705581,0,0x0,8
tick,0x7ff999646dc4,190721312,0,0x0,8
tick,0x7ff999646dc4,190736648,0,0x0,8
tick,0x7ff999646dc4,190752410,0,0x0,8
tick,0x7ff999646dc4,190767611,0,0x0,8
tick,0x7ff999646dc4,190782749,0,0x0,8
tick,0x7ff999646dc4,190798125,0,0x0,8
tick,0x7ff999646dc4,190813556,0,0x0,8
tick,0x7ff999646dc4,190828796,0,0x0,8
tick,0x7ff999646dc4,190844465,0,0x0,8
tick,0x7ff999646dc4,190859488,0,0x0,8
tick,0x7ff999646dc4,190874792,0,0x0,8
tick,0x7ff999646dc4,190890136,0,0x0,8
tick,0x7ff999646dc4,190905327,0,0x0,8
tick,0x7ff999646dc4,190920576,0,0x0,8
tick,0x7ff999646dc4,190935280,0,0x0,8
tick,0x7ff999646dc4,190951011,0,0x0,8
tick,0x7ff999646dc4,190966215,0,0x0,8
tick,0x7ff999646dc4,190982680,0,0x0,8
tick,0x7ff999646dc4,190997817,0,0x0,8
tick,0x7ff999646dc4,191013135,0,0x0,8
tick,0x7ff999646dc4,191029266,0,0x0,8
tick,0x7ff999646dc4,191043060,0,0x0,8
tick,0x7ff999646dc4,191058863,0,0x0,8
tick,0x7ff999646dc4,191074373,0,0x0,8
tick,0x7ff999646dc4,191089445,0,0x0,8
tick,0x7ff999646dc4,191104207,0,0x0,8
tick,0x7ff999646dc4,191119974,0,0x0,8
tick,0x7ff999646dc4,191135202,0,0x0,8
tick,0x7ff999646dc4,191150599,0,0x0,8
tick,0x7ff999646dc4,191166377,0,0x0,8
tick,0x7ff999646dc4,191182858,0,0x0,8
tick,0x7ff999646dc4,191198754,0,0x0,8
tick,0x7ff999646dc4,191211820,0,0x0,8
tick,0x7ff999646dc4,191228470,0,0x0,8
tick,0x7ff999646dc4,191242425,0,0x0,8
tick,0x7ff999646dc4,191257611,0,0x0,8
tick,0x7ff999646dc4,191272555,0,0x0,8
tick,0x7ff999646dc4,191289204,0,0x0,8
tick,0x7ff999646dc4,191303985,0,0x0,8
tick,0x7ff999646dc4,191318464,0,0x0,8
tick,0x7ff999646dc4,191333757,0,0x0,8
tick,0x7ff999646dc4,191349440,0,0x0,8
tick,0x7ff999646dc4,191364737,0,0x0,8
tick,0x7ff999646dc4,191381585,0,0x0,8
tick,0x7ff999646dc4,191396110,0,0x0,8
tick,0x7ff999646dc4,191411479,0,0x0,8
tick,0x7ff999646dc4,191425822,0,0x0,8
tick,0x7ff999646dc4,191441215,0,0x0,8
tick,0x7ff999646dc4,191456600,0,0x0,8
tick,0x7ff999646dc4,191472079,0,0x0,8
tick,0x7ff999646dc4,191487233,0,0x0,8
tick,0x7ff999646dc4,191502559,0,0x0,8
tick,0x7ff999646dc4,191518046,0,0x0,8
tick,0x7ff999646dc4,191533228,0,0x0,8
tick,0x7ff999646dc4,191549458,0,0x0,8
tick,0x7ff999646dc4,191563633,0,0x0,8
tick,0x7ff999646dc4,191579103,0,0x0,8
tick,0x7ff999646dc4,191596851,0,0x0,8
tick,0x7ff999646dc4,191609923,0,0x0,8
tick,0x7ff999646dc4,191625345,0,0x0,8
tick,0x7ff999646dc4,191640375,0,0x0,8
tick,0x7ff999646dc4,191656268,0,0x0,8
tick,0x7ff999646dc4,191671276,0,0x0,8
tick,0x7ff999646dc4,191686490,0,0x0,8
tick,0x7ff999646dc4,191702254,0,0x0,8
tick,0x7ff999646dc4,191718099,0,0x0,8
tick,0x7ff999646dc4,191733777,0,0x0,8
tick,0x7ff999646dc4,191748212,0,0x0,8
tick,0x7ff999646dc4,191764104,0,0x0,8
tick,0x7ff999646dc4,191780468,0,0x0,8
tick,0x7ff999646dc4,191793660,0,0x0,8
tick,0x7ff999646dc4,191809325,0,0x0,8
tick,0x7ff999646dc4,191824781,0,0x0,8
tick,0x7ff999646dc4,191840144,0,0x0,8
tick,0x7ff999646dc4,191854984,0,0x0,8
tick,0x7ff999646dc4,191870612,0,0x0,8
tick,0x7ff999646dc4,191886126,0,0x0,8
tick,0x7ff999646dc4,191902216,0,0x0,8
tick,0x7ff999646dc4,191917047,0,0x0,8
tick,0x7ff999646dc4,191934294,0,0x0,8
tick,0x7ff999646dc4,191948289,0,0x0,8
tick,0x7ff999646dc4,191965184,0,0x0,8
tick,0x7ff999646dc4,191977870,0,0x0,8
tick,0x7ff999646dc4,191993151,0,0x0,8
tick,0x7ff999646dc4,192008849,0,0x0,8
tick,0x7ff999646dc4,192024937,0,0x0,8
tick,0x7ff999646dc4,192040913,0,0x0,8
tick,0x7ff999646dc4,192056776,0,0x0,8
tick,0x7ff999646dc4,192076031,0,0x0,8
tick,0x7ff999646dc4,192095306,0,0x0,8
tick,0x7ff999646dc4,192103184,0,0x0,8
tick,0x7ff999646dc4,192116417,0,0x0,8
tick,0x7ff999646dc4,192131573,0,0x0,8
tick,0x7ff999646dc4,192147285,0,0x0,8
tick,0x7ff999646dc4,192162718,0,0x0,8
tick,0x7ff999646dc4,192177837,0,0x0,8
tick,0x7ff999646dc4,192193141,0,0x0,8
tick,0x7ff999646dc4,192208401,0,0x0,8
tick,0x7ff999646dc4,192224503,0,0x0,8
tick,0x7ff999646dc4,192239059,0,0x0,8
tick,0x7ff999646dc4,192254725,0,0x0,8
tick,0x7ff999646dc4,192270233,0,0x0,8
tick,0x7ff999646dc4,192284763,0,0x0,8
tick,0x7ff999646dc4,192299539,0,0x0,8
tick,0x7ff999646dc4,192315235,0,0x0,8
tick,0x7ff999646dc4,192330246,0,0x0,8
tick,0x7ff999646dc4,192345025,0,0x0,8
tick,0x7ff999646dc4,192360972,0,0x0,8
tick,0x7ff999646dc4,192376378,0,0x0,8
tick,0x7ff999646dc4,192391592,0,0x0,8
tick,0x7ff999646dc4,192406467,0,0x0,8
tick,0x7ff999646dc4,192421917,0,0x0,8
tick,0x7ff999646dc4,192437432,0,0x0,8
tick,0x7ff999646dc4,192453276,0,0x0,8
tick,0x7ff999646dc4,192468493,0,0x0,8
tick,0x7ff999646dc4,192483335,0,0x0,8
tick,0x7ff999646dc4,192498483,0,0x0,8
tick,0x7ff999646dc4,192513966,0,0x0,8
tick,0x7ff999646dc4,192528409,0,0x0,8
tick,0x7ff999646dc4,192544064,0,0x0,8
tick,0x7ff999646dc4,192559163,0,0x0,8
tick,0x7ff999646dc4,192574919,0,0x0,8
tick,0x7ff999646dc4,192590536,0,0x0,8
tick,0x7ff999646dc4,192605302,0,0x0,8
tick,0x7ff999646dc4,192620458,0,0x0,8
tick,0x7ff999646dc4,192635988,0,0x0,8
tick,0x7ff999646dc4,192651219,0,0x0,8
tick,0x7ff999646dc4,192666683,0,0x0,8
tick,0x7ff999646dc4,192682097,0,0x0,8
tick,0x7ff999646dc4,192698061,0,0x0,8
tick,0x7ff999646dc4,192712898,0,0x0,8
tick,0x7ff999646dc4,192728051,0,0x0,8
tick,0x7ff999646dc4,192743164,0,0x0,8
tick,0x7ff999646dc4,192758698,0,0x0,8
tick,0x7ff999646dc4,192774009,0,0x0,8
tick,0x7ff999646dc4,192789788,0,0x0,8
tick,0x7ff999646dc4,192805599,0,0x0,8
tick,0x7ff999646dc4,192820711,0,0x0,8
tick,0x7ff999646dc4,192835313,0,0x0,8
tick,0x7ff999646dc4,192850587,0,0x0,8
tick,0x7ff999646dc4,192865411,0,0x0,8
tick,0x7ff999646dc4,192881040,0,0x0,8
tick,0x7ff999646dc4,192896976,0,0x0,8
tick,0x7ff999646dc4,192912247,0,0x0,8
tick,0x7ff999646dc4,192926852,0,0x0,8
tick,0x7ff999646dc4,192942694,0,0x0,8
tick,0x7ff999646dc4,192958144,0,0x0,8
tick,0x7ff999646dc4,192973973,0,0x0,8
tick,0x7ff999646dc4,192988455,0,0x0,8
tick,0x7ff999646dc4,193004105,0,0x0,8
tick,0x7ff999646dc4,193019658,0,0x0,8
tick,0x7ff999646dc4,193035345,0,0x0,8
tick,0x7ff999646dc4,193050411,0,0x0,8
tick,0x7ff999646dc4,193065420,0,0x0,8
tick,0x7ff999646dc4,193081741,0,0x0,8
tick,0x7ff999646dc4,193097233,0,0x0,8
tick,0x7ff999646dc4,193113197,0,0x0,8
tick,0x7ff999646dc4,193127302,0,0x0,8
tick,0x7ff999646dc4,193142206,0,0x0,8
tick,0x7ff999646dc4,193157933,0,0x0,8
tick,0x7ff999646dc4,193173025,0,0x0,8
tick,0x7ff999646dc4,193188420,0,0x0,8
tick,0x7ff999646dc4,193203812,0,0x0,8
tick,0x7ff999646dc4,193220251,0,0x0,8
tick,0x7ff999646dc4,193234698,0,0x0,8
tick,0x7ff999646dc4,193249933,0,0x0,8
tick,0x7ff999646dc4,193266416,0,0x0,8
tick,0x7ff999646dc4,193280479,0,0x0,8
tick,0x7ff999646dc4,193295779,0,0x0,8
tick,0x7ff999646dc4,193311654,0,0x0,8
tick,0x7ff999646dc4,193326534,0,0x0,8
tick,0x7ff999646dc4,193342580,0,0x0,8
tick,0x7ff999646dc4,193357226,0,0x0,8
tick,0x7ff999646dc4,193372878,0,0x0,8
tick,0x7ff999646dc4,193387379,0,0x0,8
tick,0x7ff999646dc4,193402315,0,0x0,8
tick,0x7ff999646dc4,193417976,0,0x0,8
tick,0x7ff999646dc4,193433643,0,0x0,8
tick,0x7ff999646dc4,193449255,0,0x0,8
tick,0x7ff999646dc4,193464179,0,0x0,8
tick,0x7ff999646dc4,193479248,0,0x0,8
tick,0x7ff999646dc4,193495310,0,0x0,8
tick,0x7ff999646dc4,193510497,0,0x0,8
tick,0x7ff999646dc4,193525895,0,0x0,8
tick,0x7ff999646dc4,193541365,0,0x0,8
tick,0x7ff999646dc4,193559379,0,0x0,8
tick,0x7ff999646dc4,193571702,0,0x0,8
tick,0x7ff999646dc4,193587432,0,0x0,8
tick,0x7ff999646dc4,193602897,0,0x0,8
tick,0x7ff999646dc4,193618668,0,0x0,8
tick,0x7ff999646dc4,193634048,0,0x0,8
tick,0x7ff999646dc4,193649830,0,0x0,8
tick,0x7ff999646dc4,193665629,0,0x0,8
tick,0x7ff999646dc4,193680015,0,0x0,8
tick,0x7ff999646dc4,193695313,0,0x0,8
tick,0x7ff999646dc4,193710562,0,0x0,8
tick,0x7ff999646dc4,193726290,0,0x0,8
tick,0x7ff999646dc4,193741671,0,0x0,8
tick,0x7ff999646dc4,193757794,0,0x0,8
tick,0x7ff999646dc4,193772922,0,0x0,8
tick,0x7ff999646dc4,193789215,0,0x0,8
tick,0x7ff999646dc4,193802638,0,0x0,8
tick,0x7ff999646dc4,193818104,0,0x0,8
tick,0x7ff999646dc4,193833913,0,0x0,8
tick,0x7ff999646dc4,193848987,0,0x0,8
tick,0x7ff999646dc4,193865301,0,0x0,8
tick,0x7ff999646dc4,193879975,0,0x0,8
tick,0x7ff999646dc4,193895100,0,0x0,8
tick,0x7ff999646dc4,193910556,0,0x0,8
tick,0x7ff999646dc4,193925793,0,0x0,8
tick,0x7ff999646dc4,193941164,0,0x0,8
tick,0x7ff999646dc4,193956338,0,0x0,8
tick,0x7ff999646dc4,193973135,0,0x0,8
tick,0x7ff999646dc4,193988768,0,0x0,8
tick,0x7ff999646dc4,194002727,0,0x0,8
tick,0x7ff999646dc4,194017439,0,0x0,8
tick,0x7ff999646dc4,194033859,0,0x0,8
tick,0x7ff999646dc4,194049064,0,0x0,8
tick,0x7ff999646dc4,194064726,0,0x0,8
tick,0x7ff999646dc4,194080386,0,0x0,8
tick,0x7ff999646dc4,194096903,0,0x0,8
tick,0x7ff999646dc4,194110643,0,0x0,8
tick,0x7ff999646dc4,194126430,0,0x0,8
tick,0x7ff999646dc4,194140964,0,0x0,8
tick,0x7ff999646dc4,194157198,0,0x0,8
tick,0x7ff999646dc4,194172148,0,0x0,8
tick,0x7ff999646dc4,194187294,0,0x0,8
tick,0x7ff999646dc4,194202926,0,0x0,8
tick,0x7ff999646dc4,194217737,0,0x0,8
tick,0x7ff999646dc4,194233400,0,0x0,8
tick,0x7ff999646dc4,194248226,0,0x0,8
tick,0x7ff999646dc4,194263448,0,0x0,8
tick,0x7ff999646dc4,194278888,0,0x0,8
tick,0x7ff999646dc4,194294521,0,0x0,8
tick,0x7ff999646dc4,194310049,0,0x0,8
tick,0x7ff999646dc4,194325085,0,0x0,8
tick,0x7ff999646dc4,194341371,0,0x0,8
tick,0x7ff999646dc4,194356057,0,0x0,8
tick,0x7ff999646dc4,194370241,0,0x0,8
tick,0x7ff999646dc4,194386729,0,0x0,8
tick,0x7ff999646dc4,194401446,0,0x0,8
tick,0x7ff999646dc4,194418457,0,0x0,8
tick,0x7ff999646dc4,194431406,0,0x0,8
tick,0x7ff999646dc4,194447660,0,0x0,8
tick,0x7ff999646dc4,194462684,0,0x0,8
tick,0x7ff999646dc4,194478157,0,0x0,8
tick,0x7ff999646dc4,194493501,0,0x0,8
tick,0x7ff999646dc4,194509317,0,0x0,8
tick,0x7ff999646dc4,194525042,0,0x0,8
tick,0x7ff999646dc4,194540177,0,0x0,8
tick,0x7ff999646dc4,194554549,0,0x0,8
tick,0x7ff999646dc4,194570310,0,0x0,8
tick,0x7ff999646dc4,194585505,0,0x0,8
tick,0x7ff999646dc4,194600422,0,0x0,8
tick,0x7ff999646dc4,194616116,0,0x0,8
tick,0x7ff999646dc4,194632108,0,0x0,8
tick,0x7ff999646dc4,194646756,0,0x0,8
tick,0x7ff999646dc4,194662084,0,0x0,8
tick,0x7ff999646dc4,194677181,0,0x0,8
tick,0x7ff999646dc4,194692189,0,0x0,8
tick,0x7ff999646dc4,194707774,0,0x0,8
tick,0x7ff999646dc4,194723857,0,0x0,8
tick,0x7ff999646dc4,194739115,0,0x0,8
tick,0x7ff999646dc4,194753920,0,0x0,8
tick,0x7ff999646dc4,194769472,0,0x0,8
tick,0x7ff999646dc4,194784645,0,0x0,8
tick,0x7ff999646dc4,194800354,0,0x0,8
tick,0x7ff999646dc4,194815484,0,0x0,8
tick,0x7ff999646dc4,194832285,0,0x0,8
tick,0x7ff999646dc4,194848205,0,0x0,8
tick,0x7ff999646dc4,194862313,0,0x0,8
tick,0x7ff999646dc4,194877172,0,0x0,8
tick,0x7ff999646dc4,194893166,0,0x0,8
tick,0x7ff999646dc4,194907525,0,0x0,8
tick,0x7ff999646dc4,194923697,0,0x0,8
tick,0x7ff999646dc4,194939209,0,0x0,8
tick,0x7ff999646dc4,194954473,0,0x0,8
tick,0x7ff999646dc4,194969372,0,0x0,8
tick,0x7ff999646dc4,194985123,0,0x0,8
tick,0x7ff999646dc4,195000302,0,0x0,8
tick,0x7ff999646dc4,195015242,0,0x0,8
tick,0x7ff999646dc4,195031082,0,0x0,8
tick,0x7ff999646dc4,195046650,0,0x0,8
tick,0x7ff999646dc4,195062043,0,0x0,8
tick,0x7ff999646dc4,195077021,0,0x0,8
tick,0x7ff999646dc4,195092681,0,0x0,8
tick,0x7ff999646dc4,195108221,0,0x0,8
tick,0x7ff999646dc4,195122636,0,0x0,8
tick,0x7ff999646dc4,195138799,0,0x0,8
tick,0x7ff999646dc4,195154894,0,0x0,8
tick,0x7ff999646dc4,195169532,0,0x0,8
tick,0x7ff999646dc4,195183963,0,0x0,8
tick,0x7ff999646dc4,195200558,0,0x0,8
tick,0x7ff999646dc4,195214526,0,0x0,8
tick,0x7ff999646dc4,195230108,0,0x0,8
tick,0x7ff999646dc4,195244954,0,0x0,8
tick,0x7ff999646dc4,195261876,0,0x0,8
tick,0x7ff999646dc4,195276655,0,0x0,8
tick,0x7ff999646dc4,195292051,0,0x0,8
tick,0x7ff999646dc4,195307354,0,0x0,8
tick,0x7ff999646dc4,195323035,0,0x0,8
tick,0x7ff999646dc4,195338485,0,0x0,8
tick,0x7ff999646dc4,195353340,0,0x0,8
tick,0x7ff999646dc4,195368953,0,0x0,8
tick,0x7ff999646dc4,195384156,0,0x0,8
tick,0x7ff999646dc4,195399657,0,0x0,8
tick,0x7ff999646dc4,195413954,0,0x0,8
tick,0x7ff999646dc4,195429063,0,0x0,8
tick,0x7ff999646dc4,195444305,0,0x0,8
tick,0x7ff999646dc4,195460030,0,0x0,8
tick,0x7ff999646dc4,195475694,0,0x0,8
tick,0x7ff999646dc4,195491174,0,0x0,8
tick,0x7ff999646dc4,195506033,0,0x0,8
tick,0x7ff999646dc4,195521497,0,0x0,8
tick,0x7ff999646dc4,195536948,0,0x0,8
tick,0x7ff999646dc4,195552220,0,0x0,8
tick,0x7ff999646dc4,195567137,0,0x0,8
tick,0x7ff999646dc4,195583250,0,0x0,8
tick,0x7ff999646dc4,195599074,0,0x0,8
tick,0x7ff999646dc4,195613693,0,0x0,8
tick,0x7ff999646dc4,195628412,0,0x0,8
tick,0x7ff999646dc4,195644555,0,0x0,8
tick,0x7ff999646dc4,195659259,0,0x0,8
tick,0x7ff999646dc4,195674668,0,0x0,8
tick,0x7ff999646dc4,195690898,0,0x0,8
tick,0x7ff999646dc4,195705733,0,0x0,8
tick,0x7ff999646dc4,195720572,0,0x0,8
tick,0x7ff999646dc4,195735597,0,0x0,8
tick,0x7ff999646dc4,195751080,0,0x0,8
tick,0x7ff999646dc4,195766367,0,0x0,8
tick,0x7ff999646dc4,195781668,0,0x0,8
tick,0x7ff999646dc4,195797579,0,0x0,8
tick,0x7ff999646dc4,195813244,0,0x0,8
tick,0x7ff999646dc4,195828392,0,0x0,8
tick,0x7ff999646dc4,195843366,0,0x0,8
tick,0x7ff999646dc4,195858357,0,0x0,8
tick,0x7ff999646dc4,195873619,0,0x0,8
tick,0x7ff999646dc4,195889231,0,0x0,8
tick,0x7ff999646dc4,195904951,0,0x0,8
tick,0x7ff999646dc4,195920668,0,0x0,8
tick,0x7ff999646dc4,195935596,0,0x0,8
tick,0x7ff999646dc4,195950748,0,0x0,8
tick,0x7ff999646dc4,195966176,0,0x0,8
tick,0x7ff999646dc4,195981146,0,0x0,8
tick,0x7ff999646dc4,195996446,0,0x0,8
code-creation,LazyCompile,10,196003714,0x3d8dfda6cd6,130,exit node:internal/process/per_thread:181:16,0x13f332d8b00,~
code-source-info,0x3d8dfda6cd6,30,4965,5449,C0O4979C5O4987C17O4999C20O4987C26O5026C31O5043C36O5057C43O5074C47O5089C52O5102C58O5121C64O5138C68O5153C73O5161C86O5182C94O5161C100O5402C105O5410C115O5429C123O5410C129O5448,,
